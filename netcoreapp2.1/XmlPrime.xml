<?xml version="1.0" encoding="UTF-8"?>
<doc>
  <assembly>
    <name>XmlPrime</name>
  </assembly>
  <members>
    <member name="T:XmlPrime.CodeGeneration">
      <summary>
            Specifies whether MSIL code is generated.
            </summary>
      <remarks>
        <para>This is used to control whether an XPath expression, XQuery program or XSLT stylesheet is compiled dynamic methods.</para>
      </remarks>
    </member>
    <member name="F:XmlPrime.CodeGeneration.None">
      <summary>
            Specifies that the XPath expression, XQuery program or XSLT stylesheet are not compiled to dynamic methods. 
            This often yields faster execution but may increase compilation time.
            </summary>
    </member>
    <member name="F:XmlPrime.CodeGeneration.DynamicMethods">
      <summary>
            Specifies that the XPath expression, XQuery program or XSLT stylesheet is compiled to dynamic methods. 
            This often yields faster execution but may increase compilation time.
            </summary>
      <remarks>
        <para>This is an experimental feature available only in the comercially licenced product.</para>
        <para>Benchmarking has shown that using dynamic methods typeically offers 25% to 50% reduction in execution time, with a 25% increase in compilation time.</para>
        <para>In some cases, a 75% to 80% reduction may be achieved.</para>
      </remarks>
    </member>
    <member name="T:XmlPrime.IResolvedDocument">
      <summary>
            Defines the methods supported by a document that has been returned from an <see cref="T:XmlPrime.IDocumentResolver"/>.
            </summary>
    </member>
    <member name="M:XmlPrime.IResolvedDocument.GetFragment(System.String)">
      <summary>
            Resolves a fragment identifier to a node in the document.
            </summary>
      <param name="fragment">The fragment identifier.</param>
      <returns>A <see cref="T:System.Xml.XPath.XPathNavigator"/> instance pointing at the node referred to by <paramref name="fragment"/>.</returns>
      <remarks>
        <para>
            Currently fragments are supported only for the XML media types.  These are <c>text/xml</c>, <c>application/xml</c> and 
            <c>*/*+xml</c> where * represents a series of characters.  In this case only NCName fragments are resolved.  If the fragment 
            identifier is an XPointer expression or is not a valid NCName then a <c>XTRE1160</c><see cref="T:XmlPrime.XdmException"/> is raised.
            </para>
        <para>
            If the media type of this document is not known (<see cref="P:XmlPrime.IResolvedDocument.MediaType"/> is <see langword="null"/>) then it is assumed to be
            <c>text/xml</c>, but if any errors would be raised then the root of the document is returned instead.
            </para>
      </remarks>
      <exception cref="T:XmlPrime.XdmException">
            An <c>XTRE1160</c> error is raised if the media type is not supported, or if the fragment is invalid for this media type.
            </exception>
    </member>
    <member name="P:XmlPrime.IResolvedDocument.MediaType">
      <summary>
              Gets or sets the media-type of the resolved resource.
            </summary>
      <value>The media-type of the resolved resource, or <see langword="null"/> if it is unknown.</value>
      <remarks>
        <para>
                This property contains the media type with all optional parameters stripped.
              </para>
        <para>
                The media type is used to resolve URI fragments in a document.  Fragments are resolved for any media types
                specified as XML Media Types in <c>RFC3023</c>.
              </para>
      </remarks>
      <seealso href="http://tools.ietf.org/html/rfc3023"/>
    </member>
    <member name="T:XmlPrime.IResolvedResource">
      <summary>
            Defines the methods supported by a resource that has been returned from an <see cref="T:XmlPrime.IResourceResolver"/>.
            </summary>
    </member>
    <member name="M:XmlPrime.IResolvedResource.GetStream">
      <summary>
              Gets a <see cref="T:System.IO.Stream"/> over the resource.
            </summary>
      <returns>A <see cref="T:System.IO.Stream"/> over the resource.</returns>
    </member>
    <member name="M:XmlPrime.IResolvedResource.GetTextReader(System.Text.Encoding)">
      <summary>
            Gets a <see cref="T:System.IO.TextReader"/> over the resource.
            </summary>
      <param name="encoding">
            The encoding to use if it has not been specified.  This is equivalent to the <c>$encoding</c> argument
            on <c>fn:unparsed-text</c>.
            </param>
      <returns>
            A <see cref="T:System.IO.TextReader"/> over the resource.
            </returns>
      <remarks>
        <para>This will cause the encoding of the resource to be set, if it has not been already.</para>
        <para>The behavior of this method is the same as the <c>unparsed-text</c> function.</para>
      </remarks>
      <exception cref="T:System.Xml.XmlException">The encoding specified is not supported.</exception>
    </member>
    <member name="P:XmlPrime.IResolvedResource.EncodingName">
      <summary>
              Gets the name of the encoding used by the resource.
            </summary>
      <value>The name of the encoding used by the resource.</value>
    </member>
    <member name="P:XmlPrime.IResolvedResource.Encoding">
      <summary>
              Gets the encoding used by the resource, if it has been resolved.
            </summary>
      <value>The encoding, or <see langword="null"/> if the encoding has not been determined.</value>
    </member>
    <member name="P:XmlPrime.IResolvedResource.MediaType">
      <summary>
              Gets or sets the media-type of the resolved resource.
            </summary>
      <value>The media-type of the resolved resource, or <see langword="null"/> if it is unknown.</value>
      <remarks>
        <para>
                This property contains the media type with all optional parameters stripped.
              </para>
        <para>
                The media type is used to resolve URI fragments in a document.  Fragments are resolved for any media types
                specified as XML Media Types in <c>RFC3023</c>.
              </para>
      </remarks>
      <seealso href="http://tools.ietf.org/html/rfc3023"/>
    </member>
    <member name="T:XmlPrime.Collation">
      <summary>
            Represents a collation for use in XQuery and XPath functions.
            </summary>
      <remarks>
        <para>A collation is used to determine the sorting order of strings of characters.</para>
        <para>
            Built in implementations of <see cref="T:XmlPrime.Collation"/> are accessible through the <see cref="M:XmlPrime.Collation.CultureCollation(System.Globalization.CultureInfo,System.Globalization.CompareOptions,System.Xml.XPath.XmlCaseOrder)"/>
            method and the <see cref="P:XmlPrime.Collation.CodepointCollation"/> property.
            </para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xquery-operators/#collations">[XQuery 1.0 and XPath 2.0 Functions and Operators] 7.3.1 Collations</seealso>
    </member>
    <member name="M:XmlPrime.Collation.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.Collation"/> class.
            </summary>
    </member>
    <member name="M:XmlPrime.Collation.CultureCollation(System.Globalization.CultureInfo,System.Xml.XPath.XmlCaseOrder)">
      <summary>
            Creates a new <see cref="T:XmlPrime.Collation"/> instance which uses a <see cref="T:System.Globalization.CultureInfo"/> and <see cref="T:System.Xml.XPath.XmlCaseOrder"/>
            to perform string comparisons.  
            </summary>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object defining the collation.</param>
      <param name="caseOrder">A <see cref="T:System.Xml.XPath.XmlCaseOrder"/> value specifying the relative order of upper and lower case characters.</param>
      <returns>A new <see cref="T:XmlPrime.Collation"/> object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="culture"/> is <see langword="null"/>.
            </exception>
      <remarks>If <paramref name="caseOrder"/> is <see cref="F:System.Xml.XPath.XmlCaseOrder.None"/> then the returned collation is case insensitive.</remarks>
    </member>
    <member name="M:XmlPrime.Collation.CultureCollation(System.Globalization.CultureInfo,System.Globalization.CompareOptions,System.Xml.XPath.XmlCaseOrder)">
      <summary>
            Creates a new <see cref="T:XmlPrime.Collation"/> instance which uses a <see cref="T:System.Globalization.CultureInfo"/> and <see cref="T:System.Xml.XPath.XmlCaseOrder"/>
            to perform string comparisons.
            </summary>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object defining the collation.</param>
      <param name="options">The comparison options.</param>
      <param name="caseOrder">A <see cref="T:System.Xml.XPath.XmlCaseOrder"/> value specifying the relative order of upper and lower case characters.</param>
      <returns>
            A new <see cref="T:XmlPrime.Collation"/> object.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="culture"/> is <see langword="null"/>.</exception>
      <remarks>
            If <paramref name="caseOrder"/> is <see cref="F:System.Xml.XPath.XmlCaseOrder.None"/> then the returned collation is case insensitive.
            </remarks>
    </member>
    <member name="M:XmlPrime.Collation.CultureCollation(System.Globalization.CultureInfo)">
      <summary>
            Creates a new <see cref="T:XmlPrime.Collation"/> instance which uses a <see cref="T:System.Globalization.CultureInfo"/> to perform string comparisons.
            </summary>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object defining the collation.</param>
      <returns>A new <see cref="T:XmlPrime.Collation"/> object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="culture"/> is <see langword="null"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.Collation.AreEqual(System.String,System.String)">
      <summary>
            Compares two specified <see cref="T:System.String"/> values for equality under this collation.
            </summary>
      <param name="value1">The first <see cref="T:System.String"/> to compare.</param>
      <param name="value2">The second <see cref="T:System.String"/> to compare.</param>
      <returns>
        <see langword="true"/> if the two strings are equal; otherwise <see langword="false"/>.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value1"/> or <paramref name="value2"/> is <see langword="null"/>.
            </exception>
      <remarks>
        <para>
            This method implements the equality and inequality operators under this collation, and should follow the
            same semantics.
            </para>
        <para>
            The default implementation calls the <see cref="M:XmlPrime.Collation.Compare(System.String,System.String)"/> method and compares the result with <c>0</c>.
            </para>
      </remarks>
    </member>
    <member name="M:XmlPrime.Collation.Compare(System.String,System.String)">
      <summary>
            Compares two specified <see cref="T:System.String"/> objects under this collation.
            </summary>
      <param name="value1">The first <see cref="T:System.String"/> to compare.</param>
      <param name="value2">The second <see cref="T:System.String"/> to compare.</param>
      <returns>
        <para>
            A signed number that indicates the relative order of  <paramref name="value1"/> and 
            <paramref name="value2"/>. The return value has the following meanings.
            </para>
        <list type="bullet">
          <item>
            <description>Less than zero indicates that <paramref name="value1"/> is less than <paramref name="value2"/>.</description>
          </item>
          <item>
            <description>Zero indicates that <paramref name="value1"/> is equal to <paramref name="value2"/>.</description>
          </item>
          <item>
            <description>Greater than zero indicates that <paramref name="value1"/> is greater than <paramref name="value2"/>.</description>
          </item>
        </list>
      </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value1"/> or <paramref name="value2"/> is <see langword="null"/>.
            </exception>
      <remarks>
            This method implements the <c>fn:compare</c> function, and is used by the greater than, greater equal, less
            than and less equal operators for the specified collation, and should follow the same semantics.
            </remarks>
      <seealso href="http://www.w3.org/TR/xquery-operators/#func-compare">[FO] 7.3.2 fn:compare</seealso>
    </member>
    <member name="M:XmlPrime.Collation.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)">
      <summary>
            Compares two specified <see cref="T:System.String"/> objects.
            </summary>
      <param name="value1">The first string to use in the comparison.</param>
      <param name="index1">The position of the substring within <paramref name="value1"/>.</param>
      <param name="value2">The second string to use in the comparison.</param>
      <param name="index2">The position of the substring within <paramref name="value2"/>. </param>
      <param name="length">The maximum number of characters in the substrings to compare.</param>
      <returns>
            -1, 0, or 1, depending on whether the value of the <paramref name="value1"/> is respectively
            less than, equal to, or greater than the value of <paramref name="value2"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value1"/> or <paramref name="value2"/> is <see langword="null"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.Collation.EndsWith(System.String,System.String)">
      <summary>
            Returns a boolean value indicating whether one string ends with a specified suffix under this collation.
            </summary>
      <param name="value">A <see cref="T:System.String"/> value.</param>
      <param name="suffix">The <see cref="T:System.String"/> suffix to find in <paramref name="value"/>.</param>
      <returns>
        <see langword="true"/> if the <paramref name="value"/> ends with <paramref name="suffix"/>; otherwise
            <see langword="false"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> or <paramref name="suffix"/> is <see langword="null"/>.
            </exception>
      <remarks>
        <para>
            This method implements the <c>fn:ends-with</c> function for the specified collation, and should follow the
            same semantics.
            </para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xquery-operators/#func-ends-with">[FO] 7.5.3 fn:ends-with</seealso>
      <seealso href="http://www.w3.org/XML/Group/xsl-query-specs/errata/xpath-functions-errata.html#E17">FO.E17</seealso>
    </member>
    <member name="M:XmlPrime.Collation.GetHashCode(System.String)">
      <summary>
            Gets a hash code for the specified <see cref="T:System.String"/> under this collation.
            </summary>
      <param name="value">A <see cref="T:System.String"/> value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
      <returns>
            A <see cref="T:System.Int32"/> hash code suitable for use in hashing algorithms and data structures such as a hash table.
            </returns>
    </member>
    <member name="M:XmlPrime.Collation.GetSortKey(System.String)">
      <summary>
            Gets the sort key for the specified <see cref="T:System.String"/> as a byte array under this collation.
            </summary>
      <param name="value">A <see cref="T:System.String"/> value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
      <returns>
            A byte array representing all strings equal to <paramref name="value"/>.
            </returns>
      <remarks>
        <para>
            Currently the sort keys returned are only used by XmlPrime to compare equality, so there is no requirement other than that they
            uniquely identify the string returned.  In the future however we intend to use this method for performing sorting operations,
            in which case the sort keys returned may need to be valid Unicode sort keys.
            </para>
      </remarks>
    </member>
    <member name="M:XmlPrime.Collation.IndexOf(System.String,System.String)">
      <summary>
            Returns the index of the first occurrence of a <see cref="T:System.String"/> within another <see cref="T:System.String"/>
            under this collation.
            </summary>
      <param name="value">A <see cref="T:System.String"/> value.</param>
      <param name="substring">The <see cref="T:System.String"/> to find within <paramref name="value"/>.</param>
      <returns>
            The index of the first occurrence of <paramref name="substring"/> within <paramref name="value"/> if found; 
            otherwise <c>-1</c>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> or <paramref name="substring"/> is <see langword="null"/>.
            </exception>
      <remarks>
        <para>This method is used by the <c>fn:contains</c> function under this collation.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xquery-operators/#func-contains">[FO] 7.5.1 fn:contains</seealso>
    </member>
    <member name="M:XmlPrime.Collation.IsEmpty(System.String)">
      <summary>
            Returns a boolean value indicating whether a <see cref="T:System.String"/> is equal to the empty string under this
            collation.
            </summary>
      <param name="value">A <see cref="T:System.String"/> value.</param>
      <returns>
        <see langword="true"/> if <paramref name="value"/> contains only ignorable collation units;
            otherwise <see langword="false"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.Collation.StartsWith(System.String,System.String)">
      <summary>
            Returns a boolean value indicating whether one string starts with a specified prefix under this collation.
            </summary>
      <param name="value">A <see cref="T:System.String"/> value.</param>
      <param name="prefix">The <see cref="T:System.String"/> prefix to find in <paramref name="value"/>.</param>
      <returns>
        <see langword="true"/> if the <paramref name="value"/> starts with <paramref name="prefix"/>; otherwise
            <see langword="false"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> or <paramref name="prefix"/> is <see langword="null"/>.
            </exception>
      <remarks>
        <para>
            This method implements the <c>fn:starts-with</c> function for the specified collation, and should follow the
            same semantics.
            </para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xquery-operators/#func-starts-with">[FO] 7.5.2 fn:starts-with</seealso>
      <seealso href="http://www.w3.org/XML/Group/xsl-query-specs/errata/xpath-functions-errata.html#E17">FO.E17</seealso>
    </member>
    <member name="M:XmlPrime.Collation.SubstringAfter(System.String,System.String)">
      <summary>
            Returns the substring of a <see cref="T:System.String"/> that follows the first occurrence of the specified substring
            under this collation.
            </summary>
      <param name="value">A <see cref="T:System.String"/> value.</param>
      <param name="substring">The <see cref="T:System.String"/> to find.</param>
      <returns>
            The substring of <paramref name="value"/> that follows the first occurrence of a sequence of collation
            units that provides a match to the collation units of <paramref name="substring"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> or <paramref name="substring"/> is <see langword="null"/>.
            </exception>
      <remarks>
        <para>This method implements the <c>fn:substring-after</c> function for this collation.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xquery-operators/#func-substring-after">[FO] 7.5.5 fn:substring-after</seealso>
      <seealso href="http://www.w3.org/XML/Group/xsl-query-specs/errata/xpath-functions-errata.html#E17">FO.E17</seealso>
    </member>
    <member name="M:XmlPrime.Collation.SubstringBefore(System.String,System.String)">
      <summary>
            Returns the substring of a <see cref="T:System.String"/> that precedes the first occurrence of the the specified
            substring.
            </summary>
      <param name="value">A <see cref="T:System.String"/> value.</param>
      <param name="substring">The <see cref="T:System.String"/> to find.</param>
      <returns>
            The substring of <paramref name="value"/> that precedes the first occurrence of a sequence of collation
            units that provides a  match to the collation units of <paramref name="substring"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> or <paramref name="substring"/> is <see langword="null"/>.
            </exception>
      <remarks>
        <para>This method is called by the <c>fn:substring-before</c> function.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xquery-operators/#func-substring-after">[FO] 7.5.5 fn:substring-before</seealso>
      <seealso href="http://www.w3.org/XML/Group/xsl-query-specs/errata/xpath-functions-errata.html#E17">FO.E17</seealso>
    </member>
    <member name="P:XmlPrime.Collation.CodepointCollation">
      <summary>
            Gets the codepoint collation.
            </summary>
      <value>The codepoint collation.</value>
      <remarks>
        <para>This collation provides the ability to compare strings based on codepoint values.</para>
      </remarks>
      <seealso href="http://www.w3.org/2005/xpath-functions/collation/codepoint">XQuery 1.0 and XPath 2.0 Functions
            and Operators Unicode Codepoint Collation</seealso>
    </member>
    <member name="P:XmlPrime.Collation.HtmlAsciiCaseInsensitiveCollation">
      <summary>
            Gets the HTML ASCII case-insensitive collation.
            </summary>
      <value>The HTML ASCII case-insensitive collation.</value>
      <remarks>
        <para>This collation provides the ability to compare strings based on codepoint values.</para>
      </remarks>
      <seealso href="https://www.w3.org/XML/Group/qtspecs/specifications/xpath-functions-31/html/Overview.html">[XPath and XQuery Functions and Operators 3.1] section 5.3.4 The HTML ASCII Case-Insensitive Collation</seealso>
    </member>
    <member name="P:XmlPrime.Collation.Comparer">
      <summary>
            Gets a <see cref="T:System.Collections.Generic.IComparer`1"/> instance which respects the current collation.
            </summary>
      <value>
            An instance of <see cref="T:System.Collections.Generic.IComparer`1"/>.
            </value>
    </member>
    <member name="P:XmlPrime.Collation.EqualityComparer">
      <summary>
            Gets a <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> instance which respects the current collation.
            </summary>
      <value>
            An instance of <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>.
            </value>
    </member>
    <member name="T:XmlPrime.DecimalFormatDictionary">
      <summary>
              A mapping from decimal format names to decimal formats.
            </summary>
      <remarks>
        <para>A <see cref="T:XmlPrime.DecimalFormatDictionary"/> instance is used to supply additional statically known
                decimal formats to XQuery, XPath and XSLT for use with the <c>fn:format-number</c> function.</para>
      </remarks>
      <seealso cref="P:XmlPrime.StaticContextSettings.DecimalFormats"/>
    </member>
    <member name="M:XmlPrime.DecimalFormatDictionary.#ctor">
      <overloads>
              Initializes a new instance of the <see cref="T:XmlPrime.DecimalFormatDictionary"/> class.
            </overloads>
      <summary>
              Initializes a new, empty instance of the <see cref="T:XmlPrime.DecimalFormatDictionary"/> class.
            </summary>
    </member>
    <member name="M:XmlPrime.DecimalFormatDictionary.#ctor(XmlPrime.DecimalFormat)">
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.DecimalFormatDictionary"/> class with the 
              specified default decimal format.
            </summary>
    </member>
    <member name="M:XmlPrime.DecimalFormatDictionary.#ctor(XmlPrime.DecimalFormatDictionary)">
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.DecimalFormatDictionary"/> class.
            </summary>
      <param name="dictionary">The <see cref="T:XmlPrime.DecimalFormatDictionary"/> to copy.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.DecimalFormatDictionary.Contains(System.Xml.XmlQualifiedName)">
      <summary>
              Determines whether the <see cref="T:XmlPrime.DecimalFormatDictionary"/> contains the specified decimal formats.
            </summary>
      <param name="name">The name of the decimal formats.</param>
      <returns>
        <see langword="true"/> if the <see cref="T:XmlPrime.DecimalFormatDictionary"/> contains the specified decimal formats;
              otherwise, <see langword="false"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> is <see langword="null"/></exception>
    </member>
    <member name="M:XmlPrime.DecimalFormatDictionary.Add(System.Xml.XmlQualifiedName,XmlPrime.DecimalFormat)">
      <summary>
              Adds a new decimal format with the specified name.
            </summary>
      <param name="name">The name of the decimal formats to add.</param>
      <param name="value">The decimal formats to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> or <paramref name="value"/> is <see langword="null"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.DecimalFormatDictionary.Add(System.Collections.Generic.KeyValuePair{System.Xml.XmlQualifiedName,XmlPrime.DecimalFormat})">
      <summary>
              Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
      <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. </exception>
    </member>
    <member name="M:XmlPrime.DecimalFormatDictionary.Clear">
      <summary>
              Removes all decimal formats from the <see cref="T:XmlPrime.DecimalFormatDictionary"/>.
            </summary>
    </member>
    <member name="M:XmlPrime.DecimalFormatDictionary.GetEnumerator">
      <summary>
              Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
              A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:XmlPrime.DecimalFormatDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
      <returns>
              An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:XmlPrime.DecimalFormatDictionary.Remove(System.Xml.XmlQualifiedName)">
      <summary>
              Removes the decimal format with the specified name from this <see cref="T:XmlPrime.DecimalFormatDictionary"/>.
            </summary>
      <param name="key">The name of the decimal format to remove.</param>
      <returns>
        <see langword="true"/> if the decimal format was successfully removed from the <see cref="T:XmlPrime.DecimalFormatDictionary"/>;
              otherwise <see langword="false"/>.  This method also returns <see langword="false"/> if there is no decimal format with the
              specified name in the <see cref="T:XmlPrime.DecimalFormatDictionary"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.DecimalFormatDictionary.TryGetValue(System.Xml.XmlQualifiedName,XmlPrime.DecimalFormat@)">
      <summary>
              Gets the value with the specified key.
            </summary>
      <param name="key">The name of the decimal format whose type is to be returned.</param>
      <param name="value">When this method returns, contains the type of the specified decimal format, if it is set; otherwise, <see langword="null"/>.</param>
      <returns>
        <see langword="true"/> if the <see cref="T:XmlPrime.DecimalFormatDictionary"/> contains the specified decimal format, otherwise <see langword="false"/></returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key"/> is <see langword="null"/>.</exception>
    </member>
    <member name="P:XmlPrime.DecimalFormatDictionary.DefaultDecimalFormat">
      <summary>
              Gets or sets the default decimal format.
            </summary>
      <value>
              The default decimal format.
            </value>
      <remarks>
              The default decimal format has name <see cref="F:System.Xml.XmlQualifiedName.Empty"/>.
            </remarks>
      <remarks>
        <para>Setting <see cref="P:XmlPrime.DecimalFormatDictionary.DefaultDecimalFormat"/> to <see langword="null"/> has the effect of removing the
                default decimal format from the collection.</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.DecimalFormatDictionary.Names">
      <summary>
              Gets the names of the decimal formats contained in this <see cref="T:XmlPrime.DecimalFormatDictionary"/>.
            </summary>
      <value>A <see cref="T:System.Collections.Generic.ICollection`1"/> containing the names of the decimal formats in this <see cref="T:XmlPrime.DecimalFormatDictionary"/>.</value>
    </member>
    <member name="P:XmlPrime.DecimalFormatDictionary.Count">
      <summary>
              Gets the number of decimal formats contained in the <see cref="T:XmlPrime.DecimalFormatDictionary"/>.
            </summary>
      <returns>
              The number of decimal formats contained in the <see cref="T:XmlPrime.DecimalFormatDictionary"/>.
            </returns>
    </member>
    <member name="P:XmlPrime.DecimalFormatDictionary.Item(System.Xml.XmlQualifiedName)">
      <summary>
              Gets or sets the decimal format with the specified name.
            </summary>
      <value>
              The type of the decimal format with the specified name.
            </value>
      <param name="name">The name of the decimal format to get or set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> or the supplied value is <see langword="null"/>.
            </exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and the decimal format with the specified name is not found.</exception>
    </member>
    <member name="T:XmlPrime.IResultDocumentHandler">
      <summary>
            Provides a method for writing multiple output documents from an XSLT stylsheet or an updating XQuery.
            </summary>
    </member>
    <member name="M:XmlPrime.IResultDocumentHandler.Resolve(System.String,XmlPrime.Serialization.XdmWriterSettings)">
      <summary>
            Returns an <see cref="T:System.Xml.XmlWriter"/> to which a result document can be written.
            </summary>
      <param name="resultDocumentUri">The base URI of the result document.</param>
      <param name="settings">The serialization settings.</param>
      <returns>A new <see cref="T:System.Xml.XmlWriter"/> to write output with the specified serialization settings to a resource with
            the specified base URI, or <see langword="null"/> if the specified result document is of no interest.</returns>
    </member>
    <member name="M:XmlPrime.IResultDocumentHandler.Complete">
      <summary>
            Indicates that all operations within the scope are completed successfully and releases any resources
            associated with the current <see cref="T:XmlPrime.IResultDocumentHandler"/>.
            </summary>
      <remarks>
        <para>This method allows implementors the possibility of atomically committing all result documents created in the scope
            of this <see cref="T:XmlPrime.IResultDocumentHandler"/>.</para>
      </remarks>
    </member>
    <member name="T:XmlPrime.EnvironmentVariables">
      <summary>
              A base class for classes with provides methods to access available environment variables.
            </summary>
    </member>
    <member name="T:XmlPrime.IEnvironmentVariables">
      <summary>
              Provides methods to access available environment variables.
            </summary>
      <remarks>
        <para>The available environment variables can be made available via the
                <see cref="P:XmlPrime.DynamicContextSettings.AvailableEnvironmentVariables"/> property of the
                <see cref="T:XmlPrime.DynamicContextSettings"/> class.</para>
        <para>The available environment variables can be accessed via the <c>fn:environment-variable</c> and
                <c>available-environment-variables</c> functions.</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.IEnvironmentVariables.Item(System.String)">
      <summary>
              Gets the value associated with the specified environment variable name.
            </summary>
      <value>
              The value with the specified environment variable name.
            </value>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">
              The property is retrieved and <paramref name="key"/> is not found.
            </exception>
    </member>
    <member name="P:XmlPrime.IEnvironmentVariables.IsStable">
      <summary>
              Gets a value indicating whether this <see cref="T:XmlPrime.IEnvironmentVariables"/> is stable.
            </summary>
      <value>
        <see langword="true"/> if stable; otherwise, <see langword="false"/>.
            </value>
      <remraks>
        <para>The instance is stable if the set of environment variables will remain unchanged during the lifetime of the current instance.</para>
        <para>The values in a non-stable instance will be cached to ensure that <c>fn:environment-variable</c> and <c>fn:available-environment-variables</c> are deterministic.</para>
      </remraks>
    </member>
    <member name="M:XmlPrime.EnvironmentVariables.#ctor(System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.EnvironmentVariables"/> class.
            </summary>
      <param name="isStable">Indicates whether the collection is stable.</param>
    </member>
    <member name="M:XmlPrime.EnvironmentVariables.Create">
      <summary>
              Creates an <see cref="T:XmlPrime.EnvironmentVariables"/> instance which contains the system environment variables.
            </summary>
      <returns>A new instance which contains from all environment variable names and their values from the current process.</returns>
      <seealso cref="M:System.Environment.GetEnvironmentVariables"/>
    </member>
    <member name="M:XmlPrime.EnvironmentVariables.Create(System.EnvironmentVariableTarget)">
      <summary>
              Creates an <see cref="T:XmlPrime.EnvironmentVariables"/> instance which contains the system environment variables.
            </summary>
      <param name="target">One of the <see cref="T:System.EnvironmentVariableTarget"/> values..</param>
      <returns>
              A new instance which contains all environment variable names and their values from the current process, 
              or from the Windows operating system registry key for the current user or local machine.
            </returns>
      <seealso cref="M:System.Environment.GetEnvironmentVariables"/>
    </member>
    <member name="M:XmlPrime.EnvironmentVariables.Create(System.Collections.Specialized.NameValueCollection)">
      <summary>
              Creates an <see cref="T:XmlPrime.EnvironmentVariables"/> instance from the specified <see cref="T:System.Collections.Specialized.NameValueCollection"/>.
            </summary>
      <param name="variables">A <see cref="T:System.Collections.Specialized.NameValueCollection"/>.</param>
      <returns>A new <see cref="T:XmlPrime.EnvironmentVariables"/> instance. </returns>
    </member>
    <member name="M:XmlPrime.EnvironmentVariables.Create(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>
              Creates an <see cref="T:XmlPrime.EnvironmentVariables"/> instance from the specified enumerable collection.
            </summary>
      <param name="variables">An enumerable collection of key-value pairs.</param>
      <returns>A new <see cref="T:XmlPrime.EnvironmentVariables"/> instance. </returns>
    </member>
    <member name="M:XmlPrime.EnvironmentVariables.Create(System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
              Creates an <see cref="T:XmlPrime.EnvironmentVariables"/> instance from the specified dictionary.
            </summary>
      <param name="variables">A dictionary of key-value pairs.</param>
      <returns>A new <see cref="T:XmlPrime.EnvironmentVariables"/> instance. </returns>
      <remarks>
              The values contained in <paramref name="variables"/> are copied.
            </remarks>
    </member>
    <member name="M:XmlPrime.EnvironmentVariables.Create(System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)">
      <summary>
              Creates an <see cref="T:XmlPrime.EnvironmentVariables"/> instance from the specified dictionary.
            </summary>
      <param name="variables">A dictionary of key-value pairs.</param>
      <param name="stable">Indicates whether <paramref name="variables"/> is immutable.</param>
      <returns>
              A new <see cref="T:XmlPrime.EnvironmentVariables"/> instance.
            </returns>
      <remarks>
              If <paramref name="stable"/> is false, the values contained in <paramref name="variables"/> are copied.
            </remarks>
    </member>
    <member name="M:XmlPrime.EnvironmentVariables.GetEnumerator">
      <summary>
              Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
              A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="M:XmlPrime.EnvironmentVariables.System#Collections#IEnumerable#GetEnumerator">
      <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
      <returns>
              An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="P:XmlPrime.EnvironmentVariables.Empty">
      <summary>
              Gets an empty <see cref="T:XmlPrime.EnvironmentVariables"/> collection.
            </summary>
      <value>
              An empty <see cref="T:XmlPrime.EnvironmentVariables"/> collection.
            </value>
    </member>
    <member name="P:XmlPrime.EnvironmentVariables.IsStable">
      <summary>
              Gets a value indicating whether this <see cref="T:XmlPrime.IEnvironmentVariables"/> is stable.
            </summary>
      <value>
        <see langword="true"/> if stable; otherwise, <see langword="false"/>.
            </value>
    </member>
    <member name="P:XmlPrime.EnvironmentVariables.Item(System.String)">
      <summary>
              Gets the <see cref="T:System.String"/> with the specified key.
            </summary>
    </member>
    <member name="T:XmlPrime.HexBinary">
      <summary>
            Rrepresents arbitrary hex-encoded binary data. 
            The corresponding XML Schema type is <c>xs:hexBinary</c>.
            </summary>
      <threadsafety static="true" instance="true"/>
    </member>
    <member name="M:XmlPrime.HexBinary.Compare(System.Byte[],System.Byte[])">
      <summary>
            Compares a <see cref="T:System.Byte"/> array with another <see cref="T:System.Byte"/> array.
            </summary>
      <param name="bytes1">The first <see cref="T:System.Byte"/> array to compare.</param>
      <param name="bytes2">The second <see cref="T:System.Byte"/> array to compare.</param>
      <returns>
        <para>A signed number that indicates the relative order of <paramref name="bytes1"/> and <paramref name="bytes2"/>.
            The return value has the following meanings:</para>
        <list type="bullet">
          <item>
            <description>Less than zero indicates that <paramref name="bytes1"/> is less than <paramref name="bytes2"/>.</description>
          </item>
          <item>
            <description>Zero indicates that <paramref name="bytes1"/> is equal to <paramref name="bytes2"/>.</description>
          </item>
          <item>
            <description>Greater than zero indicates that <paramref name="bytes1"/> is greater than <paramref name="bytes2"/>.</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:XmlPrime.HexBinary.#ctor(System.Byte[])">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.HexBinary"/> struct from the specified <see cref="T:System.Byte"/> array.
            </summary>
      <param name="value">The value.</param>
      <remarks>
            This instance maintains a reference to <paramref name="value"/>.  It does not copy to value.
            </remarks>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="value"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.HexBinary.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.HexBinary"/> struct from the specified <see cref="T:System.String"/>.
            </summary>
      <param name="value">A <see cref="T:System.String"/> whose lexical value is a base 64 encoded binary value.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="value"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.FormatException">Raised when <paramref name="value"/> is not a valid lexical base 64 encoded binary value.</exception>
    </member>
    <member name="M:XmlPrime.HexBinary.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:XmlPrime.HexBinary.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="M:XmlPrime.HexBinary.ToString">
      <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
    </member>
    <member name="M:XmlPrime.HexBinary.CompareTo(XmlPrime.HexBinary)">
      <summary>
            Compares the current <see cref="T:XmlPrime.HexBinary"/> with another <see cref="T:XmlPrime.HexBinary"/> of the same type.
            </summary>
      <param name="other">An <see cref="T:XmlPrime.HexBinary"/> to compare with this <see cref="T:XmlPrime.HexBinary"/>.</param>
      <returns>
        <para>A value that indicates the relative order of the objects being compared. 
            The return value has the following meanings:</para>
        <list type="bullet">
          <item>
            <description>Less than zero indicates that the current instance is less than <paramref name="other"/>.</description>
          </item>
          <item>
            <description>Zero indicates that the current instance is equal to <paramref name="other"/>.</description>
          </item>
          <item>
            <description>Greater than zero indicates that the current instance is greater than <paramref name="other"/>.</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:XmlPrime.HexBinary.Equals(XmlPrime.HexBinary)">
      <summary>
            Indicates whether the current <see cref="T:XmlPrime.HexBinary"/> is equal to another instance of the same type.
            </summary>
      <param name="other">Aa <see cref="T:XmlPrime.HexBinary"/> instance to compare with this instance.</param>
      <returns>
        <see langword="true"/> if the current <see cref="T:XmlPrime.HexBinary"/> is equal to the <paramref name="other"/> parameter; otherwise, <see langword="false"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.HexBinary.op_Equality(XmlPrime.HexBinary,XmlPrime.HexBinary)">
      <summary>
            Returns a value indicating whether two instances of <see cref="T:XmlPrime.HexBinary"/> are equal.
            </summary>
      <param name="value1">The first <see cref="T:XmlPrime.HexBinary"/> to compare.</param>
      <param name="value2">The second <see cref="T:XmlPrime.HexBinary"/> to compare.</param>
      <returns>
        <see langword="true"/> if the <paramref name="value1"/> and <paramref name="value2"/> are equal; otherwise, <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.HexBinary.op_Inequality(XmlPrime.HexBinary,XmlPrime.HexBinary)">
      <summary>
            Returns a value indicating whether two instances of <see cref="T:XmlPrime.HexBinary"/> are not equal.
            </summary>
      <param name="value1">The first <see cref="T:XmlPrime.HexBinary"/> to compare.</param>
      <param name="value2">The second <see cref="T:XmlPrime.HexBinary"/> to compare.</param>
      <returns>
        <see langword="true"/> if the <paramref name="value1"/> and <paramref name="value2"/> are not equal; otherwise, <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.HexBinary.op_LessThan(XmlPrime.HexBinary,XmlPrime.HexBinary)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.HexBinary"/> is less than another specified <see cref="T:XmlPrime.HexBinary"/>.
            </summary>
      <param name="value1">The first <see cref="T:XmlPrime.HexBinary"/> to compare.</param>
      <param name="value2">The second <see cref="T:XmlPrime.HexBinary"/> to compare.</param>
      <returns>
        <see langword="true"/> if the value of <paramref name="value1"/> is less than the value of <paramref name="value2"/>, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="M:XmlPrime.HexBinary.op_LessThanOrEqual(XmlPrime.HexBinary,XmlPrime.HexBinary)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.HexBinary"/> is less than or equal to another specified <see cref="T:XmlPrime.HexBinary"/>.
            </summary>
      <param name="value1">The first <see cref="T:XmlPrime.HexBinary"/> to compare.</param>
      <param name="value2">The second <see cref="T:XmlPrime.HexBinary"/> to compare.</param>
      <returns>
        <see langword="true"/> if the value of <paramref name="value1"/> is less than or equal to the value of <paramref name="value2"/>, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="M:XmlPrime.HexBinary.op_GreaterThan(XmlPrime.HexBinary,XmlPrime.HexBinary)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.HexBinary"/> is greater than another specified <see cref="T:XmlPrime.HexBinary"/>.
            </summary>
      <param name="value1">The first <see cref="T:XmlPrime.HexBinary"/> to compare.</param>
      <param name="value2">The second <see cref="T:XmlPrime.HexBinary"/> to compare.</param>
      <returns>
        <see langword="true"/> if the value of <paramref name="value1"/> is greater than the value of <paramref name="value2"/>, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="M:XmlPrime.HexBinary.op_GreaterThanOrEqual(XmlPrime.HexBinary,XmlPrime.HexBinary)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.HexBinary"/> is greater than or equal to another specified <see cref="T:XmlPrime.HexBinary"/>.
            </summary>
      <param name="value1">The first <see cref="T:XmlPrime.HexBinary"/> to compare.</param>
      <param name="value2">The second <see cref="T:XmlPrime.HexBinary"/> to compare.</param>
      <returns>
        <see langword="true"/> if the value of <paramref name="value1"/> is greater than or equal to the value of <paramref name="value2"/>, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="T:XmlPrime.Key">
      <summary>
              A class representing an XSLT key.
            </summary>
      <remarks>
        <para>This class represents information used to declare an XSLT Key for use with the <c>fn:key</c>
                function defined in XSL Transformations (XSLT) Version 2.0.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#keys">16.3.2 The key Function [XSL Transformations (XSLT) Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Key.#ctor(System.String,System.String,XmlPrime.AnyUri)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.Key"/> class.
            </summary>
      <param name="match">The XSLT pattern which describes the nodes matched by the key.</param>
      <param name="use">The expression which specifies the values of the key.</param>
      <param name="collation">the URI of the collation to use when deciding whether two strings are equal for the purposes of key matching, os
            <see langword="null"/> to use the default collation.</param>
    </member>
    <member name="P:XmlPrime.Key.Collation">
      <summary>
            Gets the URI of the collation to use when deciding whether two strings are equal for the purposes of key matching, os
            <see langword="null"/> to use the default collation.
            </summary>
      <value>
            The URI of the collation to use when deciding whether two strings are equal for the purposes of key matching, os
            <see langword="null"/> to use the default collation.
            </value>
    </member>
    <member name="P:XmlPrime.Key.Match">
      <summary>
            Gets the XSLT pattern which describes the nodes matched by the key.
            </summary>
      <value>
            An XSLT pattern which describes the nodes matched by the key
            </value>
    </member>
    <member name="P:XmlPrime.Key.Use">
      <summary>
            Gets the expression which specifies the values of the key.
            </summary>
      <value>
            An XPath expression which specifies the value of the key.
            </value>
    </member>
    <member name="T:XmlPrime.KeyDictionary">
      <summary>
              A mapping from key names to key declaration.
            </summary>
      <remarks>
        <para>A <see cref="T:XmlPrime.KeyDictionary"/> instance is used to declare additional XSLT keys, so that the <c>fn:key</c>
                function can be used in XQuery and XPath when the XSLT function library is imported.</para>
      </remarks>
      <seealso cref="P:XmlPrime.StaticContextSettings.Keys"/>
    </member>
    <member name="M:XmlPrime.KeyDictionary.#ctor">
      <overloads>
              Initializes a new instance of the <see cref="T:XmlPrime.KeyDictionary"/> class.
            </overloads>
      <summary>
              Initializes a new, empty instance of the <see cref="T:XmlPrime.KeyDictionary"/> class.
            </summary>
    </member>
    <member name="M:XmlPrime.KeyDictionary.#ctor(XmlPrime.KeyDictionary)">
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.KeyDictionary"/> class.
            </summary>
      <param name="dictionary">The <see cref="T:XmlPrime.KeyDictionary"/> to copy.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.KeyDictionary.Contains(System.Xml.XmlQualifiedName)">
      <summary>
              Determines whether the <see cref="T:XmlPrime.KeyDictionary"/> contains the specified key.
            </summary>
      <param name="name">The name of the key.</param>
      <returns>
        <see langword="true"/> if the <see cref="T:XmlPrime.KeyDictionary"/> contains the specified key;
              otherwise, <see langword="false"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> is <see langword="null"/></exception>
    </member>
    <member name="M:XmlPrime.KeyDictionary.Add(System.Xml.XmlQualifiedName,System.Collections.Generic.IList{XmlPrime.Key})">
      <summary>
              Adds a new key with the specified name.
            </summary>
      <param name="name">The name of the key to add.</param>
      <param name="value">The key to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> or <paramref name="value"/> is <see langword="null"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.KeyDictionary.Add(System.Collections.Generic.KeyValuePair{System.Xml.XmlQualifiedName,System.Collections.Generic.IList{XmlPrime.Key}})">
      <summary>
              Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
      <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. </exception>
    </member>
    <member name="M:XmlPrime.KeyDictionary.Clear">
      <summary>
              Removes all keys from the <see cref="T:XmlPrime.KeyDictionary"/>.
            </summary>
    </member>
    <member name="M:XmlPrime.KeyDictionary.GetEnumerator">
      <summary>
              Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
              A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:XmlPrime.KeyDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
      <returns>
              An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:XmlPrime.KeyDictionary.Remove(System.Xml.XmlQualifiedName)">
      <summary>
              Removes the key with the specified name from this <see cref="T:XmlPrime.KeyDictionary"/>.
            </summary>
      <param name="key">The name of the key to remove.</param>
      <returns>
        <see langword="true"/> if the key was successfully removed from the <see cref="T:XmlPrime.KeyDictionary"/>;
              otherwise <see langword="false"/>.  This method also returns <see langword="false"/> if there is no key with the
              specified name in the <see cref="T:XmlPrime.KeyDictionary"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.KeyDictionary.TryGetValue(System.Xml.XmlQualifiedName,System.Collections.Generic.IList{XmlPrime.Key}@)">
      <summary>
              Gets the value with the specified key.
            </summary>
      <param name="key">The name of the key whose type is to be returned.</param>
      <param name="value">When this method returns, contains the type of the specified key, if it is set; otherwise, <see langword="null"/>.</param>
      <returns>
        <see langword="true"/> if the <see cref="T:XmlPrime.KeyDictionary"/> contains the specified key, otherwise <see langword="false"/></returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key"/> is <see langword="null"/>.</exception>
    </member>
    <member name="P:XmlPrime.KeyDictionary.Names">
      <summary>
              Gets the names of the keys contained in this <see cref="T:XmlPrime.KeyDictionary"/>.
            </summary>
      <value>A <see cref="T:System.Collections.Generic.ICollection`1"/> containing the names of the keys in this <see cref="T:XmlPrime.KeyDictionary"/>.</value>
    </member>
    <member name="P:XmlPrime.KeyDictionary.Count">
      <summary>
              Gets the number of keys contained in the <see cref="T:XmlPrime.KeyDictionary"/>.
            </summary>
      <returns>
              The number of keys contained in the <see cref="T:XmlPrime.KeyDictionary"/>.
            </returns>
    </member>
    <member name="P:XmlPrime.KeyDictionary.Item(System.Xml.XmlQualifiedName)">
      <summary>
              Gets or sets the key with the specified name.
            </summary>
      <value>
              The type of the key with the specified name.
            </value>
      <param name="name">The name of the key to get or set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> or the supplied value is <see langword="null"/>.
            </exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and the key with the specified name is not found.</exception>
    </member>
    <member name="T:XmlPrime.ExecutionEventType">
      <summary>
            Represents the type of event being reported.
            </summary>
    </member>
    <member name="F:XmlPrime.ExecutionEventType.BeginFunction">
      <summary>
            The type of an event which is signalled before evaluation of a user-defined function or template.
            </summary>
    </member>
    <member name="F:XmlPrime.ExecutionEventType.EndFunction">
      <summary>
            The type of an event which is signalled after evaluation of a user-defined function or template.
            </summary>
    </member>
    <member name="F:XmlPrime.ExecutionEventType.BeginEvaluate">
      <summary>
            The type of an event which is signalled before evaluation of one or more items in a sequence.
            </summary>
    </member>
    <member name="F:XmlPrime.ExecutionEventType.EndEvaluate">
      <summary>
            The type of an event which is signalled after evaluation of one or more items in a sequence.
            </summary>
    </member>
    <member name="T:XmlPrime.ExecutionEventArgs">
      <summary>
              Provides data for the <see cref="E:XmlPrime.DynamicContextSettings.Execution"/> event.
            </summary>
      <remarks>
        <para>The <see cref="E:XmlPrime.DynamicContextSettings.Execution"/> event occurs when an XPath expression, XQuery program or XSLT transformation has been
            compiled with profiling enabled.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#message">[XSL Transformations (XSLT) Version 2.0] 17 Messages</seealso>
    </member>
    <member name="P:XmlPrime.ExecutionEventArgs.EventType">
      <summary>
            Gets the type of the execution event.
            </summary>
      <value>
            On eof the <see cref="T:XmlPrime.ExecutionEventType"/> values.
            </value>
    </member>
    <member name="P:XmlPrime.ExecutionEventArgs.Label">
      <summary>
            Gets the label associated with this event.
            </summary>
      <value>An <see cref="T:System.Object"/> instance associated with this event.</value>
    </member>
    <member name="P:XmlPrime.ExecutionEventArgs.LineNumber">
      <summary>
              Gets the line number of the instruction that raised the event.
            </summary>
      <value>
              An <see cref="T:System.Int32"/> representing the line number of the instruction , or <c>-1</c> if the line number is not known.
            </value>
      <remarks>
              The line number is 1-indexed, that is a value of <c>1</c> represents the first character in the document.
            </remarks>
    </member>
    <member name="P:XmlPrime.ExecutionEventArgs.LinePosition">
      <summary>
              Gets the character position within <see cref="P:XmlPrime.ExecutionEventArgs.LineNumber"/> of the instruction that raised the event.
            </summary>
      <value>
              An <see cref="T:System.Int32"/> character position within <see cref="P:XmlPrime.ExecutionEventArgs.LineNumber"/> in the line of the instruction, or <c>-1</c> if the line position is not known.
            </value>
      <remarks>
              The line character position is 1-indexed, that is a value of <c>1</c> represents the first character in a line.
            </remarks>
    </member>
    <member name="P:XmlPrime.ExecutionEventArgs.SourceUri">
      <summary>
              Gets the URI of the source file containing the instruction that caused the event.
            </summary>
      <value>
              The source file in which the instruction was evaluated, or <see cref="F:System.String.Empty"/> if the source file is not known.
            </value>
    </member>
    <member name="T:XmlPrime.IResolvedCollection">
      <summary>
              Defines the methods supported by a collection that has been returned from an <see cref="T:XmlPrime.ICollectionResolver"/>.
            </summary>
    </member>
    <member name="T:XmlPrime.ResolvedCollection">
      <summary>
              A collection that has been collection from an <see cref="T:XmlPrime.ICollectionResolver"/>.
            </summary>
    </member>
    <member name="M:XmlPrime.ResolvedCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="M:XmlPrime.ResolvedCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="P:XmlPrime.ResolvedCollection.Count">
      <summary>
            Gets the number of elements in the collection.
            </summary>
    </member>
    <member name="T:XmlPrime.Base64Binary">
      <summary>
            Rrepresents Base64-encoded arbitrary binary data. 
            The corresponding XML Schema type is <c>xs:base64Binary</c>.
            </summary>
      <threadsafety static="true" instance="true"/>
    </member>
    <member name="M:XmlPrime.Base64Binary.Compare(System.Byte[],System.Byte[])">
      <summary>
            Compares a <see cref="T:System.Byte"/> array with another <see cref="T:System.Byte"/> array.
            </summary>
      <param name="value1">The first <see cref="T:System.Byte"/> array to compare.</param>
      <param name="value2">The second <see cref="T:System.Byte"/> array to compare.</param>
      <returns>
        <para>A signed number that indicates the relative order of <paramref name="value1"/> and <paramref name="value2"/>.
            The return value has the following meanings:</para>
        <list type="bullet">
          <item>
            <description>Less than zero indicates that <paramref name="value1"/> is less than <paramref name="value2"/>.</description>
          </item>
          <item>
            <description>Zero indicates that <paramref name="value1"/> is equal to <paramref name="value2"/>.</description>
          </item>
          <item>
            <description>Greater than zero indicates that <paramref name="value1"/> is greater than <paramref name="value2"/>.</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:XmlPrime.Base64Binary.#ctor(System.Byte[])">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.Base64Binary"/> struct from the specified <see cref="T:System.Byte"/> array.
            </summary>
      <param name="value">The value.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="value"/> is <see langword="null"/>.</exception>
      <remarks>
            This instance maintains a reference to <paramref name="value"/>.  It does not copy to value.
            </remarks>
    </member>
    <member name="M:XmlPrime.Base64Binary.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.Base64Binary"/> struct from the specified <see cref="T:System.String"/>.
            </summary>
      <param name="value">A <see cref="T:System.String"/> whose lexical value is a base 64 encoded binary value.</param>
      <exception cref="T:System.ArgumentNullException">Raised when <paramref name="value"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.FormatException">Raised when <paramref name="value"/> is not a valid lexical base 64 encoded binary value.</exception>
    </member>
    <member name="M:XmlPrime.Base64Binary.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:XmlPrime.Base64Binary.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="M:XmlPrime.Base64Binary.ToString">
      <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
    </member>
    <member name="M:XmlPrime.Base64Binary.CompareTo(XmlPrime.Base64Binary)">
      <summary>
            Compares the current <see cref="T:XmlPrime.Base64Binary"/> with another instance of the same type.
            </summary>
      <param name="other">An <see cref="T:XmlPrime.Base64Binary"/> instance to compare with this instance.</param>
      <returns>
        <para>A value that indicates the relative order of the objects being compared. 
            The return value has the following meanings:</para>
        <list type="bullet">
          <item>
            <description>Less than zero indicates that this instance is less than <paramref name="other"/>.</description>
          </item>
          <item>
            <description>Zero indicates that this instance is equal to <paramref name="other"/>.</description>
          </item>
          <item>
            <description>Greater than zero indicates that this instance is greater than <paramref name="other"/>.</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:XmlPrime.Base64Binary.Equals(XmlPrime.Base64Binary)">
      <summary>
            Indicates whether the current <see cref="T:XmlPrime.Base64Binary"/> is equal to another instance of the same type.
            </summary>
      <param name="other">Aa <see cref="T:XmlPrime.Base64Binary"/> instance to compare with this instance.</param>
      <returns>
        <see langword="true"/> if the current <see cref="T:XmlPrime.Base64Binary"/> is equal to the <paramref name="other"/> parameter; otherwise, <see langword="false"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.Base64Binary.op_Equality(XmlPrime.Base64Binary,XmlPrime.Base64Binary)">
      <summary>
            Returns a value indicating whether two instances of <see cref="T:XmlPrime.Base64Binary"/> are equal.
            </summary>
      <param name="value1">The first <see cref="T:XmlPrime.Base64Binary"/> to compare.</param>
      <param name="value2">The second <see cref="T:XmlPrime.Base64Binary"/> to compare.</param>
      <returns>
        <see langword="true"/> if the <paramref name="value1"/> and <paramref name="value2"/> are equal; otherwise, <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.Base64Binary.op_Inequality(XmlPrime.Base64Binary,XmlPrime.Base64Binary)">
      <summary>
            Returns a value indicating whether two instances of <see cref="T:XmlPrime.Base64Binary"/> are not equal.
            </summary>
      <param name="value1">The first <see cref="T:XmlPrime.Base64Binary"/> to compare.</param>
      <param name="value2">The second <see cref="T:XmlPrime.Base64Binary"/> to compare.</param>
      <returns>
        <see langword="true"/> if the <paramref name="value1"/> and <paramref name="value2"/> are not equal; otherwise, <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.Base64Binary.op_LessThan(XmlPrime.Base64Binary,XmlPrime.Base64Binary)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.Base64Binary"/> is less than another specified <see cref="T:XmlPrime.Base64Binary"/>.
            </summary>
      <param name="value1">The first <see cref="T:XmlPrime.Base64Binary"/> to compare.</param>
      <param name="value2">The second <see cref="T:XmlPrime.Base64Binary"/> to compare.</param>
      <returns>
        <see langword="true"/> if the value of <paramref name="value1"/> is less than the value of <paramref name="value2"/>, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="M:XmlPrime.Base64Binary.op_LessThanOrEqual(XmlPrime.Base64Binary,XmlPrime.Base64Binary)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.Base64Binary"/> is less than or equal to another specified <see cref="T:XmlPrime.Base64Binary"/>.
            </summary>
      <param name="value1">The first <see cref="T:XmlPrime.Base64Binary"/> to compare.</param>
      <param name="value2">The second <see cref="T:XmlPrime.Base64Binary"/> to compare.</param>
      <returns>
        <see langword="true"/> if the value of <paramref name="value1"/> is less than or equal to the value of <paramref name="value2"/>, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="M:XmlPrime.Base64Binary.op_GreaterThan(XmlPrime.Base64Binary,XmlPrime.Base64Binary)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.Base64Binary"/> is greater than another specified <see cref="T:XmlPrime.Base64Binary"/>.
            </summary>
      <param name="value1">The first <see cref="T:XmlPrime.Base64Binary"/> to compare.</param>
      <param name="value2">The second <see cref="T:XmlPrime.Base64Binary"/> to compare.</param>
      <returns>
        <see langword="true"/> if the value of <paramref name="value1"/> is greater than the value of <paramref name="value2"/>, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="M:XmlPrime.Base64Binary.op_GreaterThanOrEqual(XmlPrime.Base64Binary,XmlPrime.Base64Binary)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.Base64Binary"/> is greater than or equal to another specified <see cref="T:XmlPrime.Base64Binary"/>.
            </summary>
      <param name="value1">The first <see cref="T:XmlPrime.Base64Binary"/> to compare.</param>
      <param name="value2">The second <see cref="T:XmlPrime.Base64Binary"/> to compare.</param>
      <returns>
        <see langword="true"/> if the value of <paramref name="value1"/> is greater than or equal to the value of <paramref name="value2"/>, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="T:XmlPrime.Serialization.JsonParsingOptions">
      <summary>
            Specifies the behaviour of a JSON parser.
            </summary>
    </member>
    <member name="F:XmlPrime.Serialization.JsonParsingOptions.None">
      <summary>
            Parsing as per RFC 7159.
            </summary>
    </member>
    <member name="F:XmlPrime.Serialization.JsonParsingOptions.OmitQuotes">
      <summary>
            Permits quotes on keys to be omitted, 
            </summary>
    </member>
    <member name="F:XmlPrime.Serialization.JsonParsingOptions.TrailingComma">
      <summary>
            Permits a comma to appear after the last item in an arra.
            </summary>
    </member>
    <member name="F:XmlPrime.Serialization.JsonParsingOptions.LeadingZeros">
      <summary>
            Permits leading zeroes in numbers.
            </summary>
    </member>
    <member name="F:XmlPrime.Serialization.JsonParsingOptions.ControlCharacters">
      <summary>
            Permits control characters such as tab and newline to be present in unescaped form.
            </summary>
    </member>
    <member name="F:XmlPrime.Serialization.JsonParsingOptions.Liberal">
      <summary>
            Permits all liberal parsing rules.
            </summary>
    </member>
    <member name="T:XmlPrime.Serialization.XdmReader">
      <summary>
            Represents a reader that provides fast, noncached, forward-only access to XML data.
            </summary>
      <remarks>
            This class provides an instance of <see cref="T:System.Xml.XmlReader"/> with support for the
            <see href="http://www.w3.org/TR/xml/">Extensible Markup Language (XML) 1.0 (Fifth Edition)</see> and
            <see href="http://www.w3.org/TR/xml11/">Extensible Markup Language (XML) 1.1 (Second Edition)</see> specifications.
            It extends <see cref="T:System.Xml.XmlReader"/> by implementing <see cref="T:System.Xml.IXmlLineInfo"/> and <see cref="T:System.Xml.IXmlNamespaceResolver"/>.
            It also provides support for the <c>unparsed-entity-public-id</c>, <c>unparsed-entity-system-id</c>, <c>is-id</c> and <c>is-idrefs</c> accessors defined in
            <see href="XQuery 1.0 and XPath 2.0 Data Model (XDM) (Second Edition)"/>.
            The reader also maintains the base URI of each node in conformance with <see href="http://www.w3.org/TR/xmlbase/">XML Base (Second Edition)</see>, and
            performs ID type assignment for all <c>xml:id</c> attributes as required by <see href="http://www.w3.org/TR/xml-id/">xml:id Version 1.0</see>.
            As such, the reader conforms to the <see href="http://www.w3.org/TR/xml-proc-profiles/#extDeclProfile">external declarations profile</see> of an XML processor.
            </remarks>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.Create(System.IO.Stream)">
      <overloads>
            Creates an <see cref="T:XmlPrime.Serialization.XdmReader"/> instance.
            </overloads>
      <summary>
            Creates an <see cref="T:XmlPrime.Serialization.XdmReader"/> instance using the specified stream.
            </summary>
      <param name="input">The stream containing the XML data.</param>
      <returns>
            A new <see cref="T:XmlPrime.Serialization.XdmReader"/> instance.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input"/> is <see langword="null"/>.
            </exception>
      <remarks>
            An <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> object with default settings is used to create the reader. 
            </remarks>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.Create(System.IO.Stream,XmlPrime.Serialization.XdmReaderSettings)">
      <summary>
            Creates an <see cref="T:XmlPrime.Serialization.XdmReader"/> instance using the specified stream and
            <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> object.
            </summary>
      <param name="input">The stream containing the XML data.</param>
      <param name="settings">The <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> object used to configure the new <see cref="T:System.Xml.XmlReader"/> instance. This value can be <see langword="null"/>.</param>
      <returns>
            A new <see cref="T:XmlPrime.Serialization.XdmReader"/> instance.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentNullException">	The <paramref name="input"/> value is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.Create(System.IO.Stream,XmlPrime.Serialization.XdmReaderSettings,System.Xml.XmlParserContext)">
      <summary>
            Creates an <see cref="T:XmlPrime.Serialization.XdmReader"/> instance using the specified stream and
            <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> object.
            </summary>
      <param name="input">The stream containing the XML data.</param>
      <param name="settings">The <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> object used to configure the new <see cref="T:System.Xml.XmlReader"/> instance. This value can be <see langword="null"/>.</param>
      <param name="inputContext">The <see cref="T:System.Xml.XmlParserContext"/> object that provides the context information required to parse the XML fragment. 
            The context information can include the <see cref="T:System.Xml.XmlNameTable"/> to use, encoding, namespace scope, the current xml:lang and xml:space scope, 
            base URI, and document type definition.  This value can be <see langword="null"/>.</param>
      <returns>
            A new <see cref="T:XmlPrime.Serialization.XdmReader"/> instance.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.Create(System.IO.Stream,XmlPrime.Serialization.XdmReaderSettings,System.String)">
      <summary>
            Creates an <see cref="T:XmlPrime.Serialization.XdmReader"/> instance using the specified stream, base URI and
            <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> object.
            </summary>
      <param name="input">The stream containing the XML data.</param>
      <param name="settings">The <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> object used to configure the new <see cref="T:System.Xml.XmlReader"/> instance. This value can be <see langword="null"/>.</param>
      <param name="baseUri">The base URI for the entity or document being read. This value can be <see langword="null"/>.</param>
      <returns>
            A new <see cref="T:XmlPrime.Serialization.XdmReader"/> instance.
            </returns>
      <exception cref="T:System.ArgumentNullException">	The <paramref name="input"/> value is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.Create(System.String)">
      <summary>
            Creates an <see cref="T:XmlPrime.Serialization.XdmReader"/> instance using the specified URI.
            </summary>
      <param name="inputUri">The URI for the file containing the XML data. The <see cref="T:System.Xml.XmlUrlResolver"/> class is used to convert the path to a canonical data representation.</param>
      <returns>
            A new <see cref="T:XmlPrime.Serialization.XdmReader"/> instance.
            </returns>
      <exception cref="T:System.ArgumentNullException">	The <paramref name="inputUri"/> value is <see langword="null"/>.</exception>
      <exception cref="T:System.IO.FileNotFoundException">	The file specified by the URI cannot be found..</exception>
      <exception cref="T:System.UriFormatException">The URI format is not correct.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.Create(System.String,XmlPrime.Serialization.XdmReaderSettings)">
      <summary>
            Creates an <see cref="T:XmlPrime.Serialization.XdmReader"/> instance using the specified URI and
            <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> object.
            </summary>
      <param name="inputUri">The URI for the file containing the XML data. The <see cref="T:System.Xml.XmlUrlResolver"/> class is used to convert the path to a canonical data representation.</param>
      <param name="settings">
        <para>The <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> object used to configure the new 
            <see cref="T:XmlPrime.Serialization.XdmReader"/> instance.  If this is <see langword="null"/>, an 
            <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> with default settings is used.</para>
      </param>
      <returns>
            A new <see cref="T:XmlPrime.Serialization.XdmReader"/> instance.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputUri"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentNullException">	The <paramref name="inputUri"/> value is <see langword="null"/>.</exception>
      <exception cref="T:System.IO.FileNotFoundException">	The file specified by the URI cannot be found..</exception>
      <exception cref="T:System.UriFormatException">The URI format is not correct.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.Create(System.String,XmlPrime.Serialization.XdmReaderSettings,System.Xml.XmlParserContext)">
      <summary>
            Creates an <see cref="T:XmlPrime.Serialization.XdmReader"/> instance using the specified URI,
            <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> and <see cref="T:System.Xml.XmlParserContext"/> objects.
            </summary>
      <param name="inputUri">The URI for the file containing the XML data. The <see cref="T:System.Xml.XmlUrlResolver"/> class is used to convert the path to a canonical data representation.</param>
      <param name="settings">The <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> object used to configure the new
            <see cref="T:XmlPrime.Serialization.XdmReader"/> instance.  If this is <see langword="null"/>, an
            <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> with default settings is used.</param>
      <param name="inputContext">The <see cref="T:System.Xml.XmlParserContext"/> object that provides the context information required to parse the XML fragment. 
            The context information can include the <see cref="T:System.Xml.XmlNameTable"/> to use, encoding, namespace scope, the current xml:lang and xml:space scope, 
            base URI, and document type definition.  This value can be <see langword="null"/>.</param>
      <returns>
            A new <see cref="T:XmlPrime.Serialization.XdmReader"/> instance.
            </returns>
      <exception cref="T:System.IO.FileNotFoundException"/>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputUri"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file specified by the URI cannot be found..</exception>
      <exception cref="T:System.UriFormatException">The URI format is not correct.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.Create(System.Uri)">
      <summary>
            Creates an <see cref="T:XmlPrime.Serialization.XdmReader"/> instance using the specified URI.
            </summary>
      <param name="inputUri">The URI for the file containing the XML data. The <see cref="T:System.Xml.XmlUrlResolver"/> class is used to convert the path to a canonical data representation.</param>
      <returns>
            A new <see cref="T:XmlPrime.Serialization.XdmReader"/> instance.
            </returns>
      <exception cref="T:System.ArgumentNullException">	The <paramref name="inputUri"/> value is <see langword="null"/>.</exception>
      <exception cref="T:System.IO.FileNotFoundException">	The file specified by the URI cannot be found..</exception>
      <exception cref="T:System.UriFormatException">The URI format is not correct.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.Create(System.Uri,XmlPrime.Serialization.XdmReaderSettings)">
      <summary>
            Creates an <see cref="T:XmlPrime.Serialization.XdmReader"/> instance using the specified URI and
            <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> object.
            </summary>
      <param name="inputUri">The URI for the file containing the XML data. The <see cref="T:System.Xml.XmlUrlResolver"/> class is used to convert the path to a canonical data representation.</param>
      <param name="settings">
        <para>The <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> object used to configure the new 
            <see cref="T:XmlPrime.Serialization.XdmReader"/> instance.  If this is <see langword="null"/>, an 
            <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> with default settings is used.</para>
      </param>
      <returns>
            A new <see cref="T:XmlPrime.Serialization.XdmReader"/> instance.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputUri"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentNullException">	The <paramref name="inputUri"/> value is <see langword="null"/>.</exception>
      <exception cref="T:System.IO.FileNotFoundException">	The file specified by the URI cannot be found..</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.Create(System.Uri,XmlPrime.Serialization.XdmReaderSettings,System.Xml.XmlParserContext)">
      <summary>
            Creates an <see cref="T:XmlPrime.Serialization.XdmReader"/> instance using the specified URI and
            <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> and <see cref="T:System.Xml.XmlParserContext"/> objects.
            </summary>
      <param name="inputUri">The URI for the file containing the XML data. The <see cref="T:System.Xml.XmlUrlResolver"/> class is used to convert the path to a canonical data representation.</param>
      <param name="settings">The <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> object used to configure the new
            <see cref="T:XmlPrime.Serialization.XdmReader"/> instance.  If this is <see langword="null"/>, an
            <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> with default settings is used.</param>
      <param name="inputContext">The <see cref="T:System.Xml.XmlParserContext"/> object that provides the context information required to parse the XML fragment. 
            The context information can include the <see cref="T:System.Xml.XmlNameTable"/> to use, encoding, namespace scope, the current xml:lang and xml:space scope, 
            base URI, and document type definition.  This value can be <see langword="null"/>.</param>
      <returns>
            A new <see cref="T:XmlPrime.Serialization.XdmReader"/> instance.
            </returns>
      <exception cref="T:System.IO.FileNotFoundException"/>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputUri"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file specified by the URI cannot be found..</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.Create(System.IO.TextReader)">
      <summary>
            Creates an <see cref="T:XmlPrime.Serialization.XdmReader"/> instance using the specified <see cref="T:System.IO.TextWriter"/>.
            </summary>
      <param name="textReader">The <see cref="T:System.IO.TextReader"/> to which you want to write.</param>
      <returns>
            A new <see cref="T:XmlPrime.Serialization.XdmReader"/> instance.
            </returns>
      <remarks>
            An <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> object with default settings is used to create the reader.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">There is an error with the serialization configuration.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.Create(System.IO.TextReader,XmlPrime.Serialization.XdmReaderSettings)">
      <summary>
            Creates an <see cref="T:XmlPrime.Serialization.XdmReader"/> instance using the specified <see cref="T:System.IO.TextReader"/> and
            <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> object.
            </summary>
      <param name="textReader">The <see cref="T:System.IO.TextReader"/> from which you want to read.</param>
      <param name="settings">
        <para>The <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> object used to configure the new 
            <see cref="T:XmlPrime.Serialization.XdmReader"/> instance.  If this is <see langword="null"/>, an 
            <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> with default settings is used.</para>
      </param>
      <returns>
            A new <see cref="T:XmlPrime.Serialization.XdmReader"/> instance.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">There is an error with the serialization configuration.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.Create(System.IO.TextReader,XmlPrime.Serialization.XdmReaderSettings,System.String)">
      <summary>
            Creates an <see cref="T:XmlPrime.Serialization.XdmReader"/> instance using the specified <see cref="T:System.IO.TextReader"/> and
            <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> object.
            </summary>
      <param name="textReader">The <see cref="T:System.IO.TextReader"/> from which you want to read.</param>
      <param name="settings">The <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> object used to configure the new
            <see cref="T:XmlPrime.Serialization.XdmReader"/> instance.  If this is <see langword="null"/>, an
            <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> with default settings is used.</param>
      <param name="baseUri">The base URI for the entity or document being read. This value can be <see langword="null"/>.</param>
      <returns>
            A new <see cref="T:XmlPrime.Serialization.XdmReader"/> instance.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.XdmException">There is an error with the serialization configuration.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.Create(System.IO.TextReader,XmlPrime.Serialization.XdmReaderSettings,System.Xml.XmlParserContext)">
      <summary>
            Creates an <see cref="T:XmlPrime.Serialization.XdmReader"/> instance using the specified <see cref="T:System.IO.TextReader"/> and
            <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> object.
            </summary>
      <param name="textReader">The <see cref="T:System.IO.TextReader"/> from which you want to read.</param>
      <param name="settings">The <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> object used to configure the new
            <see cref="T:XmlPrime.Serialization.XdmReader"/> instance.  If this is <see langword="null"/>, an
            <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> with default settings is used.</param>
      <param name="inputContext">The input context.</param>
      <returns>
            A new <see cref="T:XmlPrime.Serialization.XdmReader"/> instance.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.XdmException">There is an error with the serialization configuration.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.Close">
      <summary>
            Changes the <see cref="P:System.Xml.XmlReader.ReadState"/> to Closed.
            </summary>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.GetAttribute(System.Int32)">
      <summary>
            Gets the value of the attribute with the specified index.
            </summary>
      <param name="i">The index of the attribute. The index is zero-based. (The first attribute has index 0.)</param>
      <returns>
            The value of the specified attribute. This method does not move the reader.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i"/> is out of range. It must be non-negative and less than the size of the attribute collection.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.GetAttribute(System.String,System.String)">
      <summary>
            Gets the value of the attribute with the specified <see cref="P:System.Xml.XmlReader.LocalName"/> and <see cref="P:System.Xml.XmlReader.NamespaceURI"/>.
            </summary>
      <param name="name">The local name of the attribute.</param>
      <param name="namespaceURI">The namespace URI of the attribute.</param>
      <returns>
            The value of the specified attribute. If the attribute is not found or the value is String.Empty, <see langword="nuill"/> is returned. This method does not move the reader.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> is <see langword="null"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.GetAttribute(System.String)">
      <summary>
            Gets the value of the attribute with the specified <see cref="P:System.Xml.XmlReader.Name"/>.
            </summary>
      <param name="name">The qualified name of the attribute.</param>
      <returns>
            The value of the specified attribute. If the attribute is not found or the value is String.Empty, <see langword="null"/> is returned.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> is <see langword="null"/> .
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.MoveToAttribute(System.String,System.String)">
      <summary>
            When overridden in a derived class, moves to the attribute with the specified <see cref="P:System.Xml.XmlReader.LocalName"/> and <see cref="P:System.Xml.XmlReader.NamespaceURI"/>.
            </summary>
      <param name="name">The local name of the attribute.</param>
      <param name="ns">The namespace URI of the attribute.</param>
      <returns>
        <see langword="true"/> if the attribute is found; otherwise, <see langword="false"/>. If <see langword="false"/>, the reader's position does not change.
            </returns>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.MoveToAttribute(System.String)">
      <summary>
            When overridden in a derived class, moves to the attribute with the specified <see cref="P:System.Xml.XmlReader.Name"/>.
            </summary>
      <param name="name">The qualified name of the attribute.</param>
      <returns>
        <see langword="true"/> if the attribute is found; otherwise, <see langword="false"/>. If <see langword="false"/>, the reader's position does not change.
            </returns>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.MoveToElement">
      <summary>
            When overridden in a derived class, moves to the element that contains the current attribute node.
            </summary>
      <returns>
        <see langword="true"/> if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); false
            <see langword="false"/> if the reader is not positioned on an attribute (the position of the reader does not change).
            </returns>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.MoveToFirstAttribute">
      <summary>
            When overridden in a derived class, moves to the first attribute.
            </summary>
      <returns>
        <see langword="true"/> if an attribute exists (the reader moves to the first attribute); otherwise, <see langword="false"/> (the position of the reader does not change).
            </returns>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.MoveToNextAttribute">
      <summary>
            When overridden in a derived class, moves to the next attribute.
            </summary>
      <returns>
        <see langword="true"/> if there is a next attribute; <see langword="false"/> if there are no more attributes.
            </returns>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.Read">
      <summary>
            Rreads the next node from the stream.
            </summary>
      <returns>
        <see langword="true"/> if the next node was read successfully; <see langword="false"/> if there are no more nodes to read.
            </returns>
      <exception cref="T:System.Xml.XmlException">
            An error occurred while parsing the XML.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.ReadAttributeValue">
      <summary>
            When overridden in a derived class, parses the attribute value into one or more Text, EntityReference, or EndEntity nodes.
            </summary>
      <returns>
        <see langword="true"/> if there are nodes to return.
            <see langword="false"/> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.
            An empty attribute, such as, misc="", returns true with a single node with a value of String.Empty.
            </returns>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.ResolveEntity">
      <summary>
            When overridden in a derived class, resolves the entity reference for EntityReference nodes.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            The reader is not positioned on an EntityReference node; this implementation of the reader cannot resolve entities (<see cref="P:System.Xml.XmlReader.CanResolveEntity"/> returns false).
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.NotationPublicId(System.String)">
      <summary>
            Returns the public identifier of the specified notation.
            </summary>
      <param name="notationName">The name of the notation.</param>
      <returns>The public identifier of a notation declared in the current document.
            If no notation with the name specified exists, or if the notation has no public identifier,
            <see langword="null"/> is returned.
            </returns>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.NotationSystemId(System.String)">
      <summary>
            Returns the system identifier of the specified unparsed external entity.
            </summary>
      <param name="notationName">The name of the notation.</param>
      <returns>The absolute URI obtained by resolving the system identifier of the unparsed entity information item against its base URI.
            If no notation with the name specified exists, <see langword="null"/> is returned.
            </returns>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.UnparsedEntityNotation(System.String)">
      <summary>
            Returns the notation of the specified unparsed external entity.
            </summary>
      <param name="entityName">The name of the entity.</param>
      <returns>The notation of an unparsed external entity declared in the current document.
            If no entity with the name specified exists, or if the entity is not an external unparsed entity,  or if the entity has no NDATA declaration,
            <see langword="null"/> is returned.
            </returns>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.UnparsedEntityPublicId(System.String)">
      <summary>
            Returns the public identifier of the specified unparsed external entity.
            </summary>
      <param name="entityName">The name of the entity.</param>
      <returns>The public identifier of an unparsed external entity declared in the current document.
            If no entity with the name specified exists, or if the entity is not an external unparsed entity,  or if the entity has no public identifier,
            <see langword="null"/> is returned.
            </returns>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.UnparsedEntitySystemId(System.String)">
      <summary>
            Returns the system identifier of the specified unparsed external entity.
            </summary>
      <param name="entityName">The name of the entity.</param>
      <returns>The absolute URI obtained by resolving the system identifier of the unparsed entity information item against its base URI.
            If no entity with the name specified exists, or if the entity is not an external unparsed entity, <see langword="null"/> is returned.
            </returns>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.HasLineInfo">
      <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
      <returns>
            true if <see cref="P:System.Xml.IXmlLineInfo.LineNumber"/> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition"/> can be provided; otherwise, false.
            </returns>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>
            Gets a collection of defined prefix-namespace mappings that are currently in scope.
            </summary>
      <param name="scope">An <see cref="T:System.Xml.XmlNamespaceScope"/> value that specifies the type of namespace nodes to return.</param>
      <returns>
            An <see cref="T:System.Collections.IDictionary"/> that contains the current in-scope namespaces.
            </returns>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.LookupNamespace(System.String)">
      <summary>
            When overridden in a derived class, resolves a namespace prefix in the current element's scope.
            </summary>
      <param name="prefix">The prefix whose namespace URI you want to resolve. To match the default namespace, pass an empty string.</param>
      <returns>
            The namespace URI to which the prefix maps or null if no matching prefix is found.
            </returns>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReader.LookupPrefix(System.String)">
      <summary>
            Gets the prefix that is mapped to the specified namespace URI.
            </summary>
      <param name="namespaceName">The namespace URI whose prefix you wish to find.</param>
      <returns>
            The prefix that is mapped to the namespace URI; null if the namespace URI is not mapped to a prefix.
            </returns>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.AttributeCount">
      <summary>
            Gets the number of attributes on the current node.
            </summary>
      <value>The number of attributes on the current node.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.AttributeType">
      <summary>
            When positioned on an attribute node, gets the 
            </summary>
      <value>
            The type of the attribute.
            </value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.BaseURI">
      <summary>
            Gets the base URI of the current node.
            </summary>
      <value>The base URI of the current node.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.CanResolveEntity">
      <summary>
            Gets a value indicating whether this reader can parse and resolve entities.
            </summary>
      <returns>
        <see langword="true"/> if the reader can parse and resolve entities; otherwise, <see langword="false"/>.</returns>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.Depth">
      <summary>
            Gets the depth of the current node in the XML document.
            </summary>
      <value>The depth of the current node in the XML document.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.EOF">
      <summary>
            Gets a value indicating whether the reader is positioned at the end of the stream.
            </summary>
      <value>
        <see langword="true"/> if the reader is positioned at the end of the stream; otherwise, <see langword="false"/>.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.HasValue">
      <summary>
            Gets a value indicating whether the current node can have a <see cref="P:System.Xml.XmlReader.Value"/>.
            </summary>
      <value/>
      <returns>
        <see langword="true"/> if the node on which the reader is currently positioned can have a Value; otherwise, <see langword="false"/>. If <see langword="false"/>, the node has a value of String.Empty.
            </returns>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.IsDefault">
      <summary>
            When overridden in a derived class, gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.
            </summary>
      <returns>
        <see langword="true"/> if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; 
            <see langword="false"/> if the attribute value was explicitly set.</returns>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.IsEmptyElement">
      <summary>
            Gets a value indicating whether the current node is an empty element (for example, &lt;MyElement/&gt;).
            </summary>
      <value/>
      <returns>
        <see langword="true"/> if the current node is an element (<see cref="P:System.Xml.XmlReader.NodeType"/> equals X mlNodeType.Element) that ends with /&gt;; otherwise, <see langword="false"/>.
            </returns>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.IsId">
      <summary>
            Gets a value indicating whether the current node is an XML ID.
            </summary>
      <value>
        <see langword="true"/> if the urrent node is an XML ID; otherwise, <see langword="false"/>.
            </value>
      <remarks>
            Exactly what constitutes an ID depends in part on how the data model was constructed.  See 
            <see href="http://www.w3.org/TR/xpath-datamodel/">XQuery 1.0 and XPath 2.0 Data Model (XDM) (Second Edition)</see></remarks>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.IsIdrefs">
      <summary>
            Gets a value indicating whether the current node is an XML IDREF or IDREFS.
            </summary>
      <value>
        <see langword="true"/> if the urrent node is an XML IDREF or IDREFS; otherwise, <see langword="false"/>.
            </value>
      <remarks>
            Exactly what constitutes an IDREF or IDREFS depends in part on how the data model was constructed.  See 
            <see href="http://www.w3.org/TR/xpath-datamodel/">XQuery 1.0 and XPath 2.0 Data Model (XDM) (Second Edition)</see></remarks>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.IsNilled">
      <summary>
            Gets a value indicating whether the current node is nilled.
            </summary>
      <value>
        <see langword="true"/> if the urrent node is an element and the value for the validated element is nil; otherwise, <see langword="false"/>.
            </value>
      <remarks>
        <see href="http://www.w3.org/TR/xmlschema-1/">XML Schema Part 1: Structures Second Edition</see> introduced the nilled mechanism to signal that an element 
            should be accepted as valid when it has no content even when it has a content type which does not require or even necessarily allow empty content.
            </remarks>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.LocalName">
      <summary>
            Gets the local name of the current node.
            </summary>
      <value> The name of the current node with the prefix removed.  For node types that do not have a name (like Text, Comment, and so on), this property returns String.Empty.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.NameTable">
      <summary>
            Gets the <see cref="T:System.Xml.XmlNameTable"/> associated with this implementation.
            </summary>
      <value/>
      <returns>
            The <see cref="T:System.Xml.XmlNameTable"/> enabling you to get the atomized version of a string within the node.
            </returns>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.NamespaceURI">
      <summary>
            Gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.
            </summary>
      <value/>
      <returns>
            The namespace URI of the current node; otherwise an empty string.
            </returns>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.NodeType">
      <summary>
            Gets the type of the current node.
            </summary>
      <value/>
      <returns>
            One of the <see cref="T:System.Xml.XmlNodeType"/> values representing the type of the current node.
            </returns>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.Notations">
      <summary>
            Returns the names of the declared notations.
            </summary>
      <returns>A <see cref="T:System.Collections.Generic.ICollection`1"/> containing the names of the declared notations.</returns>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.Prefix">
      <summary>
            Gets the namespace prefix associated with the current node.
            </summary>
      <value/>
      <returns>
            The namespace prefix associated with the current node.
            </returns>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.QuoteChar">
      <summary>
            When overridden in a derived class, gets the quotation mark character used to enclose the value of an attribute node.
            </summary>
      <returns>The quotation mark character (" or ') used to enclose the value of an attribute node.</returns>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.ReadState">
      <summary>
            Gets the state of the reader.
            </summary>
      <value/>
      <returns>
            One of the <see cref="T:System.Xml.ReadState"/> values.
            </returns>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.Settings">
      <summary>
            Gets the <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> object used to create this <see cref="T:XmlPrime.Serialization.XdmReader"/> instance.
            </summary>
      <returns>The <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> object used to create this reader instance.</returns>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.UnparsedEntities">
      <summary>
            Returns the names of the unparsed external entities.
            </summary>
      <returns>A <see cref="T:System.Collections.Generic.ICollection`1"/> containing the names of the external unparsed entities.
            </returns>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.Value">
      <summary>
            Gets the text value of the current node.
            </summary>
      <value>The value returned depends on the <see cref="P:System.Xml.XmlReader.NodeType"/> of the node.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.XmlLang">
      <summary>
            When overridden in a derived class, gets the current xml:lang scope.
            </summary>
      <returns>The current xml:lang scope.</returns>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.XmlSpace">
      <summary>
            When overridden in a derived class, gets the current xml:space scope.
            </summary>
      <returns>One of the <see cref="T:System.Xml.XmlSpace"/> values. If no xml:space scope exists, this property defaults to XmlSpace.None.</returns>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.LineNumber">
      <summary>
            Gets the current line number.
            </summary>
      <returns>The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).</returns>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReader.LinePosition">
      <summary>
            Gets the current line position.
            </summary>
      <returns>The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).</returns>
    </member>
    <member name="T:XmlPrime.Serialization.XdmReaderSettings">
      <summary>
            Specifies a set of features to support on the <see cref="T:XmlPrime.Serialization.XdmReader"/> object created by the <see cref="M:XmlPrime.Serialization.XdmReader.Create(System.IO.Stream)"/> method.
            </summary>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReaderSettings.#ctor(XmlPrime.Serialization.XdmReaderSettings)">
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> class from another instance.
            </summary>
      <param name="settings">The settings.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReaderSettings.#ctor(System.Xml.XmlReaderSettings)">
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> class from an <see cref="T:System.Xml.XmlReaderSettings"/> instance.
            </summary>
      <param name="settings">The settings.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReaderSettings.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> class.
            </summary>
    </member>
    <member name="M:XmlPrime.Serialization.XdmReaderSettings.Clone">
      <summary>
            Creates a copy of the <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> instance.
            </summary>
      <returns>The cloned <see cref="T:XmlPrime.Serialization.XdmReaderSettings"/> object.</returns>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReaderSettings.CloseInput">
      <summary>
            Gets or sets a value indicating whether the underlying stream or <see cref="T:System.IO.TextReader"/> should be closed when the reader is closed.
            </summary>
      <value>
        <see langword="true"/> to close the underlying stream or <see cref="T:System.IO.TextReader"/> when the reader is closed; otherwise <see langword="false"/>. The default is <see langword="false"/>.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReaderSettings.ConformanceLevel">
      <summary>
            Gets or sets the level of conformance to which the <see cref="T:XmlPrime.Serialization.XdmReader"/>  will comply.
            </summary>
      <value>One of the <see cref="P:XmlPrime.Serialization.XdmReaderSettings.ConformanceLevel"/> values. The default is <see cref="F:System.Xml.ConformanceLevel.Document"/>.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReaderSettings.DtdProcessing">
      <summary>
            Gets or sets a value that determines the processing of DTDs.
            </summary>
      <value>One of the <see cref="P:XmlPrime.Serialization.XdmReaderSettings.DtdProcessing"/> values.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReaderSettings.IgnoreComments">
      <summary>
            Gets or sets a value indicating whether to ignore comments.
            </summary>
      <value>
        <see langword="true"/> to ignore comments; otherwise <see langword="false"/>.  The default is <see langword="false"/>.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReaderSettings.IgnoreProcessingInstructions">
      <summary>
            Gets or sets a value indicating whether to ignore processing instructions.
            </summary>
      <value>
        <see langword="true"/> to ignore processing instructions; otherwise <see langword="false"/>.  The default is <see langword="false"/>.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReaderSettings.IgnoreWhitespace">
      <summary>
            Gets or sets a value indicating whether to ignore insignificant white space.
            </summary>
      <value>
        <see langword="true"/> to ignore white space; otherwise <see langword="false"/>.  The default is <see langword="false"/>.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReaderSettings.LineNumberOffset">
      <summary>
            Gets or sets line number offset of the <see cref="T:XmlPrime.Serialization.XdmReader"/>  object..
            </summary>
      <value>The line number offset.  The	 default is 0.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReaderSettings.LinePositionOffset">
      <summary>
            Gets or sets line position  offset of the <see cref="T:XmlPrime.Serialization.XdmReader"/>  object..
            </summary>
      <value>The line position  offset.  The default is 0.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReaderSettings.MaxCharactersFromEntities">
      <summary>
            Gets or sets a value indicating the maximum allowable number of characters in a document that result from expanding entities.
            </summary>
      <value>The maximum allowable number of characters in an XML document. The default is 0.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReaderSettings.MaxCharactersInDocument">
      <summary>
            Gets or sets a value indicating the maximum allowable number of characters in an XML document. A zero (0) value means no limits on the size of the XML document. A non-zero value specifies the maximum size, in characters.
            </summary>
      <value>The maximum allowable number of characters in an XML document. The default is 0.</value>
      <remarks>
            This property allows you to mitigate denial of service attacks where the attacker submits extremely large XML document. By limiting the size of a document, you can detect the attack and recover reliably.
            </remarks>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReaderSettings.NameTable">
      <summary>
            Gets or sets the <see cref="T:System.Xml.XmlNameTable"/> used for atomized string comparisons.
            </summary>
      <value>The name table.  The default value is <see langword="null"/>.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReaderSettings.Schemas">
      <summary>
            Gets or sets the <see cref="T:System.Xml.Schema.XmlSchemaSet"/> to use when performing schema validation.
            </summary>
      <value>The <see cref="T:System.Xml.Schema.XmlSchemaSet"/> to use. The default is an empty <see cref="T:System.Xml.Schema.XmlSchemaSet"/> object.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReaderSettings.StandardsConformance">
      <summary>
            Gets or sets the standards conformance.
            </summary>
      <value>The standards conformance.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReaderSettings.ValidationFlags">
      <summary>
            Gets or sets a value indicating the schema validation settings. This setting applies to schema validating XmlReader  objects (ValidationType  property set to ValidationType.Schema).
            </summary>
      <value>A set of <see cref="T:System.Xml.Schema.XmlSchemaValidationFlags"/> values. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints"/> and <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes"/> are enabled by default. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema"/>,<see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation"/>, and <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings"/> are disabled by default.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReaderSettings.ValidationType">
      <summary>
            Gets or sets a value indicating whether the <see cref="T:XmlPrime.Serialization.XdmReader"/> will perform validation or type assignment when reading.
            </summary>
      <value>One of the <see cref="T:System.Xml.ValidationType"/> values. The default is <see cref="F:System.Xml.ValidationType.None"/> .</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmReaderSettings.XmlResolver">
      <summary>
            Sets the <see cref="P:XmlPrime.Serialization.XdmReaderSettings.XmlResolver"/> used to access external documents.
            </summary>
      <value>An <see cref="P:XmlPrime.Serialization.XdmReaderSettings.XmlResolver"/>  used to access external documents.  If set to <see langword="null"/>, an <see cref="T:System.Xml.XmlException"/> is thrown when the XmlReader  tries to access an external resource. The default is a new <see cref="T:System.Xml.XmlUrlResolver"/> with no credentials.</value>
    </member>
    <member name="T:XmlPrime.UcaAlternateHandling">
      <summary>
            Enumerates the UCA alternate handling methods.
            </summary>
      <remarks>
            This controls the handling of variable characters in the UCA: white space, punctuation marks, and symbols.
            </remarks>
    </member>
    <member name="F:XmlPrime.UcaAlternateHandling.Unspecified">
      <summary>
            The UCA alternate handling has not been specified.
            </summary>
    </member>
    <member name="F:XmlPrime.UcaAlternateHandling.NonIgnorable">
      <summary>
            Requested "non-ignorable" UCA alternate handling.
            </summary>
    </member>
    <member name="F:XmlPrime.UcaAlternateHandling.Shifted">
      <summary>
            Requested "shifted" UCA alternate handling.
            </summary>
      <remarks>
            The UCA default for alternate handling is shifted, 
            </remarks>
    </member>
    <member name="F:XmlPrime.UcaAlternateHandling.Blanked">
      <summary>
            Requested "blocked" UCA alternate handling.
            </summary>
    </member>
    <member name="T:XmlPrime.UcaCollationSettings">
      <summary>
            Represents the tailorable settings of the UCA collation algorithm.
            </summary>
      <seealso href="http://unicode.org/reports/tr10/">Unicode® Technical Standard #10 Unicode Collation Algorithm</seealso>
    </member>
    <member name="P:XmlPrime.UcaCollationSettings.Alternate">
      <summary>
            Controls the handling of characters such as spaces and hyphens; specifically, the "noise" characters in the groups selected by the <see cref="P:XmlPrime.UcaCollationSettings.MaxVariable"/> parameter.
            </summary>
      <value>
             One of the <see cref="T:XmlPrime.UcaAlternateHandling"/> values.
            </value>
    </member>
    <member name="P:XmlPrime.UcaCollationSettings.Backwards">
      <summary>
            Gets a value indicating whether the last accent in a term is the most significant.
            </summary>
      <value>
              A value of <see langword="true"/> indicates that the last accept in the term is the most significant.
            </value>
    </member>
    <member name="P:XmlPrime.UcaCollationSettings.CaseLevel">
      <summary>
            Gets a value indicating whether to ignore accents while taking account of case.
            </summary>
      <value>
             	When used with primary strength, a value of <see langword="true"/> has the effect of ignoring accents while taking account of case.
            </value>
    </member>
    <member name="P:XmlPrime.UcaCollationSettings.CaseOrder">
      <summary>
            Gets a value indicating whether upper-case precedes lower-case or vice versa.
            </summary>
      <value>
            One of the <see cref="T:System.Xml.XPath.XmlCaseOrder"/> values.
            </value>
    </member>
    <member name="P:XmlPrime.UcaCollationSettings.Fallback">
      <summary>
            Gets or sets a value indicating whether to use a fallback collation if the exact collation is not supported.
            </summary>
      <value>
        <see langword="true"/>&gt; if fallback is permitted; otherwise, <see langword="false"/>.
            </value>
    </member>
    <member name="P:XmlPrime.UcaCollationSettings.Language">
      <summary>
            Gets the language whose collation conventions are to be used.
            </summary>
      <value>
            A value in the lexical space of <c>xs:language</c>, or <see langword="null"/> if a language has not been specified.
            </value>
    </member>
    <member name="P:XmlPrime.UcaCollationSettings.MaxVariable">
      <summary>
            Gets the set of characters for which alternate handling will occur.
            </summary>
      <value>
            One of the <see cref="T:XmlPrime.UcaMaxVariable"/> values.  The default is <see cref="F:XmlPrime.UcaMaxVariable.Punct"/>.
            </value>
    </member>
    <member name="P:XmlPrime.UcaCollationSettings.Normalization">
      <summary>
            	Gets a value indicating whether search terms are converted to normalization form D.
            </summary>
    </member>
    <member name="P:XmlPrime.UcaCollationSettings.Numeric">
      <summary>
            Gets or sets a value indicating whether a sequence of consecutive digits is interpreted as a number.
            </summary>
      <value>
        <see langword="true"/> if a sequence of consecutive digits is interpreted as a number; otherwise <see langword="false"/>.
            </value>
    </member>
    <member name="P:XmlPrime.UcaCollationSettings.Reorder">
      <summary>
            Gets the a collection of reoder codes.
            </summary>
      <value>
            A sequence of reorder codes, where a reorder code is one of space, punct, 
            symbol, currency, digit, or a four-letter script code defined in [ISO 15924 Register],
             the register of scripts maintained by the Unicode Consortium in its capacity as registration 
            authority for [ISO 15924].	Determines the relative ordering of text in different scripts;
             for example the value digit,Grek,Latn indicates that digits pr
            </value>
    </member>
    <member name="P:XmlPrime.UcaCollationSettings.Strength">
      <summary>
            Gets the collation strength as defined in UCA.
            </summary>
      <value>
            One of the <see cref="T:XmlPrime.UcaCollationStrength"/> values.
            The default value is <see cref="F:XmlPrime.UcaCollationStrength.Tertiary"/></value>
    </member>
    <member name="P:XmlPrime.UcaCollationSettings.Version">
      <summary>
            Gets the version.
            </summary>
      <value>
            Gets he version number of the UCA to be used, or <see langword="null"/> if a version has not been specified.
            </value>
    </member>
    <member name="T:XmlPrime.UcaCollationStrength">
      <summary>
            Enumerates the collation strength as defined in UCA.
            </summary>
      <remarks>
            This controls the similarity of features of a writing system such as accents and case.
            </remarks>
    </member>
    <member name="F:XmlPrime.UcaCollationStrength.Unspecified">
      <summary>
            The UCA collation strength has not been specified.
            </summary>
    </member>
    <member name="F:XmlPrime.UcaCollationStrength.Primary">
      <summary>
            Primary strength takes only the base form of the character into account.
            </summary>
    </member>
    <member name="F:XmlPrime.UcaCollationStrength.Secondary">
      <summary>
            Secondary strength ignores case but considers accents and diacritics as significant
            </summary>
    </member>
    <member name="F:XmlPrime.UcaCollationStrength.Tertiary">
      <summary>
            Tertiary considers case as significant
            </summary>
      <remarks>
            The default for strength in UCA is tertiary;
            </remarks>
    </member>
    <member name="F:XmlPrime.UcaCollationStrength.Quaternary">
      <summary>
            Quaternary considers spaces and punctuation that would otherwise be ignored
            </summary>
    </member>
    <member name="F:XmlPrime.UcaCollationStrength.Identical">
      <summary>
            Identical is used to achieve a semi-stable sort.
            </summary>
    </member>
    <member name="T:XmlPrime.UcaMaxVariable">
      <summary>
            Enumerates groups of characters subject to alternative processing in the UCA collation algorithm.
            </summary>
    </member>
    <member name="F:XmlPrime.UcaMaxVariable.Unspecified">
      <summary>
            The value has not been specified.
            </summary>
    </member>
    <member name="F:XmlPrime.UcaMaxVariable.Space">
      <summary>
            Whitespace.
            </summary>
    </member>
    <member name="F:XmlPrime.UcaMaxVariable.Punct">
      <summary>
            Punctuation characters
            </summary>
    </member>
    <member name="F:XmlPrime.UcaMaxVariable.Symbol">
      <summary>
            Symbols.
            </summary>
    </member>
    <member name="F:XmlPrime.UcaMaxVariable.Currency">
      <summary>
            Currency symbole.
            </summary>
    </member>
    <member name="T:XmlPrime.XdmNavigator">
      <summary>
              Provides an extension of <see cref="T:System.Xml.XPath.XPathNavigator"/> which exposes accessors from 
              the XQuery 1.0 and XPath 2.0 Data Model not available with <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
    </member>
    <member name="M:XmlPrime.XdmNavigator.UniqueId">
      <summary>
            Returns a <see cref="T:System.String"/> value which acts as a unique identifier for the current node in the context of the containing fragment.
            </summary>
      <value>A <see cref="T:System.String"/> value.</value>
      <remarks>
            The returned identifier must consist of ASCII alphanumeric characters and must start with an alphabetic character. 
            Thus, the string is syntactically an XML name.
            </remarks>
    </member>
    <member name="M:XmlPrime.XdmNavigator.UnparsedEntityPublicId(System.String)">
      <summary>
              Returns the public identifier of the specified entity name.
            </summary>
      <param name="entityName">The entity name.</param>
      <returns>The public identifier of the specified unparsed external entity, or <see langword="null"/>
              if the entity does not exist, or is not an external unparsed entity, or if the entity has no public 
              identifier.</returns>
    </member>
    <member name="M:XmlPrime.XdmNavigator.UnparsedEntitySystemId(System.String)">
      <summary>
              Returns the system identifier of the specified entity name.
            </summary>
      <param name="entityName">The entity name.</param>
      <returns>The system identifier of the specified unparsed external entity, or <see langword="null"/>
              if the entity with the name specified in <paramref name="entityName"/> does not exist or is not an 
              external unparsed entity.</returns>
    </member>
    <member name="M:XmlPrime.XdmNavigator.HasLineInfo">
      <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
      <returns>
        <see langword="true"/> if <see cref="P:System.Xml.IXmlLineInfo.LineNumber"/> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition"/> can be provided; otherwise, <see langword="false"/>.
            </returns>
    </member>
    <member name="P:XmlPrime.XdmNavigator.DocumentURI">
      <summary>
              Gets the document URI.
            </summary>
      <value>The document URI.</value>
    </member>
    <member name="P:XmlPrime.XdmNavigator.IsId">
      <summary>
              Gets a value indicating whether the current node is an XML ID.
            </summary>
      <value>
        <see langword="true"/> if the current node is an XML ID; otherwise <see langword="false"/>.</value>
      <remarks>
              Exactly what constitutes an ID depends in part on how the data model was constructed.
            </remarks>
    </member>
    <member name="P:XmlPrime.XdmNavigator.IsIdrefs">
      <summary>
              Gets a value indicating whether the current node is an XML IDREF or IDREFS.
            </summary>
      <value>
        <see langword="true"/> if the current node is an XML IDREF or IDREFS; otherwise <see langword="false"/>.</value>
      <remarks>
              Exactly what constitutes an IDREF or IDREFS depends in part on how the data model was constructed, see 6.2 Element Nodes and 6.3 Attribute Nodes.
            </remarks>
    </member>
    <member name="P:XmlPrime.XdmNavigator.NormalizedDocumentURI">
      <summary>
              Gets the normalized document URI.
            </summary>
      <value>The normalized absolute document URI, <see cref="F:System.String.Empty"/> if the document URI property is absent, or
            <see langword="null"/> if the document URI is invalid or a relative URI.</value>
      <remarks>
            The normalized URI is used to determine whether two documents are the same document.
            </remarks>
    </member>
    <member name="P:XmlPrime.XdmNavigator.LineNumber">
      <summary>
            Gets the current line number.
            </summary>
      <value/>
      <returns>
            The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns <see langword="false"/>).
            </returns>
    </member>
    <member name="P:XmlPrime.XdmNavigator.LinePosition">
      <summary>
            Gets the current line position.
            </summary>
      <value/>
      <returns>
            The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns <see langword="false"/>).
            </returns>
    </member>
    <member name="T:XmlPrime.XmlPreloadedResolver">
      <summary>
            An implementation of <see cref="T:System.Xml.XmlResolver"/> which provides resolution of commonly used DTDs without requiring network access.
            </summary>
      <remarks>
            This class is provided for those developing with .NET framework versions prior to 4.0.
            </remarks>
    </member>
    <member name="M:XmlPrime.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.XmlPreloadedResolver"/> class.
            </summary>
      <param name="fallbackResolver">The fallback resolver.</param>
      <remarks>
            When not <see langword="null"/>, requests for resources not handled by the
            <see cref="T:XmlPrime.XmlPreloadedResolver"/> will be resolved using the <see cref="T:System.Xml.XmlResolver"/>
            specified by <paramref name="fallbackResolver"/>.  
            </remarks>
    </member>
    <member name="M:XmlPrime.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>
            Maps a URI to an object containing the actual resource.
            </summary>
      <param name="absoluteUri">The URI returned from <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)"/>.</param>
      <param name="role">The current version does not use this parameter when resolving URIs. This is provided for future extensibility purposes. For example, this can be mapped to the xlink:role and used as an implementation specific argument in other scenarios.</param>
      <param name="ofObjectToReturn">The type of object to return. The current version only returns <see cref="T:System.IO.Stream"/> objects.</param>
      <returns>
            A <see cref="T:System.IO.Stream"/> object or <see langword="null"/> if a type other than stream is specified.
            </returns>
    </member>
    <member name="M:XmlPrime.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
      <summary>
            When overridden in a derived class, resolves the absolute URI from the base and relative URIs.
            </summary>
      <param name="baseUri">The base URI used to resolve the relative URI</param>
      <param name="relativeUri">The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the <paramref name="baseUri"/> value. If relative, it combines with the <paramref name="baseUri"/> to make an absolute URI.</param>
      <returns>
            A <see cref="T:System.Uri"/> representing the absolute URI or null if the relative URI cannot be resolved.
            </returns>
    </member>
    <member name="P:XmlPrime.XmlPreloadedResolver.Credentials">
      <summary>
            Sets the credentials used to authenticate Web requests.
            </summary>
      <returns>An <see cref="T:System.Net.ICredentials"/> object. If this property is not set, the value defaults to null; that is, the XmlResolver has no user credentials.</returns>
    </member>
    <member name="P:XmlPrime.XmlPreloadedResolver.PreloadedUris">
      <summary>
            Gets a collection containing the URIs of preloaded resources.
            </summary>
      <value>
            A collection of <see cref="T:System.Uri"/>.
            </value>
    </member>
    <member name="T:XmlPrime.Serialization.XmlStandardsConformance">
      <summary>
            Specifies the standards that are met by the created <see cref="T:XmlPrime.Serialization.XdmReader"/>.
            </summary>
    </member>
    <member name="F:XmlPrime.Serialization.XmlStandardsConformance.XmlVersion10">
      <summary>
            The <see cref="T:XmlPrime.Serialization.XdmReader"/> object should support XML 1.0 (Fifth Edition) and Namespaces in XML 1.0 (Third Edition).
            </summary>
      <remarks>
            In the case where an XML 1.1 document is encountered, an error is raised.
            </remarks>
    </member>
    <member name="F:XmlPrime.Serialization.XmlStandardsConformance.XmlVersion11">
      <summary>
            The <see cref="T:XmlPrime.Serialization.XdmReader"/> object should support XML 1.1 (Second  Edition) and Namespaces in XML 1.1 (Second  Edition).
            </summary>
      <remarks>
            In the case where an XML 1.0 document is encountered, an error is raised.
            </remarks>
    </member>
    <member name="F:XmlPrime.Serialization.XmlStandardsConformance.XmlVersionAuto">
      <summary>
            The <see cref="T:XmlPrime.Serialization.XdmReader"/> object should support both XML 1.0 (Fifth Edition) and XML 1.1 (Second  Edition).
            </summary>
    </member>
    <member name="F:XmlPrime.Serialization.XmlStandardsConformance.XmlBase">
      <summary>
            The <see cref="T:XmlPrime.Serialization.XdmReader"/> object should support XML Base (Second Edition)
            </summary>
    </member>
    <member name="F:XmlPrime.Serialization.XmlStandardsConformance.XmlId">
      <summary>
            The <see cref="T:XmlPrime.Serialization.XdmReader"/> object should support xml:id Version 1.0
            </summary>
    </member>
    <member name="F:XmlPrime.Serialization.XmlStandardsConformance.XmlIdUniqueness">
      <summary>
             The <see cref="T:XmlPrime.Serialization.XdmReader"/> object should support ensure the uniqueness of xml:id attribute values.
            </summary>
    </member>
    <member name="F:XmlPrime.Serialization.XmlStandardsConformance.XmlSpaceValidation">
      <summary>
            The <see cref="T:XmlPrime.Serialization.XdmReader"/> object should perform checking of xml:space attributes.
            </summary>
    </member>
    <member name="F:XmlPrime.Serialization.XmlStandardsConformance.XmlLangValidation">
      <summary>
            The <see cref="T:XmlPrime.Serialization.XdmReader"/> object should perform checking of xml:lang attributes.
            </summary>
    </member>
    <member name="F:XmlPrime.Serialization.XmlStandardsConformance.NamespaceValidation">
      <summary>
            The <see cref="T:XmlPrime.Serialization.XdmReader"/> object should perform namespace validation.
            </summary>
    </member>
    <member name="T:XmlPrime.XPathAtomicValue">
      <summary>
              Represents an atomic value in the XQuery 1.0 and XPath 2.0 Data Model (XDM).
            </summary>
      <remarks>
        <para>An atomic value is equivalent to a singleton sequence containing that item.</para>
        <para>
                Note that the CLR types used to represent atomic values in XmlPrime do not correspond exactly to those used in 
                the <see cref="N:System.Xml"/> classes.  For more information on the types used to represent atomic values in
                XmlPrime, see <see href="34ad290f-e400-4498-b9af-264676542b7f.htm">Mapping Atomic Types to CLR Types</see>.
              </para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(System.String)">
      <overloads>Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class.</overloads>
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from a <see cref="T:System.String"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:string</c>.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.CreateUntypedAtomic(System.String)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from a <see cref="T:System.String"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:untypedAtomic</c>.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.CreateAnyUri(System.String)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from a <see cref="T:System.String"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:anyURI</c>.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value"/> is not a valid <c>xs:anyURI</c> value.</exception>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(XmlPrime.DateTimeWithZone)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from a <see cref="T:XmlPrime.DateTimeWithZone"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:dateTime</c>.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(XmlPrime.DateWithZone)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from a <see cref="T:XmlPrime.DateWithZone"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:date</c>.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(XmlPrime.TimeWithZone)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from a <see cref="T:XmlPrime.TimeWithZone"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:time</c>.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(XmlPrime.Duration)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from a <see cref="T:XmlPrime.Duration"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:duration</c>.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(XmlPrime.DayTimeDuration)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from a <see cref="T:XmlPrime.DayTimeDuration"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:dayTimeDuration</c>.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(XmlPrime.YearMonthDuration)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from a <see cref="T:XmlPrime.YearMonthDuration"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:yearMonthDuration</c>.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(System.Single)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from a <see cref="T:System.Single"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:float</c>.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(System.Double)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from a <see cref="T:System.Double"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:double</c>.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(System.Decimal)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from a <see cref="T:System.Decimal"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:decimal</c>.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.CreateInteger(System.Decimal)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from a <see cref="T:System.Decimal"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:integer</c>.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value"/> is not a valid <c>xs:integer</c> value.</exception>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(System.Int64)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from a <see cref="T:System.Int64"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:long</c>.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(System.Int32)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from an <see cref="T:System.Int32"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:int</c>.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(System.Int16)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from a <see cref="T:System.Int16"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:short</c>.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(System.SByte)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from a <see cref="T:System.SByte"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:byte</c>.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(System.UInt64)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from an <see cref="T:System.UInt64"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:unsignedlong</c>.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(System.UInt32)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from an <see cref="T:System.UInt32"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:unsignedInt</c>.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(System.UInt16)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from an <see cref="T:System.UInt16"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:unsignedShort</c>.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(System.Byte)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from a <see cref="T:System.Byte"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:unsignedByte</c>.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(XmlPrime.GYear)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from a <see cref="T:XmlPrime.GYear"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:gYear</c>.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(XmlPrime.GYearMonth)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from a <see cref="T:XmlPrime.GYearMonth"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:gYearMonth</c>.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(XmlPrime.GMonth)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from a <see cref="T:XmlPrime.GMonth"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:gMonth</c>.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(XmlPrime.GMonthDay)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from a <see cref="T:XmlPrime.GMonthDay"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:gMonthDay</c>.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(XmlPrime.GDay)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from a <see cref="T:XmlPrime.GDay"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:gDay</c>.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(System.Boolean)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from a <see cref="T:System.Boolean"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:boolean</c>.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.CreateBase64Binary(System.Byte[])">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from an array of <see cref="T:System.Byte"/> values.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:base64Binary</c>.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.CreateHexBinary(System.Byte[])">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from an array of <see cref="T:System.Byte"/> values.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:hexBinary</c>.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(XmlPrime.AnyUri)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from an <see cref="T:XmlPrime.AnyUri"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:anyURI</c>.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Create(System.Xml.XmlQualifiedName)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XPathAtomicValue"/> class from a <see cref="T:System.Xml.XmlQualifiedName"/> value.
            </summary>
      <param name="value">The value of the created atomic value.</param>
      <returns>A new <see cref="T:XmlPrime.XPathAtomicValue"/> with type <c>xs:QName</c>.</returns>
      <remarks>The constructed <c>xs:QName</c> value will have prefix <see cref="F:System.String.Empty"/>.</remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Data(System.Xml.XPath.XPathNavigator)">
      <summary>
            Returns the typed value of the specified <paramref name="navigator"/>.
            </summary>
      <param name="navigator">The navigator whose typed value is to be returned.</param>
      <returns>
            The typed value of a node is a sequence of atomic values and can be extracted by applying the <c>fn:data</c> function to the node
            </returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Equals(System.Object)">
      <summary>
              Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
      <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
      <returns>
              true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
      <exception cref="T:System.NullReferenceException">
              The <paramref name="obj"/> parameter is null.
            </exception>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.ToString">
      <summary>
              Returns a <see cref="T:System.String"/> that represents the current <see cref="T:XmlPrime.XPathAtomicValue"/>.
            </summary>
      <returns>
              A <see cref="T:System.String"/> that represents the current <see cref="T:XmlPrime.XPathAtomicValue"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.GetHashCode">
      <summary>
              Serves as a hash code for a particular type.
            </summary>
      <returns>A hash code.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <overloads>
              Returns the item's value as the specified type.
            </overloads>
      <summary>
              Returns the item's value as the type specified using the <see cref="T:System.Xml.IXmlNamespaceResolver"/>
              object specified to resolve namespace prefixes.
            </summary>
      <param name="returnType">The type to return the item value as.</param>
      <param name="nsResolver">The <see cref="T:System.Xml.IXmlNamespaceResolver"/> object used to resolve namespace
              prefixes.</param>
      <returns>
              The value of the item as the type requested.
            </returns>
      <exception cref="T:System.FormatException">
              The item's value is not in the correct format for the target type.
            </exception>
      <exception cref="T:System.InvalidCastException">
              The attempted cast is not valid.
            </exception>
      <exception cref="T:System.OverflowException">
              The attempted cast resulted in an overflow.
            </exception>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.EffectiveBooleanValue">
      <summary>
              Returns the effective boolean value of this item.
            </summary>
      <returns>
              The effective boolean value of this item.
            </returns>
      <exception cref="T:System.NotSupportedException">Thrown if the current item is not a valid argument to <c>xs:boolean</c>.</exception>
      <remarks>
        <para>The effective boolean value of an item is computed as follows:</para>
        <list type="number">
          <item>
            <description>If the item is of type <c>xs:boolean</c> or derived from <c>xs:boolean</c>, returns the <see cref="P:XmlPrime.XPathAtomicValue.ValueAsBoolean"/>.</description>
          </item>
          <item>
            <description>If the item is of type <c>xs:string</c>, <c>xs:anyURI</c>, <c>xs:untypedAtomic</c>, or a type derived from one 
                        of these, returns <see langword="false"/> if the  value has zero length; otherwise it returns <see langword="true"/>.</description>
          </item>
          <item>
            <description>If the item is of any numeric type or derived from a numeric type, returns <see langword="false"/> if the operand value is <c>NaN</c> or is numerically equal to zero; otherwise it returns <see langword="true"/>.</description>
          </item>
          <item>
            <description>In all other cases, <see cref="M:XmlPrime.XPathAtomicValue.EffectiveBooleanValue"/> raises an exception.</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.EffectiveNumericValue">
      <summary>
              Returns the effective numeric value of this item.
            </summary>
      <returns>
              The effective numeric value of this item.
            </returns>
      <remarks>
        <para>The effective boolean value of an item is computed as follows:</para>
        <list type="number">
          <item>
            <description>If the item is of type <c>xs:double</c> or derived from <c>xs:double</c>, returns the <see cref="P:XmlPrime.XPathAtomicValue.ValueAsDouble"/>.</description>
          </item>
          <item>
            <description>If the item is of type <c>xs:float</c> or derived from <c>xs:float</c>, returns the <see cref="P:XmlPrime.XPathAtomicValue.ValueAsSingle"/> cast to type <see cref="T:System.Double"/>.</description>
          </item>
          <item>
            <description>If the item is of type <c>xs:decimal</c> or derived from <c>xs:decimal</c>, returns the <see cref="P:XmlPrime.XPathAtomicValue.ValueAsDecimal"/> cast to type <see cref="T:System.Double"/>.</description>
          </item>
          <item>
            <description>If the item is of type <c>xs:boolean</c> or derived from <c>xs:boolean</c>, returns 
                        <c>1.0E0</c> if <see cref="P:XmlPrime.XPathAtomicValue.ValueAsBoolean"/> is <see langword="true"/>, or
                        <c>0.0E0</c> if <see cref="P:XmlPrime.XPathAtomicValue.ValueAsBoolean"/> is <see langword="false"/>.</description>
          </item>
          <item>
            <description>If the item is of type <c>xs:string</c> or <c>xs:untypedAtomic</c>, or a type derived from one 
                        of these, returns the <see cref="P:XmlPrime.XPathAtomicValue.ValueAsString"/> parsed as a <see cref="T:System.Double"/>, or <see cref="F:System.Double.NaN"/>
                        if <see cref="P:XmlPrime.XPathAtomicValue.ValueAsString"/> is not a valid lexical representation of <c>xs:double</c>.</description>
          </item>
          <item>
            <description>In all other cases, <see cref="F:System.Double.NaN"/> is returned.</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.ToCanonicalString">
      <summary>
              Returns a <see cref="T:System.String"/> that represents the current <see cref="T:XmlPrime.XPathAtomicValue"/> in
            its canonical form.
            </summary>
      <returns>
              A <see cref="T:System.String"/> that represents the current <see cref="T:XmlPrime.XPathAtomicValue"/> in its 
            canonical form.
            </returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.Equals(XmlPrime.XPathAtomicValue)">
      <summary>
              Determines whether the specified <see cref="T:XmlPrime.XPathAtomicValue"/> is equal to the current <see cref="T:XmlPrime.XPathAtomicValue"/>.
            </summary>
      <param name="otherValue">The other value.</param>
      <returns>
        <see langword="true"/> if this instance is always equal to the other value; <see langword="false"/> otherwise.</returns>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.DeepEquals(XmlPrime.XPathAtomicValue,XmlPrime.Collation,XmlPrime.TimeZone)">
      <summary>
            Tests if this <see cref="T:XmlPrime.XPathAtomicValue"/> is deep-equal to the specified <see cref="T:XmlPrime.XPathAtomicValue"/> under the specified collation and implicit time zone.
            </summary>
      <param name="other">The value to compare.</param>
      <param name="collation">The collation to use for the comparison.</param>
      <param name="implicitTimeZone">The implicit time zone.</param>
      <returns>
        <see langword="true"/> if this value is equal to <paramref name="other"/>;  <see langword="false"/> otherwise.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other"/> or <paramref name="collation"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.NotSupportedException">The values cannot be compared.</exception>
      <remarks>
        <para>Comparison follows the rules of <c>fn:deep-equal</c>.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xpath-functions/#func-deep-equal">15.3.1 fn:deep-equal [XQuery 1.0 and XPath 2.0 Functions and Operators (Second Edition)]</seealso>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.DeepEquals(XmlPrime.XPathAtomicValue)">
      <summary>
            Tests if this <see cref="T:XmlPrime.XPathAtomicValue"/> is deep-equal to the specified <see cref="T:XmlPrime.XPathAtomicValue"/> under the codepoint collation and the current time zone.
            </summary>
      <param name="other">The value to compare.</param>
      <returns>
        <see langword="true"/> if this value is equal to <paramref name="other"/>;  <see langword="false"/> otherwise.
            </returns>
      <exception cref="T:System.InvalidCastException"/>
      <exception cref="T:System.NotSupportedException">The values cannot be compared.</exception>
      <remarks>
        <para>Comparison follows the rules of <c>fn:deep-equal</c>.</para>
        <para>This method is equivalent to calling passing <see cref="P:XmlPrime.Collation.CodepointCollation"/> and <see cref="P:XmlPrime.TimeZone.CurrentTimeZone"/> 
            as arguments to <see cref="M:XmlPrime.XPathAtomicValue.DeepEquals(XmlPrime.XPathAtomicValue,XmlPrime.Collation,XmlPrime.TimeZone)"/>.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xpath-functions/#func-deep-equal">15.3.1 fn:deep-equal [XQuery 1.0 and XPath 2.0 Functions and Operators (Second Edition)]</seealso>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.ValueEquals(XmlPrime.XPathAtomicValue,XmlPrime.Collation,XmlPrime.TimeZone)">
      <summary>
            Tests if this <see cref="T:XmlPrime.XPathAtomicValue"/> is equal to the specified <see cref="T:XmlPrime.XPathAtomicValue"/> under the specified collation and implicit time zone.
            </summary>
      <param name="other">The value to compare.</param>
      <param name="collation">The collation to use for the comparison.</param>
      <param name="implicitTimeZone">The implicit time zone.</param>
      <returns>
        <see langword="true"/> if this value is equal to <paramref name="other"/>;  <see langword="false"/> otherwise.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other"/> or <paramref name="collation"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.NotSupportedException">The values cannot be compared.</exception>
      <remarks>
        <para>Comparison follows the rules of XQuery value comparisons.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xquery/#id-value-comparisons">3.5.1 Value Comparisons [XQuery 1.0: An XML Query Language (Second Edition)]</seealso>
    </member>
    <member name="M:XmlPrime.XPathAtomicValue.ValueEquals(XmlPrime.XPathAtomicValue)">
      <summary>
            Tests if this <see cref="T:XmlPrime.XPathAtomicValue"/> is equal to the specified <see cref="T:XmlPrime.XPathAtomicValue"/> under the codepoint collation and the current time zone.
            </summary>
      <param name="other">The value to compare.</param>
      <returns>
        <see langword="true"/> if this value is equal to <paramref name="other"/>;  <see langword="false"/> otherwise.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.InvalidCastException"/>
      <exception cref="T:System.NotSupportedException">The values cannot be compared.</exception>
      <remarks>
        <para>Comparison follows the rules of XQuery value comparisons.</para>
        <para>This method is equivalent to calling passing <see cref="P:XmlPrime.Collation.CodepointCollation"/> and <see cref="P:XmlPrime.TimeZone.CurrentTimeZone"/> 
            as arguments to <see cref="M:XmlPrime.XPathAtomicValue.ValueEquals(XmlPrime.XPathAtomicValue,XmlPrime.Collation,XmlPrime.TimeZone)"/>.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xquery/#id-value-comparisons">3.5.1 Value Comparisons [XQuery 1.0: An XML Query Language (Second Edition)]</seealso>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.IsNode">
      <summary>
              Gets a value indicating whether the item represents a node or an atomic value.
            </summary>
      <value>
        <see langword="true"/> if the item is a node; otherwise <see langword="false"/>.</value>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.Value">
      <summary>
              Gets the string value of the item.
            </summary>
      <value>The string value of the item</value>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsBoolean">
      <summary>
              Gets the item's value as a <see cref="T:System.Boolean"/>.
            </summary>
      <value>
              The item's value as a <see cref="T:System.Boolean"/>.
            </value>
      <exception cref="T:System.FormatException">The value was not a valid lexical value for <c>xs:boolean</c>.</exception>
      <exception cref="T:System.InvalidCastException">The value cannot be cast to <c>xs:boolean</c>.</exception>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsByte">
      <summary>
              Gets the item's value as a <see cref="T:System.Byte"/>.
            </summary>
      <value>The item's value as a <see cref="T:System.Byte"/>.</value>
      <exception cref="T:System.InvalidCastException">The value cannot be cast to <c>xs:QName</c>.</exception>
      <exception cref="T:System.FormatException">The value was not a valid lexical value for <c>xs:byte</c>.</exception>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsBytes">
      <summary>
              Gets the item's value as a <see cref="T:System.Byte"/> array.
            </summary>
      <returns>The item's value as a <see cref="T:System.Byte"/> array.</returns>
      <exception cref="T:System.FormatException">The value was not a valid lexical value for <c>xs:base64Binary</c>.</exception>
      <exception cref="T:System.InvalidCastException">The value cannot be cast to <c>xs:base64Binary</c>.</exception>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsBase64Binary">
      <summary>
              Gets the item's value as a <see cref="T:XmlPrime.Base64Binary"/> instance.
            </summary>
      <returns>The item's value as a <see cref="T:XmlPrime.Base64Binary"/> instance.</returns>
      <exception cref="T:System.FormatException">The value was not a valid lexical value for <c>xs:base64Binary</c>.</exception>
      <exception cref="T:System.InvalidCastException">The value cannot be cast to <c>xs:base64Binary</c>.</exception>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsHexBinary">
      <summary>
              Gets the item's value as a <see cref="T:XmlPrime.HexBinary"/> instance.
            </summary>
      <returns>The item's value as a <see cref="T:XmlPrime.HexBinary"/> instance.</returns>
      <exception cref="T:System.FormatException">The value was not a valid lexical value for <c>xs:hexBinary</c>.</exception>
      <exception cref="T:System.InvalidCastException">The value cannot be cast to <c>xs:hexBinary</c>.</exception>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsDateTime">
      <summary>
              When overridden in a derived class, gets the item's value as a <see cref="T:System.DateTime"/>.
            </summary>
      <value>The item's value as a <see cref="T:System.DateTime"/>.</value>
      <exception cref="T:System.FormatException">
              The item's value is not in the correct format for the <see cref="T:System.DateTime"/> type.
            </exception>
      <exception cref="T:System.InvalidCastException">
              The attempted cast to <see cref="T:System.DateTime"/> is not valid.
            </exception>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsDateTimeWithZone">
      <summary>
              Gets the item's value as a <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <value>
              The item's value as a <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </value>
      <exception cref="T:System.OverflowException">The value was too large to be stored in a <see cref="T:XmlPrime.DateTimeWithZone"/></exception>
      <exception cref="T:System.FormatException">The value was not a valid lexical value for <c>xs:dateTime</c>.</exception>
      <exception cref="T:System.InvalidCastException">The value cannot be cast to <c>xs:dateTime</c>.</exception>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsDateWithZone">
      <summary>
              Gets the item's value as a <see cref="T:XmlPrime.DateWithZone"/>.
            </summary>
      <value>
              The item's value as a <see cref="T:XmlPrime.DateWithZone"/>.
            </value>
      <exception cref="T:System.OverflowException">The value was too large to be stored in a <see cref="T:XmlPrime.DateWithZone"/></exception>
      <exception cref="T:System.FormatException">The value was not a valid lexical value for <c>xs:date</c>.</exception>
      <exception cref="T:System.InvalidCastException">The value cannot be cast to <c>xs:date</c>.</exception>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsDayTimeDuration">
      <summary>
              Gets the item's value as a <see cref="T:XmlPrime.DayTimeDuration"/>.
            </summary>
      <value>
              The item's value as a <see cref="T:XmlPrime.DayTimeDuration"/>.
            </value>
      <exception cref="T:System.OverflowException">The value was too large to be stored in a <see cref="T:XmlPrime.DayTimeDuration"/></exception>
      <exception cref="T:System.FormatException">The value was not a valid lexical value for <c>xs:dayTimeDuration</c>.</exception>
      <exception cref="T:System.InvalidCastException">The value cannot be cast to <c>xs:dayTimeDuration</c>.</exception>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsDecimal">
      <summary>
              Gets the item's value as a <see cref="T:System.Decimal"/>.
            </summary>
      <value>
              The item's value as a <see cref="T:System.Decimal"/>.
            </value>
      <exception cref="T:System.OverflowException">The value was too large to be stored in a <see cref="T:System.Decimal"/></exception>
      <exception cref="T:System.FormatException">The value was not a valid lexical value for <c>xs:decimal</c>.</exception>
      <exception cref="T:System.InvalidCastException">The value cannot be cast to <c>xs:decimal</c>.</exception>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsDouble">
      <summary>
              Gets the item's value as a <see cref="T:System.Double"/>.
            </summary>
      <value>
              The item's value as a <see cref="T:System.Double"/>.
            </value>
      <exception cref="T:System.OverflowException">The value was too large to be stored in a <see cref="T:System.Double"/></exception>
      <exception cref="T:System.FormatException">The value was not a valid lexical value for <c>xs:double</c>.</exception>
      <exception cref="T:System.InvalidCastException">The value cannot be cast to <c>xs:double</c>.</exception>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsDuration">
      <summary>
              Gets the item's value as a <see cref="T:XmlPrime.Duration"/>.
            </summary>
      <value>
              The item's value as a <see cref="T:XmlPrime.Duration"/>.
            </value>
      <summary>
              Gets the item's value as a <see cref="T:System.Decimal"/>.
            </summary>
      <value>
              The item's value as a <see cref="T:System.Decimal"/>.
            </value>
      <exception cref="T:System.OverflowException">The value was too large to be stored in a <see cref="T:XmlPrime.Duration"/></exception>
      <exception cref="T:System.FormatException">The value was not a valid lexical value for <c>xs:duration</c>.</exception>
      <exception cref="T:System.InvalidCastException">The value cannot be cast to <c>xs:duration</c>.</exception>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsGDay">
      <summary>
              Gets the item's value as a <see cref="T:XmlPrime.GDay"/>.
            </summary>
      <value>
              The item's value as a <see cref="T:XmlPrime.GDay"/>.
            </value>
      <summary>
              Gets the item's value as a <see cref="T:System.Decimal"/>.
            </summary>
      <value>
              The item's value as a <see cref="T:System.Decimal"/>.
            </value>
      <exception cref="T:System.FormatException">The value was not a valid lexical value for <c>xs:gDay</c>.</exception>
      <exception cref="T:System.InvalidCastException">The value cannot be cast to <c>xs:gDay</c>.</exception>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsGMonth">
      <summary>
              Gets the item's value as a <see cref="T:XmlPrime.GMonth"/>.
            </summary>
      <value>
              The item's value as a <see cref="T:XmlPrime.GMonth"/>.
            </value>
      <exception cref="T:System.FormatException">The value was not a valid lexical value for <c>xs:gMonth</c>.</exception>
      <exception cref="T:System.InvalidCastException">The value cannot be cast to <c>xs:gMonth</c>.</exception>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsGMonthDay">
      <summary>
              Gets the item's value as a <see cref="T:XmlPrime.GMonthDay"/>.
            </summary>
      <value>
              The item's value as a <see cref="T:XmlPrime.GMonthDay"/>.
            </value>
      <exception cref="T:System.FormatException">The value was not a valid lexical value for <c>xs:gMonthDay</c>.</exception>
      <exception cref="T:System.InvalidCastException">The value cannot be cast to <c>xs:gMonthDay</c>.</exception>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsGYear">
      <summary>
              Gets the item's value as a <see cref="T:XmlPrime.GYear"/>.
            </summary>
      <value>
              The item's value as a <see cref="T:XmlPrime.GYear"/>.
            </value>
      <exception cref="T:System.OverflowException">The value was too large to be stored in a <see cref="T:XmlPrime.GYear"/></exception>
      <exception cref="T:System.FormatException">The value was not a valid lexical value for <c>xs:gYear</c>.</exception>
      <exception cref="T:System.InvalidCastException">The value cannot be cast to <c>xs:gYear</c>.</exception>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsGYearMonth">
      <summary>
              Gets the item's value as a <see cref="T:XmlPrime.GYearMonth"/>.
            </summary>
      <value>
              The item's value as a <see cref="T:XmlPrime.GYearMonth"/>.
            </value>
      <exception cref="T:System.OverflowException">The value was too large to be stored in a <see cref="T:XmlPrime.GYearMonth"/></exception>
      <exception cref="T:System.FormatException">The value was not a valid lexical value for <c>xs:gYearMonth</c>.</exception>
      <exception cref="T:System.InvalidCastException">The value cannot be cast to <c>xs:gYearMonth</c>.</exception>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsInt">
      <summary>
              Gets the item's value as an <see cref="T:System.Int32"/>.
            </summary>
      <value>The item's value as an <see cref="T:System.Int32"/>.</value>
      <exception cref="T:System.FormatException">
              The item's value is not in the correct format for the <see cref="T:System.Int32"/> type.
            </exception>
      <exception cref="T:System.InvalidCastException">
              The attempted cast to <see cref="T:System.Int32"/> is not valid.
            </exception>
      <exception cref="T:System.OverflowException">
              The attempted cast resulted in an overflow.
            </exception>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsInt16">
      <summary>
              Gets the item's value as an <see cref="T:System.Int16"/>.
            </summary>
      <value>
              The item's value as an <see cref="T:System.Int16"/>.
            </value>
      <exception cref="T:System.OverflowException">The value was too large to be stored in a <see cref="T:XmlPrime.GYearMonth"/></exception>
      <exception cref="T:System.FormatException">The value was not a valid lexical value for <c>xs:gYearMonth</c>.</exception>
      <exception cref="T:System.InvalidCastException">The value cannot be cast to <c>xs:gYearMonth</c>.</exception>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsLong">
      <summary>
              Gets the item's value as an <see cref="T:System.Int64"/>.
            </summary>
      <value>
              The item's value as an <see cref="T:System.Int64"/>.
            </value>
      <exception cref="T:System.FormatException">
              The item's value is not in the correct format for the <see cref="T:System.Int64"/> type.
            </exception>
      <exception cref="T:System.InvalidCastException">
              The attempted cast to <see cref="T:System.Int64"/> is not valid.
            </exception>
      <exception cref="T:System.OverflowException">
              The attempted cast resulted in an overflow.
            </exception>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsQName">
      <summary>
              Gets the item's value as a <see cref="T:XmlPrime.QName"/>.
            </summary>
      <value>The item's value as a <see cref="T:XmlPrime.QName"/>.</value>
      <exception cref="T:System.InvalidCastException">The value cannot be cast to <c>xs:QName</c>.</exception>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsSingle">
      <summary>
              Gets the item's value as a <see cref="T:System.Single"/>.
            </summary>
      <value>
              The item's value as a <see cref="T:System.Single"/>.
            </value>
      <exception cref="T:System.OverflowException">The value was too large to be stored in a <see cref="T:System.Single"/></exception>
      <exception cref="T:System.FormatException">The value was not a valid lexical value for <c>xs:float</c>.</exception>
      <exception cref="T:System.InvalidCastException">The value cannot be cast to <c>xs:float</c>.</exception>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsString">
      <summary>
              Gets the item's value as a <see cref="T:System.String"/>.
            </summary>
      <value>
              The item's value as a <see cref="T:System.String"/>.
            </value>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsTimeWithZone">
      <summary>
              Gets the item's value as a <see cref="T:XmlPrime.TimeWithZone"/>.
            </summary>
      <value>
              The item's value as a <see cref="T:XmlPrime.TimeWithZone"/>.
            </value>
      <exception cref="T:System.FormatException">The value was not a valid lexical value for <c>xs:time</c>.</exception>
      <exception cref="T:System.InvalidCastException">The value cannot be cast to <c>xs:time</c>.</exception>
    </member>
    <member name="P:XmlPrime.XPathAtomicValue.ValueAsYearMonthDuration">
      <summary>
              Gets the item's value as a <see cref="T:XmlPrime.YearMonthDuration"/>.
            </summary>
      <value>
              The item's value as a <see cref="T:XmlPrime.YearMonthDuration"/>.
            </value>
      <exception cref="T:System.OverflowException">The value was too large to be stored in a <see cref="T:XmlPrime.YearMonthDuration"/></exception>
      <exception cref="T:System.FormatException">The value was not a valid lexical value for <c>xs:yearMonthDuration</c>.</exception>
      <exception cref="T:System.InvalidCastException">The value cannot be cast to <c>xs:yearMonthDuration</c>.</exception>
    </member>
    <member name="T:XmlPrime.XdmModule">
      <summary>
            	A module that can be imported in an XQuery program, XSL transformation or XPath expression.
            </summary>
      <remarks>
        <para>
            		Libraries can be made available to an XQuery program, XPath expression or XSL transformation by adding them to
            		the <see cref="P:XmlPrime.StaticContextSettings.Libraries"/> collection.
            	</para>
        <para>
            		All functions within an <see cref="T:XmlPrime.XdmModule"/> are in the library's target namespace
            		(as specified by <see cref="P:XmlPrime.XdmModule.TargetNamespace"/>).
            	</para>
      </remarks>
      <seealso href="modules.htm">Modules</seealso>
    </member>
    <member name="M:XmlPrime.XdmModule.NativeModule``1">
      <summary>
            	Returns a module defined by a native .NET type.
            </summary>
      <typeparam name="T">The type that contains methods to expose.</typeparam>
      <returns>
            	A new instance of <see cref="T:XmlPrime.XdmModule"/> containing functions representing methods from 
            	<typeparamref name="T"/>.
            </returns>
      <exception cref="T:System.InvalidOperationException">
            	An <see cref="T:System.InvalidOperationException"/> is raised in the following conditions:
            	<list type="bullet"><item><description><typeparamref name="T"/> is a generic type.</description></item><item><description>The target URI is not a valid absolute <c>xs:anyURI</c>.</description></item><item><description>The target URI is <see cref="F:XmlPrime.XmlNamespaces.XPathFunctionsNamespace"/>.</description></item><item><description><typeparamref name="T"/> is marked with the <see cref="T:XmlPrime.XdmModuleAttribute"/> attribute and one of the
            		      	methods marked with <see cref="T:XmlPrime.XdmFunctionAttribute"/> could not be imported, as it did not satisfy all
            		      	of the conditions above.
            		      </description></item></list></exception>
      <remarks>
        <para>
            		For an example of the use of this function, see <see href="modules.htm">Modules</see>.
            	</para>
        <para>
            		Libraries of functions can be made available to an XQuery program, XPath expression or XSL transformation by
            		adding them to the <see cref="P:XmlPrime.StaticContextSettings.Libraries"/> collection.
            	</para>
        <para>
            		If <typeparamref name="T"/> is annotated with the <see cref="T:XmlPrime.XdmModuleAttribute"/> then the target
            		namespace can be specified by the attribute.  If the attribute is not present, or the namespace is not
            		declared, then the namespace of the function library is a uri with the scheme <c>clitype</c>.  The
            		path of the URI is the full CLI name of the type.
            	</para>
            	Here are some examples:
            	<list type="table"><listheader><term>Type</term><description>URI</description></listheader><item><term><see cref="T:System.Math"/></term><description><c>clitype:System.Math</c></description></item><item><term><see cref="T:System.Decimal"/></term><description><c>clitype:System.Decimal</c></description></item><item><term><see cref="T:System.Environment.SpecialFolder"/></term><description><c>clitype:System.Environment+SpecialFolder</c> (note that this is an enumeration, and as such has no
            				static methods to import, but this still serves as an example of how to reference a nested type)
            			</description></item></list><para><typeparamref name="T"/> must be a non-generic class, otherwise a <see cref="T:System.NotSupportedException"/> is
            		thrown.
            	</para><para class="warning">
            		Note that in order to ensure well defined behaviour, all functions used from within the XQuery program, XPath
            		expression or XSL transformation should be pure and deterministic (that is, they should have no side-effects
            		and the value returned from the function must depend only on the values of its arguments).  How many times
            		each function is called, whether the function is called and the order in which functions are called is
            		undefined and will change based on how the query is optimized.
            	</para><para>
            		If <typeparamref name="T"/> is annotated with the <see cref="T:XmlPrime.XdmModuleAttribute"/> attribute, then only
            		those methods marked with <see cref="T:XmlPrime.XdmFunctionAttribute"/> will be included.  If any of these methods
            		fail to satisfy the conditions below then an <see cref="T:System.InvalidOperationException"/> is thrown.
             </para><para>
            		If <typeparamref name="T"/> is not annotated with the <see cref="T:XmlPrime.XdmModuleAttribute"/> attribute, then 
            		only those methods satisfying the conditions below will be exported.
             </para><list type="bullet"><item><description>The method is public.</description></item><item><description>The method is not a generic method.</description></item><item><description>The exported name of the method is a valid NCName value.</description></item><item><description>The name of all the parameters are valid NCName values.</description></item><item><description>The return type is <see href="modules.htm#nativetypes">supported</see>.</description></item><item><description>All the parameter types are <see href="modules.htm#nativetypes">supported</see>.</description></item><item><description>None of the parameters are ref or out parameters.</description></item><item><description>None of the parameters are variable length argument lists.</description></item><item><description>If the method is overloaded, then no overload has the same number of arguments.</description></item></list><para>
            		If a method has the same exported name and number of arguments as a method in a base class that would be exported,
            		then the base class methods with the same name and number of arguments are excluded.
            	</para><para>
            		Exported method can be marked with the <see cref="T:XmlPrime.XdmFunctionAttribute"/> which allows the exported name
            		of the method to be overridden. The parameters and return values of an exported method can be marked with
            		the <see cref="T:XmlPrime.XdmTypeAttribute"/> attribute which specifies the XDM type of the arguments and return types of the exported function.
             </para><para>
            		More information about how native methods are bound to XQuery functions can be found on the
            		<see href="modules.htm#native">Native modules</see> page.
             </para></remarks>
      <seealso cref="T:XmlPrime.XdmModuleAttribute"/>
      <seealso cref="T:XmlPrime.XdmFunctionAttribute"/>
      <seealso cref="T:XmlPrime.XdmTypeAttribute"/>
      <seealso cref="P:XmlPrime.StaticContextSettings.Libraries"/>
      <seealso href="modules.htm#native">Native modules</seealso>
    </member>
    <member name="M:XmlPrime.XdmModule.NativeModule(System.Reflection.Assembly,System.String)">
      <summary>
             Returns a module defined by a native .NET type located within the specified assembly.
             </summary>
      <param name="assembly">The assembly containing annotated types.</param>
      <param name="targetNamespace">The target namespace.</param>
      <returns>
            	A new instance of <see cref="T:XmlPrime.XdmModule"/> containing functions representing methods from the
             <see cref="T:System.Type"/> which is annotated with the specified <paramref name="targetNamespace"/> if one
             exists; otherwise <see langword="null"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.XdmModule.NativeModule(System.Type)">
      <summary>
            	Returns a module defined by the specified native .NET type.
            </summary>
      <param name="type">The type that contains methods to expose.</param>
      <returns>
            	A new instance of <see cref="T:XmlPrime.XdmModule"/> containing functions representing methods from 
             <paramref name="type"/></returns>
      <exception cref="T:System.InvalidOperationException">
            	An <see cref="T:System.InvalidOperationException"/> is raised in the following conditions:
            	<list type="bullet"><item><description><paramref name="type"/> is a generic type.</description></item><item><description>The target URI is not a valid absolute <c>xs:anyURI</c>.</description></item><item><description>The target URI is <see cref="F:XmlPrime.XmlNamespaces.XPathFunctionsNamespace"/>.</description></item><item><description><paramref name="type"/> is marked with the <see cref="T:XmlPrime.XdmModuleAttribute"/> attribute and one of the
            		      	methods marked with <see cref="T:XmlPrime.XdmFunctionAttribute"/> could not be imported, as it did not satisfy all
            		      	of the conditions above.
            		      </description></item></list></exception>
      <remarks>
        <para>
            		For an example of the use of this function, see <see href="modules.htm">Modules</see>.
            	</para>
        <para>
            		Libraries of functions can be made available to an XQuery program, XPath expression or XSL transformation by
            		adding them to the <see cref="P:XmlPrime.StaticContextSettings.Libraries"/> collection.
            	</para>
        <para>
            		If <paramref name="type"/> is annotated with the <see cref="T:XmlPrime.XdmModuleAttribute"/> then the target
            		namespace can be specified by the attribute.  If the attribute is not present, or the namespace is not
            		declared, then the namespace of the function library is a uri with the scheme <c>clitype</c>.  The
            		path of the URI is the full CLI name of the type.
            	</para>
            	Here are some examples:
            	<list type="table"><listheader><term>Type</term><description>URI</description></listheader><item><term><see cref="T:System.Math"/></term><description><c>clitype:System.Math</c></description></item><item><term><see cref="T:System.Decimal"/></term><description><c>clitype:System.Decimal</c></description></item><item><term><see cref="T:System.Environment.SpecialFolder"/></term><description><c>clitype:System.Environment+SpecialFolder</c> (note that this is an enumeration, and as such has no
            				static methods to import, but this still serves as an example of how to reference a nested type)
            			</description></item></list><para><paramref name="type"/> must be a non-generic class, otherwise a <see cref="T:System.NotSupportedException"/> is
            		thrown.
            	</para><para class="warning">
            		Note that in order to ensure well defined behaviour, all functions used from within the XQuery program, XPath
            		expression or XSL transformation should be pure and deterministic (that is, they should have no side-effects
            		and the value returned from the function must depend only on the values of its arguments).  How many times
            		each function is called, whether the function is called and the order in which functions are called is
            		undefined and will change based on how the query is optimized.
            	</para><para>
            		If <paramref name="type"/> is annotated with the <see cref="T:XmlPrime.XdmModuleAttribute"/> attribute, then only
            		those methods marked with <see cref="T:XmlPrime.XdmFunctionAttribute"/> will be included.  If any of these methods
            		fail to satisfy the conditions below then an <see cref="T:System.InvalidOperationException"/> is thrown.
             </para><para>
            		If <paramref name="type"/> is not annotated with the <see cref="T:XmlPrime.XdmModuleAttribute"/> attribute, then 
            		only those methods satisfying the conditions below will be exported.
             </para><list type="bullet"><item><description>The method is public.</description></item><item><description>The method is not a generic method.</description></item><item><description>The exported name of the method is a valid NCName value.</description></item><item><description>The name of all the parameters are valid NCName values.</description></item><item><description>The return type is <see href="modules.htm#nativetypes">supported</see>.</description></item><item><description>All the parameter types are <see href="modules.htm#nativetypes">supported</see>.</description></item><item><description>None of the parameters are ref or out parameters.</description></item><item><description>None of the parameters are variable length argument lists.</description></item><item><description>If the method is overloaded, then no overload has the same number of arguments.</description></item></list><para>
            		If a method has the same exported name and number of arguments as a method in a base class that would be exported,
            		then the base class methods with the same name and number of arguments are excluded.
            	</para><para>
            		Exported method can be marked with the <see cref="T:XmlPrime.XdmFunctionAttribute"/> which allows the exported name
            		of the method to be overridden. The parameters and return values of an exported method can be marked with
            		the <see cref="T:XmlPrime.XdmTypeAttribute"/> attribute which specifies the XDM type of the arguments and return types of the exported function.
             </para><para>
            		More information about how native methods are bound to XQuery functions can be found on the
            		<see href="modules.htm#native">Native modules</see> page.
             </para></remarks>
      <seealso cref="T:XmlPrime.XdmModuleAttribute"/>
      <seealso cref="T:XmlPrime.XdmFunctionAttribute"/>
      <seealso cref="T:XmlPrime.XdmTypeAttribute"/>
      <seealso cref="P:XmlPrime.StaticContextSettings.Libraries"/>
      <seealso href="modules.htm#native">Native modules</seealso>
    </member>
    <member name="P:XmlPrime.XdmModule.ExtensionFunctions">
      <summary>
            	Gets the set of extension functions specific to XmlPrime.
            </summary>
      <remarks>
        <para>This module contains functions with the following signatures:</para>
        <list type="bullet">
          <item>
            <description>
              <c>xp:e() as xs:double</c>
            </description>
          </item>
          <item>
            <description>
              <c>xp:sinh($arg as xs:double?) as xs:double?</c>
            </description>
          </item>
          <item>
            <description>
              <c>xp:cosh($arg as xs:double?) as xs:double?</c>
            </description>
          </item>
          <item>
            <description>
              <c>xp:tanh($arg as xs:double?) as xs:double?</c>
            </description>
          </item>
        </list>
        <para>The functions are in the namespace <c>http://www.xmlprime.com/xpath-functions</c></para>
      </remarks>
      <value>An <see cref="T:XmlPrime.XdmModule"/> containing the XmlPrime extension functions.</value>
      <seealso href="modules.htm">Modules</seealso>
    </member>
    <member name="P:XmlPrime.XdmModule.MsXslFunctions">
      <summary>
            	Gets the set of extension functions specific to <see cref="T:System.Xml.Xsl.XslCompiledTransform"/>.
            </summary>
      <remarks>
        <para>This module contains functions with the following signature:</para>
        <list type="bullet">
          <item>
            <description>
              <c>msxsl:node-set($items as item()*) as node()*</c>
            </description>
          </item>
        </list>
        <para>The function is in the namespace <c>urn:schemas-microsoft-com:xslt</c></para>
      </remarks>
      <value>An <see cref="T:XmlPrime.XdmModule"/> containing the MSXSL node-set extension function.</value>
      <seealso href="modules.htm">Modules</seealso>
    </member>
    <member name="P:XmlPrime.XdmModule.XPathMathFunctions">
      <summary>
            	Gets the set of mathematical functions which are define as of XPath and XQuery Functions and Operators 3.0.
            </summary>
      <remarks>
        <para>
            		These functions are all in the namespace <see cref="F:XmlPrime.XmlNamespaces.XPathMathFunctionsNamespace"/>.
            	</para>
        <para>
            		This library is intended to be used in addition to the standard functions supplied by XQuery 1.0 and 
            		XPath 2.0, which then allows use of the entire XPath 3.0 and XQuery 3.0 function library.
            	</para>
        <para>This library contains functions with the following signatures:</para>
        <list type="bullet">
          <item>
            <description>
              <c>math:pi() as xs:double</c>
            </description>
          </item>
          <item>
            <description>
              <c>math:sqrt($arg as double?) as xs:double?</c>
            </description>
          </item>
          <item>
            <description>
              <c>math:sin($arg as double?) as xs:double?</c>
            </description>
          </item>
          <item>
            <description>
              <c>math:cos($arg as double?) as xs:double?</c>
            </description>
          </item>
          <item>
            <description>
              <c>math:tan($arg as double?) as xs:double?</c>
            </description>
          </item>
          <item>
            <description>
              <c>math:asin($arg as double?) as xs:double?</c>
            </description>
          </item>
          <item>
            <description>
              <c>math:acos($arg as double?) as xs:double?</c>
            </description>
          </item>
          <item>
            <description>
              <c>math:atan($arg as double?) as xs:double?</c>
            </description>
          </item>
        </list>
      </remarks>
      <value>An <see cref="T:XmlPrime.XdmModule"/> containing the XPath and XQuery Functions and Operators 3.0 functions.</value>
      <seealso href="modules.htm">Modules</seealso>
      <seealso href="http://www.w3.org/TR/xpath-functions-30/">XPath and XQuery Functions and Operators 3.0</seealso>
    </member>
    <member name="P:XmlPrime.XdmModule.XPathArrayFunctions">
      <summary>
            	Gets the set of functions which operate on arrays.
            </summary>
      <remarks>
        <para>
            		These functions are all in the namespace <see cref="F:XmlPrime.XmlNamespaces.XPathMathFunctionsNamespace"/>.
            	</para>
        <para>
            		This library is intended to be used in addition to the standard functions supplied by XQuery 1.0 and 
            		XPath 2.0, which then allows use of the entire XPath 3.0 and XQuery 3.0 function library.
            	</para>
        <para>This library contains functions with the following signatures:</para>
        <list type="bullet">
          <item>
            <description>
              <c>array:get($array as array(*), $index as xs:integer) as item()*</c>
            </description>
          </item>
          <item>
            <description>
              <c>array:size($array as array(*)) as xs:integer</c>
            </description>
          </item>
          <item>
            <description>
              <c>array:append($array as array(*), $appendage as item()*) as array(*)</c>
            </description>
          </item>
          <item>
            <description>
              <c>array:subarray($array as array(*), $start as xs:integer) as array(*)</c>
            </description>
          </item>
          <item>
            <description>
              <c>array:subarray($array as array(*), $start as xs:integer, $length as xs:integer) as array(*)</c>
            </description>
          </item>
          <item>
            <description>
              <c>array:remove($array as array(*), $position as xs:integer) as array(*)</c>
            </description>
          </item>
          <item>
            <description>
              <c>array:insert-before($array as array(*), $position as xs:integer, $member as item()*) as array(*)</c>
            </description>
          </item>
          <item>
            <description>
              <c>array:head($array as array(*)) as item()*</c>
            </description>
          </item>
          <item>
            <description>
              <c>array:tail($array as array(*)) as array(*)</c>
            </description>
          </item>
          <item>
            <description>
              <c>array:reverse($array as array(*)) as array(*)</c>
            </description>
          </item>
          <item>
            <description>
              <c>array:join($arrays as array(*)*) as array(*)</c>
            </description>
          </item>
          <item>
            <description>
              <c>array:for-each($array as array(*),$function as function(item()*) as item()*) as array(*)</c>
            </description>
          </item>
          <item>
            <description>
              <c>array:filter($array as array(*), $function	 as function(item()*) as xs:boolean) as array(*)</c>
            </description>
          </item>
          <item>
            <description>
              <c>array:fold-left($array as array(*), $zero as item()*, $function as function(item()*, item()*) as item()*) as item()*</c>
            </description>
          </item>
          <item>
            <description>
              <c>array:fold-right($array as array(*), $zero as item()*, $function as function(item()*, item()*) as item()*) as item()*</c>
            </description>
          </item>
          <item>
            <description>
              <c>array:for-each-pair($array1 as array(*), $array2 as array(*), $function as function(item()*, item()*) as item()*) as array(*)</c>
            </description>
          </item>
          <item>
            <description>
              <c>array:sort($input as array(*)) as array(*)</c>
            </description>
          </item>
          <item>
            <description>
              <c>array:sort($input as array(*), $key as function(item()*) as xs:anyAtomicType*) as array(*)</c>
            </description>
          </item>
          <item>
            <description>
              <c>array:flatten($input as item()*) as item()*</c>
            </description>
          </item>
        </list>
      </remarks>
      <value>An <see cref="T:XmlPrime.XdmModule"/> containing the XPath and XQuery Functions and Operators 3.1 functions.</value>
      <seealso href="modules.htm">Modules</seealso>
      <seealso href="http://www.w3.org/TR/xpath-functions-31/">XPath and XQuery Functions and Operators 3.1</seealso>
    </member>
    <member name="P:XmlPrime.XdmModule.XPathMapFunctions">
      <summary>
            	Gets the set of functions which operate on arrays.
            </summary>
      <remarks>
        <para>
            		These functions are all in the namespace <see cref="F:XmlPrime.XmlNamespaces.XPathMathFunctionsNamespace"/>.
            	</para>
        <para>
            		This library is intended to be used in addition to the standard functions supplied by XQuery 1.0 and 
            		XPath 2.0, which then allows use of the entire XPath 3.0 and XQuery 3.0 function library.
            	</para>
        <para>This library contains functions with the following signatures:</para>
        <list type="bullet">
          <item>
            <description>
              <c>map:merge($maps as map(*)*) as map(*)</c>
            </description>
          </item>
          <item>
            <description>
              <c>map:size($input as map(*)) as xs:integer</c>
            </description>
          </item>
          <item>
            <description>
              <c>map:keys($input as map(*)) as xs:anyAtomicType*</c>
            </description>
          </item>
          <item>
            <description>
              <c>map:contains($map as map(*), $key as xs:anyAtomicType) as xs:boolean</c>
            </description>
          </item>
          <item>
            <description>
              <c>map:get($map as map(*), $key as xs:anyAtomicType) as item()*</c>
            </description>
          </item>
          <item>
            <description>
              <c>map:put($map as map(*), $key as xs:anyAtomicType, $value as item()*) as map(*)</c>
            </description>
          </item>
          <item>
            <description>
              <c>map:entry($key as xs:anyAtomicType, $value as item()*) as map(*)</c>
            </description>
          </item>
          <item>
            <description>
              <c>map:remove($map as map(*), $key as xs:anyAtomicType) as map(*)</c>
            </description>
          </item>
          <item>
            <description>
              <c>map:for-each($input as map(*), $action	 as function(xs:anyAtomicType, item()*)) as item()*</c>
            </description>
          </item>
        </list>
      </remarks>
      <value>An <see cref="T:XmlPrime.XdmModule"/> containing the XPath and XQuery Functions and Operators 3.1 functions.</value>
      <seealso href="modules.htm">Modules</seealso>
      <seealso href="http://www.w3.org/TR/xpath-functions-31/">XPath and XQuery Functions and Operators 3.1</seealso>
    </member>
    <member name="P:XmlPrime.XdmModule.XQuery30Functions">
      <summary>
            	Gets the set of functions which are new in XPath and XQuery Functions and Operators 3.0
            </summary>
      <remarks>
        <para>
            		This library is intended to be used in addition to the standard functions supplied by XQuery 1.0 and 
            		XPath 2.0, which then allows use of the entire XPath 3.0 and XQuery 3.0 function library.  It includes all the
                    new functions defined in XPath and XQuery Functions and Operators 3.0, together with those functions from XQuery 1.0
                    and XPath 2.0 Functions and Operators (Second Edition) which have changed in the later standard.
            	</para>
        <para>This library contains functions with the following signatures:</para>
        <list type="bullet">
          <item>
            <description>
              <c>fn:node-name() as xs:QName?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:nilled() as xs:boolean</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:document-uri() as xs:anyURI?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:data() as xs:anyAtomicType*</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:format-integer($value as xs:integer?, $picture as xs:string) as xs:string</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:format-integer($value as xs:integer?, $picture as xs:string, $language as xs:language) as xs:string</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:format-number($value as numeric?, $picture as xs:string) as xs:string</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:format-number($value as numeric?, $picture as xs:string, $decimal-format-name as xs:string) as xs:string</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:format-dateTime($value as xs:dateTime?, $picture as xs:string) as xs:string?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:format-dateTime($value as xs:dateTime?, $picture as xs:string, $language as xs:string?, $calendar as xs:string?, $country as xs:string) as xs:string?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:format-date($value as xs:date?, $picture as xs:string) as xs:string?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:format-date($value as xs:date?, $picture as xs:string, $language as xs:string?, $calendar as xs:string?, $country as xs:string) as xs:string?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:format-time($value as xs:time?, $picture as xs:string) as xs:string?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:format-time($value as xs:time?, $picture as xs:string, $language as xs:string?, $calendar as xs:string?, $country as xs:string) as xs:string?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:analyze-string($input as xs:string?, $pattern as xs:string) as element(fn:analyze-string-result)</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:analyze-string($input as xs:string?, $pattern as xs:string) as element(fn:analyze-string-result, $flags as xs:string)</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:path() as xs:string?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:path($arg as node()?) as xs:string?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:has-children() as xs:boolean</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:has-children($node as node()?) as xs:boolean</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:innermost($nodes as node()*) as node()*</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:outermost($nodes as node()*) as node()*</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:head($arg as item()*) as item()?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:tail($arg as item()*) as item()*</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:generate-id($arg as xs:node()?) as xs:string</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:round($arg as numeric?, $precision as xs:integer) as numeric?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:uri-collection() as xs:anyURI*</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:uri-collection($arg as xs:string?) as xs:anyURI*</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:unparsed-text($href as xs:string?) as xs:string?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:unparsed-text($href as xs:string?, $encoding as xs:string) as xs:string?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:unparsed-text-available($href as xs:string?) as xs:boolean</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:unparsed-text-available($href as xs:string?, $encoding as xs:string) as xs:boolean</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:unparsed-text-lines($href as xs:string?) as xs:string*</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:unparsed-text-lines($href as xs:string?, $encoding as xs:string) as xs:string*</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:environment-variable($name as xs:string) as xs:string?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:available-environment-variables() as xs:string*</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:parse-xml($arg as xs:string?) as document-node()</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:parse-xml-fragment($arg as xs:string?) as document-node()</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:serialize($arg as item()*) as xs:string</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:serialize($arg as item()*, $params as element(output:serialization-parameters)?) as xs:string</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:function-lookup($name as xs:QName, $arity as xs:integer) as function()?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:function-name($func as function(*)) as xs:QName?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:function-arity($func as function(*)) as xs:integer</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:map($f as function(item()) as item()*, $seq as item()*) as item()*</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:filter($f as function(item()) as xs:boolean, $seq as item()*) as item()*</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:fold-left($f as function(item()*, item()) as item()*, $zero as item()*, $seq as item()*) as item()*</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:fold-right($f as function(item(), item()*) as item()*, $zero as item()*, $seq as item()*) as item()*</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:map-pairs($f as function(item(), item()) as item()*, $seq1 as item()*, $seq2 as item()*) as item()*</c>
            </description>
          </item>
        </list>
      </remarks>
      <value>An <see cref="T:XmlPrime.XdmModule"/> containing the XPath and XQuery Functions and Operators 3.0 functions.</value>
      <seealso href="modules.htm">Modules</seealso>
      <seealso href="http://www.w3.org/TR/xpath-functions-30/">XPath and XQuery Functions and Operators 3.0</seealso>
    </member>
    <member name="P:XmlPrime.XdmModule.XQueryUpdate10Functions">
      <summary>
            	Gets the set of functions which are introduced by the XQuery Update Facility 1.0.
            </summary>
      <remarks>
        <para>This library contains functions with the following signature:</para>
        <list type="bullet">
          <item>
            <description>
              <c>fn:put($node as node(), $uri as xs:string) as empty-sequence()</c>
            </description>
          </item>
        </list>
      </remarks>
      <value>An <see cref="T:XmlPrime.XdmModule"/> containing the XQuery Update Facility 1.0 functions.</value>
      <seealso href="modules.htm">Modules</seealso>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#id-new-functions">[XQuery Update Facility 1.0]  2.6 Extensions to Built-in Function Library</seealso>
    </member>
    <member name="P:XmlPrime.XdmModule.XsltFunctions">
      <summary>
            	Gets the set of functions in XSLT 2.0 that are not in the XQuery 1.0 and XPath 2.0 function library.
            </summary>
      <remarks>
        <para>
            		This library is intended to be used in addition to the standard functions supplied by XQuery 1.0 and 
            		XPath 2.0, which then allows use of the entire XSLT 2.0 function library.
            	</para>
        <para>This library contains functions with the following signatures:</para>
        <list type="bullet">
          <item>
            <description>
              <c>fn:document($uri-sequence as item()*) as node()*</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:document($uri-sequence as item()*, $base-node as node()) as node()*</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:format-number($value as numeric?, $picture as xs:string) as xs:string</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:format-number($value as numeric?, $picture as xs:string, $decimal-format-name as xs:string) as xs:string</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:format-dateTime($value as xs:dateTime?, $picture as xs:string) as xs:string?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:format-dateTime($value as xs:dateTime?, $picture as xs:string, $language as xs:string?, $calendar as xs:string?, $country as xs:string) as xs:string?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:format-date($value as xs:date?, $picture as xs:string) as xs:string?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:format-date($value as xs:date?, $picture as xs:string, $language as xs:string?, $calendar as xs:string?, $country as xs:string) as xs:string?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:format-time($value as xs:time?, $picture as xs:string) as xs:string?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:format-time($value as xs:time?, $picture as xs:string, $language as xs:string?, $calendar as xs:string?, $country as xs:string) as xs:string?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:unparsed-text($href as xs:string?) as xs:string?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:unparsed-text($href as xs:string?, $encoding as xs:string) as xs:string?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:unparsed-text-available($href as xs:string?) as xs:string?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:unparsed-text-available($href as xs:string?, $encoding as xs:string?) as xs:string?</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:current() as item()</c> (this is not supported in XQuery or XPath 2.0)</description>
          </item>
          <item>
            <description>
              <c>fn:current-group() as item()*</c> (this is not supported in XQuery or XPath 2.0)</description>
          </item>
          <item>
            <description>
              <c>fn:current-grouping-key() as xs:anyAtomicType?</c> (this is not supported in XQuery or XPath 2.0)</description>
          </item>
          <item>
            <description>
              <c>fn:generate-id() as xs:string</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:generate-id($node as node()?) as xs:string</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:system-property($property-name as xs:string) as xs:string</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:type-available($type-name as xs:string) as xs:boolean</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:function-available($function-name-name as xs:string, $arity as xs:integer) as xs:boolean</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:function-available($function-name-name as xs:string) as xs:boolean</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:key($key-name as xs:string, $key-value as xs:anyAtomicType*) as node()*</c> (this is not supported in XQuery or XPath 2.0)</description>
          </item>
          <item>
            <description>
              <c>fn:key($key-name as xs:string, $key-value as xs:anyAtomicType*, $top as node()) as node()*</c> (this is not supported in XQuery or XPath 2.0)</description>
          </item>
        </list>
      </remarks>
      <value>An <see cref="T:XmlPrime.XdmModule"/> containing the XSLT 2.0 functions.</value>
      <seealso href="modules.htm">Modules</seealso>
      <seealso href="http://www.w3.org/TR/xslt20/#add-func">[XSL Transformations (XSLT) Version 2.0] 16 Additional Functions</seealso>
    </member>
    <member name="P:XmlPrime.XdmModule.XsltFunctionsForXQuery30">
      <summary>
            	Gets the set of functions in XSLT 2.0 that are not in the XPath and XQuery Functions and Operators 3.0 afunction library.
            </summary>
      <remarks>
        <para>
            		This library is intended to be used in addition to the standard functions supplied by XPath and XQuery Functions and Operators 3.0,
            		which then allows use of the entire XSLT 2.0 function library.
            	</para>
        <para>This library contains functions with the following signatures:</para>
        <list type="bullet">
          <item>
            <description>
              <c>fn:document($uri-sequence as item()*) as node()*</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:document($uri-sequence as item()*, $base-node as node()) as node()*</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:current() as item()</c> (this is not supported in XQuery or XPath 2.0)</description>
          </item>
          <item>
            <description>
              <c>fn:current-group() as item()*</c> (this is not supported in XQuery or XPath 2.0)</description>
          </item>
          <item>
            <description>
              <c>fn:current-grouping-key() as xs:anyAtomicType?</c> (this is not supported in XQuery or XPath 2.0)</description>
          </item>
          <item>
            <description>
              <c>fn:system-property($property-name as xs:string) as xs:string</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:type-available($type-name as xs:string) as xs:boolean</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:function-available($function-name-name as xs:string, $arity as xs:integer) as xs:boolean</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:function-available($function-name-name as xs:string) as xs:boolean</c>
            </description>
          </item>
          <item>
            <description>
              <c>fn:key($key-name as xs:string, $key-value as xs:anyAtomicType*) as node()*</c> (this is not supported in XQuery or XPath 2.0)</description>
          </item>
          <item>
            <description>
              <c>fn:key($key-name as xs:string, $key-value as xs:anyAtomicType*, $top as node()) as node()*</c> (this is not supported in XQuery or XPath 2.0)</description>
          </item>
        </list>
      </remarks>
      <value>An <see cref="T:XmlPrime.XdmModule"/> containing the XSLT 2.0 functions.</value>
      <seealso href="modules.htm">Modules</seealso>
      <seealso href="http://www.w3.org/TR/xslt20/#add-func">[XSL Transformations (XSLT) Version 2.0] 16 Additional Functions</seealso>
    </member>
    <member name="P:XmlPrime.XdmModule.Location">
      <summary>
            	Returns the location (URI) from which this module was loaded.
            </summary>
      <value>The location (URI) from which this module was loaded, or <see langword="null"/> if this is unavailable.</value>
    </member>
    <member name="P:XmlPrime.XdmModule.LocationUri">
      <summary>
            	Returns the location (URI) from which this module was loaded.
            </summary>
      <value>The location (URI) from which this module was loaded, or <see langword="null"/> if this is unavailable.</value>
    </member>
    <member name="P:XmlPrime.XdmModule.TargetNamespace">
      <summary>
            	Gets the target namespace of the module.
            </summary>
      <value>The target namespace of the module.</value>
    </member>
    <member name="T:XmlPrime.GZipXmlUrlResolver">
      <summary>
            Resolver which automatically decompresses gzipped (.gz) XML resources.
            </summary>
      <remarks>
            Currently any resource with a URI with the <c>file</c> scheme and with file names ending with <c>.gz</c> is assumed to be a GZipped compressed XML file.
            </remarks>
    </member>
    <member name="M:XmlPrime.GZipXmlUrlResolver.#ctor(System.Xml.XmlResolver)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.GZipXmlUrlResolver"/> class.
            </summary>
      <param name="resolver">The underlying resolver.</param>
    </member>
    <member name="M:XmlPrime.GZipXmlUrlResolver.ResolveUri(System.Uri,System.String)">
      <summary>
            Resolves the absolute URI from the base and relative URIs.
            </summary>
      <param name="baseUri">The base URI used to resolve the relative URI.</param>
      <param name="relativeUri">The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the <paramref name="baseUri"/> value. If relative, it combines with the <paramref name="baseUri"/> to make an absolute URI.</param>
      <returns>
            A <see cref="T:System.Uri"/> representing the absolute URI or <see langword="null"/> if the relative URI cannot be resolved.
            </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="relativeUri"/> is <see langword="null"/></exception>
    </member>
    <member name="M:XmlPrime.GZipXmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>
            Maps a URI to an object containing the actual resource.
            </summary>
      <param name="absoluteUri">The URI returned from <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)"/></param>
      <param name="role">The current implementation does not use this parameter when resolving URIs. This is provided for future extensibility purposes. For example, this can be mapped to the xlink:role and used as an implementation specific argument in other scenarios.</param>
      <param name="ofObjectToReturn">The type of object to return. The current implementation only returns System.IO.Stream objects.</param>
      <returns>
            A System.IO.Stream object or <see langword="null"/> if a type other than stream is specified.
            </returns>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="ofObjectToReturn"/> is neither <see langword="null"/> nor a Stream type. </exception>
      <exception cref="T:System.UriFormatException">The specified URI is not an absolute URI. </exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="absoluteUri"/> is <see langword="null"/>. </exception>
      <exception cref="T:System.Exception">There is a runtime error (for example, an interrupted server connection). </exception>
    </member>
    <member name="T:XmlPrime.ICollationResolver">
      <summary>
            An interface used to resolve collations.
            </summary>
      <remarks>
        <para>
            The collation resolver is used to resolve collation URIs specified in an XQuery program, XPath expression or XSL
            transformation.
            </para>
        <para>
            The <see cref="P:XmlPrime.StaticContextSettings.CollationResolver"/> property on the <see cref="T:XmlPrime.StaticContextSettings"/>
            class specifies the <see cref="T:XmlPrime.ICollationResolver"/> to use.
            </para>
      </remarks>
    </member>
    <member name="M:XmlPrime.ICollationResolver.ResolveCollation(System.String)">
      <summary>
            When implemented, maps a collation URI to a <see cref="T:XmlPrime.Collation"/> instance.
            </summary>
      <param name="uri">The absolute URI of the collation to resolve.</param>
      <returns>
            A <see cref="T:XmlPrime.Collation"/> instance implementing the collation with the supplied URI, or 
            <see langword="null"/> if a collation with this URI is not found.
            </returns>
    </member>
    <member name="T:XmlPrime.IDocumentResolver">
      <summary>
              An interface used to resolve external documents.
            </summary>
      <remarks>
        <para>The <see cref="T:XmlPrime.IDocumentResolver"/> is used by the <see cref="T:XmlPrime.DocumentSet"/> to resolve documents for 
                the <c>fn:doc</c>,  <c>fn:doc-available</c> and <c>fn:document</c> functions.
              </para>
        <para>
                The <see cref="T:XmlPrime.IDocumentResolver"/> is specified as part of the <see cref="T:XmlPrime.DocumentSet"/> set using the
                <see cref="P:XmlPrime.DynamicContextSettings.DocumentSet"/> property. 
              </para>
        <para>
                In conjunction with the <see cref="T:XmlPrime.DocumentSet"/>, this defines the 
                <see href="http://www.w3.org/TR/xquery/#dt-available-docs">available documents</see> component of the 
                dynamic context.
              </para>
      </remarks>
      <seealso cref="T:XmlPrime.DocumentSet"/>
      <seealse cref="P:XmlPrime.DynamicContextSettings.DocumentSet"/>
      <seealso href="http://www.w3.org/TR/xquery/#dt-available-docs">[XQuery 1.0: An XML Query Language] 2.1.2 Dynamic Context (Available documents)</seealso>
    </member>
    <member name="M:XmlPrime.IDocumentResolver.ResolveDocument(XmlPrime.AnyUri,XmlPrime.DocumentSet,System.Xml.XmlNameTable,XmlPrime.InputSettings)">
      <summary>
              Resolves a URI to a document.
            </summary>
      <param name="uri">The absolute URI of the document to resolve.</param>
      <param name="documentSet">The document set which can be used to retrieve resources required to retrieve the document (for example this
              can be used to retrieve an unparsed resource).</param>
      <param name="nameTable">The name table to use to load the document.</param>
      <param name="inputSettings">The filters to be applied to the source documents.</param>
      <returns>
              An <see cref="T:System.Xml.XPath.IXPathNavigable"/> instance representing the document for the specified URI, or
              <see langword="null"/> if the URI can not be mapped to a document.
            </returns>
      <remarks>
        <para>
                A return value of <see langword="null"/> indicates that <paramref name="uri"/> is not supported by this
                resolver (for example an unsupported URI scheme).  If the URI does have meaning to this resolver but there was
                an error retrieving the document then an exception should be thrown.
              </para>
        <para>
                The document URI of the returned document must either be <paramref name="uri"/> or the empty string.
              </para>
      </remarks>
    </member>
    <member name="T:XmlPrime.IResourceResolver">
      <summary>
              An interface used to resolve the unparsed text of external resources.
            </summary>
      <remarks>
        <para>
                The <see cref="T:XmlPrime.IResourceResolver"/> is used by <see cref="T:XmlPrime.DocumentSet"/> to resolve documents for the
                <c>fn:unparsed-text</c> and <c>fn:unparsed-text-available</c> functions.
              </para>
        <para>
                The <see cref="T:XmlPrime.IResourceResolver"/> used for resolving unparsed-text resources is specified as part of the 
                <see cref="T:XmlPrime.DocumentSet"/> set using the <see cref="P:XmlPrime.DynamicContextSettings.DocumentSet"/> property. 
              </para>
      </remarks>
      <seealso cref="T:XmlPrime.DocumentSet"/>
      <seealse cref="P:XmlPrime.DynamicContextSettings.DocumentSet"/>
    </member>
    <member name="M:XmlPrime.IResourceResolver.ResolveResource(XmlPrime.AnyUri)">
      <summary>
              Resolves a URI to retrieve a resource.
            </summary>
      <param name="uri">The absolute URI of the resource to resolve.</param>
      <returns>
              An <see cref="T:XmlPrime.ResolvedResource"/> instance containing the resource at the specified URI, or
              <see langword="null"/> if the URI can not be mapped to a resource.
            </returns>
      <remarks>
        <para>
                A return value of <see langword="null"/> indicates that <paramref name="uri"/> is not supported by this
                resolver (for example an unsupported URI scheme).  If the URI does have meaning to this resolver but there
                was an error retrieving the document then an exception should be thrown.
              </para>
      </remarks>
    </member>
    <member name="T:XmlPrime.InputTypeAnnotations">
      <summary>
            Enumerates the input type annotation methods. 
            </summary>
      <seealso href="http://www.w3.org/TR/xslt20/#stripping-annotations">[XSL Transformations (XSLT) Version 2.0] 4.3 Stripping Type Annotations from a Source Tree</seealso>
    </member>
    <member name="F:XmlPrime.InputTypeAnnotations.Unspecified">
      <summary>
            Performs the default input type annotation stripping option.
            </summary>
    </member>
    <member name="F:XmlPrime.InputTypeAnnotations.Preserve">
      <summary>
            Preserves any type annotations on element and attribute nodes in a source tree.
            </summary>
    </member>
    <member name="F:XmlPrime.InputTypeAnnotations.Strip">
      <summary>
            Remove any type annotations on element and attribute nodes in a source tree, replacing them with an annotation of
            <c>xs:untyped</c> in the case of element nodes, and <c>xs:untypedAtomic</c> in the case of attribute nodes.
            </summary>
    </member>
    <member name="T:XmlPrime.MessageEventArgs">
      <summary>
              Provides data for the <see cref="E:XmlPrime.DynamicContextSettings.Message"/> event.
            </summary>
      <remarks>
        <para>The <see cref="E:XmlPrime.DynamicContextSettings.Message"/> event occurs when an <c>xsl:message</c> instruction is executed
                during execution of an XSL transformation.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#message">[XSL Transformations (XSLT) Version 2.0] 17 Messages</seealso>
    </member>
    <member name="P:XmlPrime.MessageEventArgs.LineNumber">
      <summary>
              Gets the line number of the instruction that raised the event.
            </summary>
      <value>
              An <see cref="T:System.Int32"/> representing the line number of the instruction , or <c>-1</c> if the line number is not known.
            </value>
      <remarks>
              The line number is 1-indexed, that is a value of <c>1</c> represents the first character in the document.
            </remarks>
    </member>
    <member name="P:XmlPrime.MessageEventArgs.LinePosition">
      <summary>
              Gets the character position within <see cref="P:XmlPrime.MessageEventArgs.LineNumber"/> of the instruction that raised the event.
            </summary>
      <value>
              An <see cref="T:System.Int32"/> character position within <see cref="P:XmlPrime.MessageEventArgs.LineNumber"/> in the line of the instruction, or <c>-1</c> if the line position is not known.
            </value>
      <remarks>
              The line character position is 1-indexed, that is a value of <c>1</c> represents the first character in a line.
            </remarks>
    </member>
    <member name="P:XmlPrime.MessageEventArgs.Message">
      <summary>
            Gets the message associated with this event.
            </summary>
      <value>An <see cref="T:System.Xml.XPath.XPathNavigator"/> instance representing the contents of the message document associated with this event.</value>
    </member>
    <member name="P:XmlPrime.MessageEventArgs.SourceUri">
      <summary>
              Gets the URI of the source file containing the instruction that caused the event.
            </summary>
      <value>
              The source file in which the instruction was evaluated, or <see cref="F:System.String.Empty"/> if the source file is not known.
            </value>
    </member>
    <member name="P:XmlPrime.MessageEventArgs.Code">
      <summary>
            Gets the code associated with this event.
            </summary>
      <value>A <see cref="T:System.Xml.XmlQualifiedName"/> instance representing the code associated with this event.</value>
    </member>
    <member name="T:XmlPrime.ParameterTypeDictionary">
      <summary>
              A mapping from parameter names to parameter types.
            </summary>
      <remarks>
        <para>A <see cref="T:XmlPrime.ParameterTypeDictionary"/> instance is used to supply the refined types for XQuery external variables,
                XPath variables or XSL stylesheet parameters.</para>
        <para>This is particularly useful when employing static type checking but the variables or parameters have not been annotated with 
                sufficient type information to permit static type checking.</para>
      </remarks>
      <seealso cref="P:XmlPrime.DynamicContextSettings.Parameters"/>
    </member>
    <member name="M:XmlPrime.ParameterTypeDictionary.#ctor">
      <overloads>
              Initializes a new instance of the <see cref="T:XmlPrime.ParameterTypeDictionary"/> class.
            </overloads>
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.ParameterTypeDictionary"/> class.
            </summary>
    </member>
    <member name="M:XmlPrime.ParameterTypeDictionary.#ctor(XmlPrime.ParameterTypeDictionary)">
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.ParameterTypeDictionary"/> class.
            </summary>
      <param name="dictionary">The <see cref="T:XmlPrime.ParameterTypeDictionary"/> to copy.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.ParameterTypeDictionary.Contains(System.Xml.XmlQualifiedName)">
      <summary>
              Determines whether the <see cref="T:XmlPrime.ParameterTypeDictionary"/> contains the specified parameter.
            </summary>
      <param name="name">The name of the parameter.</param>
      <returns>
        <see langword="true"/> if the <see cref="T:XmlPrime.ParameterTypeDictionary"/> contains the specified parameter;
              otherwise, <see langword="false"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> is <see langword="null"/></exception>
    </member>
    <member name="M:XmlPrime.ParameterTypeDictionary.Add(System.Xml.XmlQualifiedName,XmlPrime.XdmType)">
      <summary>
              Adds the specified parameter type to the <see cref="T:XmlPrime.ParameterTypeDictionary"/>.
            </summary>
      <param name="name">The name of the parameter to add.</param>
      <param name="value">The type of the parameter to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> or <paramref name="value"/> is <see langword="null"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.ParameterTypeDictionary.Add(System.Collections.Generic.KeyValuePair{System.Xml.XmlQualifiedName,XmlPrime.XdmType})">
      <summary>
              Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
      <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. </exception>
    </member>
    <member name="M:XmlPrime.ParameterTypeDictionary.Clear">
      <summary>
              Removes all parameter entries from the <see cref="T:XmlPrime.ParameterTypeDictionary"/>.
            </summary>
    </member>
    <member name="M:XmlPrime.ParameterTypeDictionary.GetEnumerator">
      <summary>
              Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
              A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:XmlPrime.ParameterTypeDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
      <returns>
              An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:XmlPrime.ParameterTypeDictionary.Remove(System.Xml.XmlQualifiedName)">
      <summary>
              Removes the parameter with the specified name from this <see cref="T:XmlPrime.ParameterTypeDictionary"/>.
            </summary>
      <param name="key">The name of the parameter to remove.</param>
      <returns>
        <see langword="true"/> if the parameter was successfully removed from the <see cref="T:XmlPrime.ParameterTypeDictionary"/>;
              otherwise <see langword="false"/>.  This method also returns <see langword="false"/> if there is no parameter with the
              specified name in the <see cref="T:XmlPrime.ParameterTypeDictionary"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.ParameterTypeDictionary.TryGetValue(System.Xml.XmlQualifiedName,XmlPrime.XdmType@)">
      <summary>
              Gets the value with the specified key.
            </summary>
      <param name="key">The name of the parameter whose type is to be returned.</param>
      <param name="value">When this method returns, contains the type of the specified parameter, if it is set; otherwise, <see langword="null"/>.</param>
      <returns>
        <see langword="true"/> if the <see cref="T:XmlPrime.ParameterTypeDictionary"/> contains the specified parameter, otherwise <see langword="false"/></returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key"/> is <see langword="null"/>.</exception>
    </member>
    <member name="P:XmlPrime.ParameterTypeDictionary.Names">
      <summary>
              Gets the names of the parameters contained in this <see cref="T:XmlPrime.ParameterTypeDictionary"/>.
            </summary>
      <value>A <see cref="T:System.Collections.Generic.ICollection`1"/> containing the names of the parameters in this <see cref="T:XmlPrime.ParameterTypeDictionary"/>.</value>
    </member>
    <member name="P:XmlPrime.ParameterTypeDictionary.Count">
      <summary>
              Gets the number of parameters contained in the <see cref="T:XmlPrime.ParameterTypeDictionary"/>.
            </summary>
      <returns>
              The number of parameters contained in the <see cref="T:XmlPrime.ParameterTypeDictionary"/>.
            </returns>
    </member>
    <member name="P:XmlPrime.ParameterTypeDictionary.Item(System.Xml.XmlQualifiedName)">
      <summary>
              Gets or sets the type of the parameter with the specified name.
            </summary>
      <value>
              The type of the parameter with the specified name.
            </value>
      <param name="name">The name of the parameter to get or set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> or the supplied value is <see langword="null"/>.
            </exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and the parameter with the specified name is not found.</exception>
    </member>
    <member name="T:XmlPrime.ResolvedDocument">
      <summary>
              A document that has been returned from an <see cref="T:XmlPrime.IDocumentResolver"/>.
            </summary>
    </member>
    <member name="M:XmlPrime.ResolvedDocument.#ctor(System.Xml.XPath.IXPathNavigable)">
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.ResolvedDocument"/> class.
            </summary>
      <param name="document">The document.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="document"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.ResolvedDocument.#ctor(System.Xml.XPath.IXPathNavigable,System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.ResolvedDocument"/> class.
            </summary>
      <param name="document">The document.</param>
      <param name="mediaType">The media type of the document, or <see langword="null"/> if this is not known.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="document"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="document"/> is not a document node or <paramref name="mediaType"/> is not a valid media type. </exception>
    </member>
    <member name="M:XmlPrime.ResolvedDocument.GetFragment(System.String)">
      <summary>
            Resolves a fragment identifier to a node in the document.
            </summary>
      <param name="fragment">The fragment identifier.</param>
      <returns>A <see cref="T:System.Xml.XPath.XPathNavigator"/> instance pointing at the node referred to by <paramref name="fragment"/>.</returns>
      <remarks>
        <para>
            Currently fragments are supported only for the XML media types.  These are <c>text/xml</c>, <c>application/xml</c> and 
            <c>*/*+xml</c> where * represents a series of characters.  In this case only NCName fragments are resolved.  If the fragment 
            identifier is an XPointer expression or is not a valid NCName then a <c>XTRE1160</c><see cref="T:XmlPrime.XdmException"/> is raised.
            </para>
        <para>
            If the media type of this document is not known (<see cref="P:XmlPrime.ResolvedDocument.MediaType"/> is <see langword="null"/>) then it is assumed to be
            <c>text/xml</c>, but if any errors would be raised then the root of the document is returned instead.
            </para>
      </remarks>
      <exception cref="T:XmlPrime.XdmException">
            An <c>XTRE1160</c> error is raised if the media type is not supported, or if the fragment is invalid for this media type.
            </exception>
    </member>
    <member name="M:XmlPrime.ResolvedDocument.CreateNavigator">
      <summary>
              Returns a new <see cref="T:System.Xml.XPath.XPathNavigator"/> object.
            </summary>
      <returns>
              An <see cref="T:System.Xml.XPath.XPathNavigator"/> object.
            </returns>
    </member>
    <member name="P:XmlPrime.ResolvedDocument.MediaType">
      <summary>
              Gets or sets the media-type of the resolved resource.
            </summary>
      <value>The media-type of the resolved resource, or <see langword="null"/> if it is unknown.</value>
      <remarks>
        <para>
                This property contains the media type with all optional parameters stripped.
              </para>
        <para>
                The media type is used to resolve URI fragments in a document.  Fragments are resolved for any media types
                specified as XML Media Types in <c>RFC3023</c>.
              </para>
      </remarks>
      <seealso href="http://tools.ietf.org/html/rfc3023"/>
    </member>
    <member name="T:XmlPrime.InputSettings">
      <summary>
              Represents filters to be applied to input source trees, such as whitespace stripping and type annotation stripping.
            </summary>
      <remarks>
        <para>
                The <see cref="T:XmlPrime.InputSettings"/> class represents the combined effects of XSLT's <c>xsl:preserve-space</c> and 
                <c>xsl:strip-space</c> together with the <c>input-type-annotations</c> attribute of the <c>xsl:stylesheet</c> and
                <c>xsl:transform</c> elements;
              </para>
        <para>
                The input settings can be applied to an <see cref="T:System.Xml.XmlReader"/> or <see cref="T:System.Xml.XPath.IXPathNavigable"/> instance by using 
                the <see cref="M:XmlPrime.InputSettings.Filter(System.Xml.XmlReader)"/> and <see cref="M:XmlPrime.InputSettings.Filter(System.Xml.XPath.IXPathNavigable)"/> methods.
              </para>
      </remarks>
    </member>
    <member name="M:XmlPrime.InputSettings.#ctor(System.Xml.XmlNameTable)">
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.InputSettings"/> class with the specified 
              <see cref="T:System.Xml.XmlNameTable"/> instance.
            </summary>
      <param name="nameTable">The name table.</param>
    </member>
    <member name="M:XmlPrime.InputSettings.#ctor(XmlPrime.InputSettings)">
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.InputSettings"/> class from another instance.
            </summary>
      <param name="whitespaceSettings">The <see cref="T:XmlPrime.InputSettings"/> instance to copy.</param>
    </member>
    <member name="M:XmlPrime.InputSettings.Filter(System.Xml.XmlReader)">
      <summary>
              Returns a new <see cref="T:System.Xml.XmlReader"/> instance which Filters the specified <see cref="T:System.Xml.XmlReader"/> according
              to the current whitespace settings.
            </summary>
      <param name="reader">The reader to filter.</param>
      <returns>A new <see cref="T:System.Xml.XmlReader"/> instance which applies the input settings to the source tree.</returns>
    </member>
    <member name="M:XmlPrime.InputSettings.Filter(System.Xml.XPath.IXPathNavigable)">
      <summary>
              Returns a new <see cref="T:System.Xml.XPath.IXPathNavigable"/> instance which Filters the specified <see cref="T:System.Xml.XPath.IXPathNavigable"/> instance according
              to the current whitespace settings.
            </summary>
      <param name="document">The document to filter.</param>
      <returns>A new <see cref="T:System.Xml.XPath.IXPathNavigable"/> instance that represents the node as filtered by these settings.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="document"/> is not a top level node.</exception>
    </member>
    <member name="M:XmlPrime.InputSettings.Filter(XmlPrime.IResolvedDocument)">
      <summary>
              Returns a new <see cref="T:System.Xml.XPath.IXPathNavigable"/> instance which Filters the specified <see cref="T:System.Xml.XPath.IXPathNavigable"/> instance according
              to the current whitespace settings.
            </summary>
      <param name="document">The document to filter.</param>
      <returns>A new <see cref="T:System.Xml.XPath.IXPathNavigable"/> instance that represents the node as filtered by these settings.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="document"/> is not a top level node.</exception>
    </member>
    <member name="M:XmlPrime.InputSettings.Preserve(System.String,System.String)">
      <summary>
              Specifies that whitespace descendants of elements matching the given name test should be preserved.
            </summary>
      <param name="localName">The local part of the name test.  This may be '*'.</param>
      <param name="ns">The namespace of the name test.  This may be '*'.</param>
      <returns>
              Returns <see langword="true"/> if the name test did not conflict with any other rules;
              otherwise <see langword="false"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.InputSettings.Strip(System.String,System.String)">
      <summary>
              Specifies that whitespace descendants of elements matching the given name test should be stripped.
            </summary>
      <param name="localName">The local part of the name test.  This may be '*'.</param>
      <param name="ns">The namespace of the name test.  This may be '*'.</param>
    </member>
    <member name="P:XmlPrime.InputSettings.InputTypeAnnotations">
      <summary>
              Gets or sets the input type annotations setting.
            </summary>
      <value>One of the <see cref="P:XmlPrime.InputSettings.InputTypeAnnotations"/> values.</value>
    </member>
    <member name="T:XmlPrime.ICollectionResolver">
      <summary>
              An interface used to resolve external collections of nodes.
            </summary>
      <remarks>
        <para>
                The <see cref="T:XmlPrime.ICollectionResolver"/> is used by the <see cref="P:XmlPrime.DynamicContextSettings.DocumentSet"/> to
                retrieve collections when evaluating the <c>fn:collection</c> and <c>fn:collection-available</c> functions.
              </para>
        <para>
                The <see cref="T:XmlPrime.ICollectionResolver"/> is specified as part of the <see cref="T:XmlPrime.DocumentSet"/> set using the
                <see cref="P:XmlPrime.DynamicContextSettings.DocumentSet"/> property. 
              </para>
        <para>
                In conjunction with the <see cref="T:XmlPrime.DocumentSet"/> this defines the 
                <see href="http://www.w3.org/TR/xquery/#dt-available-collections">available collections</see> and
                <see href="http://www.w3.org/TR/xquery/#dt-default-collection">default collection</see> components of the 
                dynamic context.
              </para>
      </remarks>
      <seealso cref="T:XmlPrime.DocumentSet"/>
      <seealse cref="P:XmlPrime.DynamicContextSettings.DocumentSet"/>
      <seealso href="http://www.w3.org/TR/xquery/#dt-available-collections">[XQuery 1.0: An XML Query Language] 2.1.2 Dynamic Context (Available collections)</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#dt-default-collection">[XQuery 1.0: An XML Query Language] 2.1.2 Dynamic Context (Default collection)</seealso>
    </member>
    <member name="M:XmlPrime.ICollectionResolver.ResolveCollection(XmlPrime.AnyUri,XmlPrime.DocumentSet,System.Xml.XmlNameTable,XmlPrime.InputSettings)">
      <summary>
              Resolves a URI to a collection, or resolves the default collection.
            </summary>
      <param name="uri">The absolute URI of the document to resolve, or <see langword="null"/> to resolve the default collection.</param>
      <param name="documentSet">The document set that should be used to retrieve documents.</param>
      <param name="nameTable">The name table to use to load nodes.</param>
      <param name="inputSettings">The filters to be applied to the source documents.</param>
      <returns>
              An array of <see cref="T:System.Xml.XPath.IXPathNavigable"/> instances representing the collection, or <see langword="null"/>
              if the URI can not be mapped to a collection.
            </returns>
      <remarks>
        <para>
                Any documents with document URIs must have been retrieved from the document set.
              </para>
        <para>
                A return value of <see langword="null"/> indicates that <paramref name="uri"/> is not supported by this
                resolver (for example an unsupported URI scheme).  If the URI does have meaning to this resolver but there was
                an error retrieving the document then an exception should be thrown.
              </para>
      </remarks>
      <exception cref="T:System.Exception">An error occurred retrieving the collection.</exception>
    </member>
    <member name="T:XmlPrime.Serialization.XdmDocumentWriter">
      <summary>
            Represents a writer that provides a fast, non-cached, forwards-only means of serializing instances of
            the XPath 2.0 and XQuery 1.0 Data Model (XDM) to an <see cref="T:XmlPrime.XdmDocument"/> instance.
            </summary>
    </member>
    <member name="T:XmlPrime.Serialization.XdmWriter">
      <summary>
            	Represents a writer that provides a fast, non-cached, forwards-only means of serializing instances of
            	the XPath and XQuery Data Model (XDM).
            </summary>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.Dispose(System.Boolean)">
      <summary>
            	Releases the unmanaged resources used by the <see cref="T:System.Xml.XmlWriter"/> and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.Create(System.IO.Stream)">
      <overloads>
            	Creates an <see cref="T:XmlPrime.Serialization.XdmWriter"/> instance.
            </overloads>
      <summary>
            	Creates an <see cref="T:XmlPrime.Serialization.XdmWriter"/> instance using the specified stream.
            </summary>
      <param name="stream">The <see cref="T:System.IO.Stream"/> to which you want to write.</param>
      <returns>
            	A new <see cref="T:XmlPrime.Serialization.XdmWriter"/> instance.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream"/> is <see langword="null"/>.
            </exception>
      <remarks>
            	An <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> object with default settings is used to create the writer.  
            	If you wish to specify the serialization parameters on the created writer, use the overload that takes an 
            	<see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> object as one of its arguments, and pass in an <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> 
            	object with the correct settings.
            </remarks>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.Create(System.IO.Stream,XmlPrime.Serialization.XdmWriterSettings)">
      <summary>
            	Creates an <see cref="T:XmlPrime.Serialization.XdmWriter"/> instance using the specified stream and
            	<see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> object.
            </summary>
      <param name="stream">The <see cref="T:System.IO.Stream"/> to which you want to write.</param>
      <param name="settings">
        <para>The <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> object used to configure the new 
                                     	<see cref="T:XmlPrime.Serialization.XdmWriter"/> instance.  If this is <see langword="null"/>, an 
                                     	<see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> with default settings is used.</para>
        <para>If the <see cref="T:XmlPrime.Serialization.XdmWriter"/> is being used with the 
            		<see cref="M:XmlPrime.XQuery.Serialize(System.Xml.XmlWriter)"/> method, you should use the 
            		<see cref="P:XmlPrime.XQuery.SerializationSettings"/> property to obtain an <see cref="T:XmlPrime.Serialization.XdmWriter"/> object 
            		with the correct settings.</para>
      </param>
      <returns>
            	A new <see cref="T:XmlPrime.Serialization.XdmWriter"/> instance.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">There is an error with the serialization configuration.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.Create(System.Text.StringBuilder)">
      <summary>
            	Creates an <see cref="T:XmlPrime.Serialization.XdmWriter"/> instance using the specified <see cref="T:System.Text.StringBuilder"/>.
            </summary>
      <param name="output">The <see cref="T:System.Text.StringBuilder"/> to which you want to write.</param>
      <returns>
            	A new <see cref="T:XmlPrime.Serialization.XdmWriter"/> instance.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="output"/> is <see langword="null"/>.
            </exception>
      <remarks>
            	An <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> object with default settings is used to create the writer.  
            	If you wish to specify the serialization parameters on the created writer, use the overload that takes an 
            	<see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> object as one of its arguments, and pass in an <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> 
            	object with the correct settings.
            </remarks>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.Create(System.Text.StringBuilder,XmlPrime.Serialization.XdmWriterSettings)">
      <summary>
            	Creates an <see cref="T:XmlPrime.Serialization.XdmWriter"/> instance using the specified  <see cref="T:System.Text.StringBuilder"/> and
            	<see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> object.
            </summary>
      <param name="output">The <see cref="T:System.Text.StringBuilder"/> to which you want to write.</param>
      <param name="settings">
        <para>The <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> object used to configure the new 
                                     	<see cref="T:XmlPrime.Serialization.XdmWriter"/> instance.  If this is <see langword="null"/>, an 
                                     	<see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> with default settings is used.</para>
        <para>If the <see cref="T:XmlPrime.Serialization.XdmWriter"/> is being used with the 
            		<see cref="M:XmlPrime.XQuery.Serialize(System.Xml.XmlWriter)"/> method, you should use the 
            		<see cref="P:XmlPrime.XQuery.SerializationSettings"/> property to obtain an <see cref="T:XmlPrime.Serialization.XdmWriter"/> object 
            		with the correct settings.</para>
      </param>
      <returns>
            	A new <see cref="T:XmlPrime.Serialization.XdmWriter"/> instance.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="output"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">There is an error with the serialization configuration.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.Create(System.String)">
      <summary>
            	Creates an <see cref="T:XmlPrime.Serialization.XdmWriter"/> instance using the specified file.
            </summary>
      <param name="outputFileName">The name of the file to which you want to write.  The <paramref name="outputFileName"/> must be a file system path.</param>
      <returns>
            	A new <see cref="T:XmlPrime.Serialization.XdmWriter"/> instance.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="outputFileName"/> is <see langword="null"/>.
            </exception>
      <remarks>
            	An <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> object with default settings is used to create the writer.  
            	If you wish to specify the serialization parameters on the created writer, use the overload that takes an 
            	<see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> object as one of its arguments, and pass in an <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> 
            	object with the correct settings.
            </remarks>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.Create(System.String,XmlPrime.Serialization.XdmWriterSettings)">
      <summary>
            	Creates an <see cref="T:XmlPrime.Serialization.XdmWriter"/> instance using the specified file and
            	<see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> object.
            </summary>
      <param name="outputFileName">The name of the file to which you want to write.  The <paramref name="outputFileName"/> must be a file system path.</param>
      <param name="settings">
        <para>The <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> object used to configure the new 
                                     	<see cref="T:XmlPrime.Serialization.XdmWriter"/> instance.  If this is <see langword="null"/>, an 
                                     	<see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> with default settings is used.</para>
        <para>If the <see cref="T:XmlPrime.Serialization.XdmWriter"/> is being used with the 
            		<see cref="M:XmlPrime.XQuery.Serialize(System.Xml.XmlWriter)"/> method, you should use the 
            		<see cref="P:XmlPrime.XQuery.SerializationSettings"/> property to obtain an <see cref="T:XmlPrime.Serialization.XdmWriter"/> object 
            		with the correct settings.</para>
      </param>
      <returns>
            	A new <see cref="T:XmlPrime.Serialization.XdmWriter"/> instance.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="outputFileName"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">There is an error with the serialization configuration.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.Create(System.IO.TextWriter,XmlPrime.Serialization.XdmWriterSettings)">
      <summary>
            	Creates an <see cref="T:XmlPrime.Serialization.XdmWriter"/> instance using the specified <see cref="T:System.IO.TextWriter"/> and
            	<see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> object.
            </summary>
      <param name="textWriter">The <see cref="T:System.IO.TextWriter"/> to which you want to write.</param>
      <param name="settings">
        <para>The <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> object used to configure the new 
                                     	<see cref="T:XmlPrime.Serialization.XdmWriter"/> instance.  If this is <see langword="null"/>, an 
                                     	<see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> with default settings is used with <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Encoding"/>
                                     	and <see cref="P:XmlPrime.Serialization.XdmWriterSettings.ByteOrderMark"/> set as appropriate to the supplied
                                     	<paramref name="textWriter"/>.</para>
        <para>If the <see cref="T:XmlPrime.Serialization.XdmWriter"/> is being used with the 
            		<see cref="M:XmlPrime.XQuery.Serialize(System.Xml.XmlWriter)"/> method, you should use the 
            		<see cref="P:XmlPrime.XQuery.SerializationSettings"/> property to obtain an <see cref="T:XmlPrime.Serialization.XdmWriter"/> object 
            		with the correct settings.</para>
      </param>
      <returns>
            	A new <see cref="T:XmlPrime.Serialization.XdmWriter"/> instance.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textWriter"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">There is an error with the serialization configuration.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.Create(System.IO.TextWriter)">
      <summary>
            	Creates an <see cref="T:XmlPrime.Serialization.XdmWriter"/> instance using the specified <see cref="T:System.IO.TextWriter"/>.
            </summary>
      <param name="textWriter">The <see cref="T:System.IO.TextWriter"/> to which you want to write.</param>
      <returns>
            	A new <see cref="T:XmlPrime.Serialization.XdmWriter"/> instance.
            </returns>
      <remarks>
            	An <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> object with default settings is used to create the writer with  
            	<see cref="P:XmlPrime.Serialization.XdmWriterSettings.Encoding"/> and <see cref="P:XmlPrime.Serialization.XdmWriterSettings.ByteOrderMark"/> set as appropriate
            	to the supplied <paramref name="textWriter"/>.  If you wish to specify the serialization parameters on the 
            	created writer, use the overload that takes an <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> object as one of its arguments, 
            	and pass in an <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> object with the correct settings.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textWriter"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">There is an error with the serialization configuration.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.Serialize(System.Collections.Generic.IEnumerable{System.Xml.XPath.XPathItem},System.Xml.XmlWriter)">
      <overloads>Serializes an XDM instance to the specified output.</overloads>
      <summary>
            	Serializes an <see cref="T:System.Collections.Generic.IEnumerable`1"/> instance to an <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="items">The <see cref="T:System.Xml.XPath.XPathItem"/> collection to serialize.</param>
      <param name="writer">The writer to serialize to.</param>
      <remarks>
        <para>For best performance, the writer should be created with one of the overloads of the
            	<see cref="M:XmlPrime.Serialization.XdmWriter.Create(System.IO.Stream)"/> method.</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="items"/> or <paramref name="writer"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.Serialize(System.Collections.Generic.IEnumerable{System.Xml.XPath.XPathItem},System.IO.Stream,XmlPrime.Serialization.XdmWriterSettings)">
      <summary>
            	Serializes an <see cref="T:System.Collections.Generic.IEnumerable`1"/> instance to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="items">The <see cref="T:System.Xml.XPath.XPathItem"/> collection to serialize.</param>
      <param name="stream">The stream to serialize to.</param>
      <param name="settings">The serialization settings.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="items"/>, <paramref name="stream"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.Serialize(System.Collections.Generic.IEnumerable{System.Xml.XPath.XPathItem},System.String,XmlPrime.Serialization.XdmWriterSettings)">
      <summary>
            	Serializes an <see cref="T:System.Collections.Generic.IEnumerable`1"/> instance to the specified file.
            </summary>
      <param name="items">The <see cref="T:System.Xml.XPath.XPathItem"/> collection to serialize.</param>
      <param name="outputFileName">The name of the file to which you want to write.  The <paramref name="outputFileName"/> must be a file system path.</param>
      <param name="settings">The serialization settings.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="items"/>, <paramref name="outputFileName"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.Serialize(System.Collections.Generic.IEnumerable{System.Xml.XPath.XPathItem},System.IO.TextWriter,XmlPrime.Serialization.XdmWriterSettings)">
      <summary>
            	Serializes an <see cref="T:System.Collections.Generic.IEnumerable`1"/> instance to the specified <see cref="T:System.IO.TextWriter"/>.
            </summary>
      <param name="items">The <see cref="T:System.Xml.XPath.XPathItem"/> collection to serialize.</param>
      <param name="textWriter">The <see cref="T:System.IO.TextWriter"/> to serialize to.</param>
      <param name="settings">The serialization settings.</param>
      <remarks>
            	The value of the <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Encoding"/> and 
            	<see cref="P:XmlPrime.Serialization.XdmWriterSettings.ByteOrderMark"/> properties of <paramref name="settings"/> is
            	ignored, and the encoding specified by <paramref name="textWriter"/> is used instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="items"/>, <paramref name="textWriter"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.Serialize(System.Xml.XPath.XPathItem,System.Xml.XmlWriter)">
      <summary>
            	Serializes an <see cref="T:System.Xml.XPath.XPathItem"/> instance to an 
            	<see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="item">The item to serialize, or <see langword="null"/> to serialize an empty document.</param>
      <param name="writer">The writer to serialize to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
      <remarks>
        <para>If the <see cref="P:System.Xml.XmlWriter.WriteState"/> property is
            <see cref="F:System.Xml.WriteState.Closed"/> or <see cref="F:System.Xml.WriteState.Error"/>
            no serialization will be performed. </para>
      </remarks>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.Serialize(System.Xml.XPath.XPathItem,System.String,XmlPrime.Serialization.XdmWriterSettings)">
      <summary>
            	Serializes the specified <see cref="T:System.Xml.XPath.XPathItem"/> to the specified file.
            </summary>
      <param name="item">The <see cref="T:System.Xml.XPath.XPathItem"/> to serialize, or <see langword="null"/> to serialize the empty sequence.</param>
      <param name="outputFileName">The name of the file to which you want to write.  The <paramref name="outputFileName"/> must be a file system path.</param>
      <param name="settings">The serialization settings.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="outputFileName"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.Serialize(System.Xml.XPath.XPathItem,System.IO.Stream,XmlPrime.Serialization.XdmWriterSettings)">
      <summary>
            	Serializes the specified <see cref="T:System.Xml.XPath.XPathItem"/> to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="item">The <see cref="T:System.Xml.XPath.XPathItem"/> to serialize, or <see langword="null"/> to serialize the empty sequence.</param>
      <param name="stream">The <see cref="T:System.IO.Stream"/> to serialize to.</param>
      <param name="settings">The serialization settings.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.Serialize(System.Xml.XPath.XPathItem,System.IO.TextWriter,XmlPrime.Serialization.XdmWriterSettings)">
      <summary>
            	Serializes the specified <see cref="T:System.Xml.XPath.XPathItem"/> to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="item">The <see cref="T:System.Xml.XPath.XPathItem"/> to serialize, or <see langword="null"/> to serialize the empty sequence.</param>
      <param name="textWriter">The <see cref="T:System.IO.TextWriter"/> to serialize to.</param>
      <param name="settings">The serialization settings.</param>
      <remarks>
            	The value of the <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Encoding"/> and 
            	<see cref="P:XmlPrime.Serialization.XdmWriterSettings.ByteOrderMark"/> properties of <paramref name="settings"/> is
            	ignored, and the encoding specified by <paramref name="textWriter"/> is used instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textWriter"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.Serialize(System.Xml.XmlReader,System.Xml.XmlWriter)">
      <summary>
            	Serializes content from an <see cref="T:System.Xml.XmlReader"/> instance to an <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="reader">The document to serialize.</param>
      <param name="writer">The writer to serialize to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader"/> or <paramref name="writer"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
      <remarks>
        <para>If the <see cref="P:XmlPrime.Serialization.XdmWriterSettings.ConformanceLevel"/> property of the <see name="XmlReader.Settings"/> has value
            <see cref="F:System.Xml.ConformanceLevel.Document"/>, then only the subtree on which <paramref name="reader"/> is positioned and any following
            comment, processing instuctions and whitespace nodes will be serialized.  Otherwise, the subtree on which <paramref name="reader"/> 
            is positioned together with any siblings.
            will be serialized.
            </para>
        <para>If the <see cref="P:System.Xml.XmlWriter.WriteState"/> property is
            <see cref="F:System.Xml.WriteState.Closed"/> or <see cref="F:System.Xml.WriteState.Error"/>
            no serialization will be performed. </para>
      </remarks>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.Serialize(System.Xml.XmlReader,System.String,XmlPrime.Serialization.XdmWriterSettings)">
      <summary>
            	Serializes data from the specified <see cref="T:System.Xml.XmlReader"/> to the specified file.
            </summary>
      <param name="reader">The document to serialize.</param>
      <param name="outputFileName">The name of the file to which you want to write.  The <paramref name="outputFileName"/> must be a file system path.</param>
      <param name="settings">The serialization settings.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader"/>, <paramref name="outputFileName"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
      <remarks>
            If the <see cref="P:XmlPrime.Serialization.XdmWriterSettings.ConformanceLevel"/> property of <paramref name="settings"/> has value
            <see cref="F:System.Xml.ConformanceLevel.Document"/>, then only the subtree on which <paramref name="reader"/> is positioned and any following
            comment, processing instuctions and whitespace nodes will be serialized.  Otherwise, the subtree on which <paramref name="reader"/> 
            is positioned together with any siblings.
            </remarks>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.Serialize(System.Xml.XmlReader,System.IO.Stream,XmlPrime.Serialization.XdmWriterSettings)">
      <summary>
            	Serializes data from the specified <see cref="T:System.Xml.XmlReader"/> to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="reader">The document  to serialize.</param>
      <param name="stream">The <see cref="T:System.IO.Stream"/> to serialize to.</param>
      <param name="settings">The serialization settings.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader"/>, <paramref name="stream"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
      <remarks>
            If the <see cref="P:XmlPrime.Serialization.XdmWriterSettings.ConformanceLevel"/> property of <paramref name="settings"/> has value
            <see cref="F:System.Xml.ConformanceLevel.Document"/>, , then only the subtree on which <paramref name="reader"/> is positioned and any following
            comment, processing instuctions and whitespace nodes will be serialized.  Otherwise, the subtree on which <paramref name="reader"/> 
            is positioned together with any siblings.
            </remarks>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.Close">
      <summary>
            	Closes this stream and the underlying stream.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            	A call is made to write more output after Close has been called or the result of this call is an invalid XML document.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.Flush">
      <summary>
            	Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.
            </summary>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.LookupPrefix(System.String)">
      <summary>
            	Returns the closest prefix defined in the current namespace scope for the namespace URI.
            </summary>
      <param name="ns">The namespace URI whose prefix you want to find.</param>
      <returns>
            	The matching prefix or null if no matching namespace URI is found in the current scope.
            </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="ns"/> is either null or String.Empty.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>
            	Eencodes the specified binary bytes as Base64 and writes out the resulting text.
            </summary>
      <param name="buffer">Byte array to encode.</param>
      <param name="index">The position in the buffer indicating the start of the bytes to write.</param>
      <param name="count">The number of bytes to write.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer"/> is null.
            </exception>
      <exception cref="T:System.ArgumentException">
            	The buffer length minus <paramref name="index"/> is less than <paramref name="count"/>.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index"/> or <paramref name="count"/> is less than zero.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.WriteCData(System.String)">
      <summary>
            	Writes out a &lt;![CDATA[...]]&gt; block containing the specified text.
            </summary>
      <param name="text">The text to place inside the CDATA block.</param>
      <exception cref="T:System.ArgumentException">
            	The text would result in a non-well formed XML document.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.WriteCharEntity(System.Char)">
      <summary>
            	Forces the generation of a character entity for the specified Unicode character value.
            </summary>
      <param name="ch">The Unicode character for which to generate a character entity.</param>
      <exception cref="T:System.ArgumentException">
            	The character is in the surrogate pair character range, 0xd800 - 0xdfff.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary>
            	Writes text one buffer at a time.
            </summary>
      <param name="buffer">Character array containing the text to write.</param>
      <param name="index">The position in the buffer indicating the start of the text to write.</param>
      <param name="count">The number of characters to write.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer"/> is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index"/> or <paramref name="count"/> is less than zero.
            	-or-
            	The buffer length minus <paramref name="index"/> is less than <paramref name="count"/>; the call results in surrogate pair characters being split or an invalid surrogate pair being written.
            </exception>
      <exception cref="T:System.ArgumentException">
            	The <paramref name="buffer"/> parameter value is not valid.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.WriteComment(System.String)">
      <summary>
            	Writes out a comment &lt;!--...--&gt; containing the specified text.
            </summary>
      <param name="text">Text to place inside the comment.</param>
      <exception cref="T:System.ArgumentException">
            	The text would result in a non-well formed XML document.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary>
            	Writes the DOCTYPE declaration with the specified name and optional attributes.
            </summary>
      <param name="name">The name of the DOCTYPE. This must be non-empty.</param>
      <param name="pubid">If non-null it also writes PUBLIC "pubid" "sysid" where <paramref name="pubid"/> and <paramref name="sysid"/> are replaced with the value of the given arguments.</param>
      <param name="sysid">If <paramref name="pubid"/> is null and <paramref name="sysid"/> is non-null it writes SYSTEM "sysid" where <paramref name="sysid"/> is replaced with the value of this argument.</param>
      <param name="subset">If non-null it writes [subset] where subset is replaced with the value of this argument.</param>
      <exception cref="T:System.InvalidOperationException">
            	This method was called outside the prologue (after the root element).
            </exception>
      <exception cref="T:System.ArgumentException">
            	The value for <paramref name="name"/> would result in invalid XML.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.WriteEndAttribute">
      <summary>
            	Closes the previous <see cref="M:XmlPrime.Serialization.XdmWriter.WriteStartAttribute(System.String,System.String,System.String)"/> call.
            </summary>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.WriteEndDocument">
      <summary>
            	Closes any open elements or attributes and puts the writer back in the Start state.
            </summary>
      <exception cref="T:System.ArgumentException">
            	The XML document is invalid.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.WriteEndElement">
      <summary>
            	When overridden in a derived class, closes one element and pops the corresponding namespace scope.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            	This results in an invalid XML document.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.WriteEntityRef(System.String)">
      <summary>
            	Writes out an entity reference as &amp;name;.
            </summary>
      <param name="name">The name of the entity reference.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name"/> is either <see langword="null"/> or <see cref="F:System.String.Empty"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.WriteFullEndElement">
      <summary>
            	When overridden in a derived class, closes one element and pops the corresponding namespace scope.
            </summary>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary>
            	Writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.
            </summary>
      <param name="name">The name of the processing instruction.</param>
      <param name="text">The text to include in the processing instruction.</param>
      <exception cref="T:System.ArgumentException">
            	The text would result in a non-well formed XML document.
            	<paramref name="name"/> is either null or String.Empty.
            	This method is being used to create an XML declaration after <see cref="M:System.Xml.XmlWriter.WriteStartDocument"/> has already been called.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary>
            	Writes raw markup manually from a character buffer.
            </summary>
      <param name="buffer">Character array containing the text to write.</param>
      <param name="index">The position within the buffer indicating the start of the text to write.</param>
      <param name="count">The number of characters to write.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index"/> or <paramref name="count"/> is less than zero.
            	The buffer length minus <paramref name="index"/> is less than <paramref name="count"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.WriteRaw(System.String)">
      <summary>
            	When overridden in a derived class, writes raw markup manually from a string.
            </summary>
      <param name="data">String containing the text to write.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="data"/> is either <see langword="null"/> or <see cref="F:System.String.Empty"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <overloads>Writes the start of an attribute.</overloads>
      <summary>
            	Writes the start of an attribute with the specified prefix, local name, and namespace URI.
            </summary>
      <param name="prefix">The namespace prefix of the attribute.</param>
      <param name="localName">The local name of the attribute.</param>
      <param name="ns">The namespace URI for the attribute.</param>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.WriteStartDocument">
      <overloads>Writes the XML declaration with the version "1.0".</overloads>
      <summary>
            	Writes the XML declaration with the version "1.0".
            </summary>
      <exception cref="T:System.InvalidOperationException">
            	This is not the first write method called after the constructor.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.WriteStartDocument(System.Boolean)">
      <summary>
            	Writes the XML declaration with the version "1.0" and the standalone attribute.
            </summary>
      <param name="standalone">If true, it writes "standalone=yes"; if false, it writes "standalone=no".</param>
      <exception cref="T:System.InvalidOperationException">
            	This is not the first write method called after the constructor.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.WriteStartElement(System.String,System.String,System.String)">
      <overloads>Writes the specified start tag.</overloads>
      <summary>
            	Writes the specified start tag and associates it with the given namespace and prefix.
            </summary>
      <param name="prefix">The namespace prefix of the element.</param>
      <param name="localName">The local name of the element.</param>
      <param name="ns">The namespace URI to associate with the element.</param>
      <exception cref="T:System.InvalidOperationException">
            	The writer is closed.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.WriteString(System.String)">
      <summary>
            	Writes the given text content.
            </summary>
      <param name="text">The text to write.</param>
      <exception cref="T:System.ArgumentException">
            	The text string contains an invalid surrogate pair.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary>
            	Generates and writes the surrogate character entity for the surrogate character pair.
            </summary>
      <param name="lowChar">The low surrogate. This must be a value between 0xDC00 and 0xDFFF.</param>
      <param name="highChar">The high surrogate. This must be a value between 0xD800 and 0xDBFF.</param>
      <exception cref="T:System.ArgumentException">
            	An invalid surrogate character pair was passed.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.WriteWhitespace(System.String)">
      <summary>
            	Writes out the given white space.
            </summary>
      <param name="ws">The string of white space characters.</param>
      <exception cref="T:System.ArgumentException">
            	The string contains non-white space characters.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.EndScope">
      <summary>
            Ends the scope.
            </summary>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.StartArrayScope">
      <summary>
            Starts the array scope.
            </summary>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.StartObjectScope">
      <summary>
            Starts the object scope.
            </summary>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriter.WriteNullValue">
      <summary>
            Writes the null value.
            </summary>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriter.Settings">
      <summary>
            	Gets the <see cref="T:System.Xml.XmlWriterSettings"/> object used to create this <see cref="T:System.Xml.XmlWriter"/> instance.
            </summary>
      <value>Always returns <see langword="null"/>.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriter.WriteState">
      <summary>
            	Gets the state of the writer.
            </summary>
      <value>
            	One of the <see cref="T:System.Xml.WriteState"/> values.
            </value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriter.XmlLang">
      <summary>
            	Gets the current <c>xml:lang</c> scope.
            </summary>
      <value>The current <c>xml:lang</c> scope.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriter.XmlSpace">
      <summary>
            	Gets an <see cref="T:System.Xml.XmlSpace"/> representing the current
            	<c>xml:space</c> scope.
            </summary>
      <value>One of the <see cref="T:System.Xml.XmlSpace"/> values.</value>
    </member>
    <member name="M:XmlPrime.Serialization.XdmDocumentWriter.Create(System.Xml.XmlNameTable,System.String)">
      <summary>
            Creates a <see cref="T:XmlPrime.Serialization.XdmDocumentWriter"/> to write to an <see cref="T:XmlPrime.XdmDocument"/> with
            the specified document URI and name table.
            </summary>
      <param name="nameTable">The name table.</param>
      <param name="documentUri">The document URI.</param>
      <returns>A new <see cref="T:XmlPrime.Serialization.XdmDocumentWriter"/> instance.</returns>
      <remarks>
            If <paramref name="nameTable"/> is <see langword="null"/> then a new <see cref="T:System.Xml.NameTable"/>
            instance will be used.  If <paramref name="documentUri"/> is <see langword="null"/> then the
            document created will have an empty document URI.
            </remarks>
    </member>
    <member name="M:XmlPrime.Serialization.XdmDocumentWriter.Create(System.Xml.XmlNameTable)">
      <summary>
            Creates a <see cref="T:XmlPrime.Serialization.XdmDocumentWriter"/> to write to an <see cref="T:XmlPrime.XdmDocument"/> with
            the specified name table.
            </summary>
      <param name="nameTable">The name table.</param>
      <returns>A new <see cref="T:XmlPrime.Serialization.XdmDocumentWriter"/> instance.</returns>
      <remarks>
            If <paramref name="nameTable"/> is <see langword="null"/> then a new <see cref="T:System.Xml.NameTable"/>
            instance will be used.
            </remarks>
    </member>
    <member name="M:XmlPrime.Serialization.XdmDocumentWriter.Create">
      <summary>
            Creates a <see cref="T:XmlPrime.Serialization.XdmDocumentWriter"/> to write to an <see cref="T:XmlPrime.XdmDocument"/>.
            </summary>
      <returns>A new <see cref="T:XmlPrime.Serialization.XdmDocumentWriter"/> instance.</returns>
    </member>
    <member name="P:XmlPrime.Serialization.XdmDocumentWriter.Document">
      <summary>
            Gets the <see cref="T:XmlPrime.XdmDocument"/> to which this instance has written, or <see langword="null"/> if nothing was written to the document.
            </summary>
      <value>A <see cref="T:XmlPrime.XdmDocument"/> instance, or <see langword="null"/> if nothing was written to the document.</value>
      <exception cref="T:System.NotSupportedException">Raised if the <see cref="T:System.Xml.WriteState"/> is not closed.</exception>
    </member>
    <member name="T:XmlPrime.XdmException">
      <summary>
            	Represents errors that occurred during handling of an XQuery expression, XPath expressions, XSL transformation or
            	serialization of an XDM instance.
            </summary>
      <remarks>
        <para>Errors defined by the specifications:</para>
        <list type="bullet">
          <item>
            <description>XQuery 1.0 and XPath 2.0 Functions and Operators</description>
          </item>
          <item>
            <description>XML Path Language (XPath) 2.0</description>
          </item>
          <item>
            <description>XQuery 1.0: An XML Query Language</description>
          </item>
          <item>
            <description>XSL Transformations (XSLT) Version 2.0</description>
          </item>
          <item>
            <description>XSLT 2.0 and XQuery 1.0 Serialization</description>
          </item>
        </list>
        <para>are identified by a URI.</para>
      </remarks>
      <seealso href="http://www.w3.org/2005/xqt-errors/">XQuery 1.0 and XPath 2.0 Functions and Operators Error Codes Namespace</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Foap0001">
      <summary>
            An error is raised if fn:apply is called and the arity of the supplied function is not the same as the number of members in the supplied array.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foar0001">
      <summary>
              This error is raised whenever an attempt is made to divide by zero.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foar0002">
      <summary>
              This error is raised whenever numeric operations result in an overflow or underflow.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foay0001">
      <summary>
              This error is raised when an integer used to select a member of an array is outside the range of values for that array.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foay0002">
      <summary>
              This error is raised when the $length argument to array:subarray is negative.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foca0001">
      <summary>
              Input value too large for decimal
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foca0002">
      <summary>
              Invalid lexical value.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foca0003">
      <summary>
              Input value too large for integer
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foca0005">
      <summary>
              NaN supplied as float/double value.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foch0001">
      <summary>
              Codepoint not valid.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foch0002">
      <summary>
              Unsupported collation.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foch0003">
      <summary>
              Unsupported normalization form.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foch0004">
      <summary>
              Collation does not support collation units.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fodc0001">
      <summary>
              No context document.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fodc0002">
      <summary>
              Error retrieving resource.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fodc0004">
      <summary>
              Invalid argument to fn:collection().
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fodc0005">
      <summary>
              Invalid argument to fn:doc.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fodc0006">
      <summary>
              String passed to fn:parse-xml is not a well-formed XML document.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fodc0007">
      <summary>
              Base URI passed to fn:parse-xml is not a valid absolute URI.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fodc0010">
      <summary>
            , The processor does not support serialization.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fodf1280">
      <summary>
              This error is raised if the decimal format name supplied to fn:format-number is not a valid QName, or if the prefix in the QName is undeclared, or if there is no decimal format in the static context with a matching name.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fodf1310">
      <summary>
              This error is raised if the picture string supplied to fn:format-number has invalid syntax.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fodt0001">
      <summary>
              Overflow/underflow in date/time operation
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fodt0002">
      <summary>
              Overflow/underflow in duration operation
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fodt0003">
      <summary>
              Invalid time zone value
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foer0000">
      <summary>
              Unidentified error.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fofd1340">
      <summary>
            This error is raised if the picture string supplied to fn:format-date, fn:format-time, or fn:format-dateTime has invalid syntax.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fofd1350">
      <summary>
            This error is raised if the picture string supplied to fn:format-date selects a component that is not present in a date, or if the picture string 
            supplied to fn:format-time selects a component that is not present in a time.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fojs0001">
      <summary>
            JSON syntax error. An error is raised if the string supplied as input does not conform to the JSON grammar (optionally with implementation-defined extensions).
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fojs0003">
      <summary>
            JSON duplicate keys.  Raised by fn:json-doc, fn:parse-json or fn:json-to-xml if the string supplied as input contains a 
            JSON object having duplicate keys, when the chosen policy is to reject duplicates.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fojs0004">
      <summary>
            JSON: not schema-aware.  Raised by fn:json-doc, fn:parse-json or fn:json-to-xml if the string supplied as input contains a 
            JSON object having duplicate keys, when the chosen policy is to reject duplicates.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fojs0005">
      <summary>
            Invalid JSON options.  Raised by fn:json-doc, fn:parse-json or fn:json-to-xml if the string supplied as input contains a 
            JSON object having duplicate keys, when the chosen policy is to reject duplicates.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fojs0006">
      <summary>
            Invalid JSON options.  Raised by fn:xml-to-json if the XML input does not conform to the rules for the XML representation of JSON.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fojs0007">
      <summary>
            Bad JSON escape sequence.  Raised by fn:xml-to-json if the XML input uses the attribute escaped="true" 
            or escaped-key="true", and the corresponding string or key contains an invalid JSON escape sequence.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fons0004">
      <summary>
              No namespace found for prefix.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fons0005">
      <summary>
              Base-uri not defined in the static context.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Forg0001">
      <summary>
              Invalid value for cast/constructor.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Forg0002">
      <summary>
              Invalid argument to fn:resolve-uri().
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Forg0003">
      <summary>
              fn:zero-or-one called with a sequence containing more than one item.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Forg0004">
      <summary>
              fn:one-or-more called with a sequence containing no items.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Forg0005">
      <summary>
              fn:exactly-one called with a sequence containing zero or more than one item.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Forg0006">
      <summary>
              Invalid argument type.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Forg0008">
      <summary>
              Both arguments to fn:dateTime have a specified time zone.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Forg0009">
      <summary>
              Error in resolving a relative URI against a base URI in fn:resolve-uri.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Forg0010">
      <summary>
            Invalid date/time.  Raised when the input to fn:parse-ietf-date does not match the prescribed grammar, 
            or when it represents an invalid date/time such as 31 February.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Forx0001">
      <summary>
              Invalid regular expression. flags
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Forx0002">
      <summary>
              Invalid regular expression.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Forx0003">
      <summary>
              Regular expression matches zero-length string.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Forx0004">
      <summary>
              Invalid replacement string.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foty0012">
      <summary>
              Argument node does not have a typed value.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foty0013">
      <summary>
              The argument to fn:data() contains a function item.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foty0014">
      <summary>
              The argument to fn:string() is a function item.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foty0015">
      <summary>
              The argument to fn:deep-equal() is a function item.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foup0001">
      <summary>
              It is a dynamic error if the first operand of fn:put is not a node of a supported kind.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foup0002">
      <summary>
              It is a dynamic error if the second operand of fn:put is not a valid lexical representation of the xs:anyURI type.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fout1170">
      <summary>
              An error is raised if the $href argument contains a fragment identifier, or if it cannot be used to retrieve a resource containing text.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fout1190">
      <summary>
              An error is raised if the retrieved resource contains octets that cannot be decoded into Unicode 
              characters using the specified encoding, or if the resulting characters are not permitted XML characters.
              This includes the case where the processor does not support the requested encoding.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Fout1200">
      <summary>
              An error is raised if $encoding is absent and the processor cannot infer the encoding using external information and the encoding is not UTF-8.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foqm0001">
      <summary>
              An error is raised if, in a call to <c>fn:load-xquery-module</c>, the supplied module URI is zero-length.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foqm0002">
      <summary>
              An error is raised if, in a call to <c>fn:load-xquery-module</c>, no module can be found with the supplied 
            module URI.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foqm0003">
      <summary>
            An error is raised if, in a call to <c>fn:load-xquery-module</c>, a static error (including a 
            statically-detected type error) is encountered when processing the library module.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foqm0005">
      <summary>
            An error is raised if, in a call to <c>fn:load-xquery-module</c>, a value is supplied for the initial 
            context item or for an external variable, and the value does not conform to the required type declared in 
            the dynamically loaded module.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foqm0006">
      <summary>
            An error is raised if, in a call to <c>fn:load-xquery-module</c>, no XQuery processor is available 
            supporting the requested XQuery version (or if none is available at all).
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foxt0001">
      <summary>
            An error is raised if, in a call to <c>fn:transform</c>, no XSLT processor suitable for evaluating a call 
            on fn:transform is available.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foxt0002">
      <summary>
            An error is raised if, in a call to <c>fn:transform</c>, the parameters supplied to fn:transform are 
            invalid, for example if two mutually-exclusive parameters are supplied. If a suitable XSLT error code is 
            available (for example in the case where the requested initial-template does not exist in the stylesheet),
             that error code should be used in preference.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foxt0003">
      <summary>
            An error is raised if an XSLT transformation invoked using <c>fn:transform</c>
            fails with a static or dynamic error. The XSLT error code is used if available; this error code provides a 
            fallback when no XSLT error code is returned, for example because the processor is an XSLT 1.0 processor.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foxt0004">
      <summary>
            An error is raised if the <c>fn:transform</c> function is invoked when XSLT transformation (or a specific
             transformation option) has been disabled for security or other reasons.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foxt0005">
      <summary>
            An error is raised if the <c>fn:transform </c> function uses <c>delivery-format:saved</c> and the output of the 
            transformation cannot be saved at the requested location.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Foxt0006">
      <summary>
            An error is raised if the result of the <c>fn:transform</c> function contains characters available only in XML 1.1 
            and the calling processor cannot handle such characters.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Senr0001">
      <summary>
            It is an error if an item in S6 in sequence normalization is an attribute node or a namespace node.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Sepm0004">
      <summary>
            It is an error to specify the doctype-system parameter, or to specify the standalone parameter with a value 
            other than omit, if the instance of the data model contains text nodes or multiple element nodes as children 
            of the root node.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Sepm0009">
      <summary>
            It is an error if the <c>omit-xml-declaration</c> parameter has the value <c>yes</c>, and the standalone attribute has 
            a value other than <c>omit</c>; or the version parameter has a value other than <c>1.0</c> and the <c>doctype-system</c> parameter is specified.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Sepm0010">
      <summary>
            It is an error if the output method is <c>xml</c>, the value of the <c>undeclare-prefixes</c> parameter is <c>yes</c>, 
            and the value of the version parameter is <c>1.0</c>.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Sepm0016">
      <summary>
            It is a an error if a parameter value is invalid for the defined domain.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Sepm0017">
      <summary>
            It is an error if evaluating an expression in order to extract the setting of a serialization parameter from a data 
            model instance would yield an error.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Sepm0018">
      <summary>
            It is an error if evaluating an expression in order to extract the setting of the use-character-maps serialization 
            parameter from a data model instance would yield a sequence of length greater than one.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Sepm0019">
      <summary>
            It is an error if an instance of the data model used to specify the settings of serialization parameters specifies 
            the value of the same parameter more than once.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Sere0003">
      <summary>
            It is an error if the serializer is unable to satisfy the rules for either a well-formed XML document entity 
            or a well-formed XML external general parsed entity, or both, except for content modified by the character 
            expansion phase of serialization.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Sere0005">
      <summary>
            It is an error if the serialized result would contain an NCName Names that contains a character that is not
            permitted by the version of Namespaces in XML specified by the version parameter.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Sere0006">
      <summary>
            It is an error if the serialized result would contain a character that is not permitted by the version of XML 
            specified by the version parameter.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Sere0008">
      <summary>
            It is an error if a character that cannot be represented in the encoding that the serializer is using for
            output appears in a context where character references are not allowed (for example if the character occurs 
            in the name of an element).
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Sere0012">
      <summary>
            It is an error if the value of the normalization-form parameter is fully-normalized and any relevant construct 
            of the result begins with a combining character.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Sere0014">
      <summary>
            It is an error to use the HTML output method when characters which are legal in XML but not in HTML, 
            specifically the control characters #x7F-#x9F, appear in the instance of the data model.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Sere0015">
      <summary>
            It is an error to use the HTML output method when &gt; appears within a processing instruction in the data
            model instance being serialized.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Sere0020">
      <summary>
            It is an error if a numeric value being serialized using the JSON output method cannot be represented in
            the JSON grammar (e.g. <c>+INF</c>, <c>-INF</c>, <c>NaN</c>).
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Sere0021">
      <summary>
            It is an error if a sequence being serialized using the JSON output method includes items for which 
            no rules are provided in the appropriate section of the serialization rules.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Sere0022">
      <summary>
            It is an error if a map being serialized using the JSON output method has two keys with the same string 
            value, unless the <c>allow-duplicate-names</c> has the value <c>yes</c>.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Sere0023">
      <summary>
            It is an error if a sequence being serialized using the JSON output method is of length greater than one.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Sesu0007">
      <summary>
            It is an error if an output encoding other than UTF-8 or UTF-16 is requested and the serializer does not 
            support that encoding.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Sesu0011">
      <summary>
            It is an error if the value of the normalization-form parameter specifies a normalization form that 
            is not supported by the serializer.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Sesu0013">
      <summary>
            It is an error if the serializer does not support the version of XML or HTML specified by the version parameter.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xife0001">
      <summary>
            It is a fatal error for a fragment identifier to appear in the <c>href</c> attribute of an <c>xi:include</c> element.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xife0002">
      <summary>
            It is a fatal error for the value of the <c>parse</c> attribute of an <c>xi:include</c> element not to be "xml" or "text".
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xife0003">
      <summary>
            It is a fatal error for the value of the <c>accept</c> attribute of an <c>xi:include</c> element to
            contain characters outside the range #x20 through #x7E.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xife0004">
      <summary>
            It is a fatal error for the value of the <c>accept-language</c> attribute of an <c>xi:include</c> element to
            contain characters outside the range #x20 through #x7E.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xife0005">
      <summary>
            It is a fatal error for an <c>xi:include</c> element to contain more than one <c>xi:fallback</c> element.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xife0006">
      <summary>
            It is a fatal error for an <c>xi:include</c> element any element other than <c>xi:fallback</c> from the XInclude namespace.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xife0007">
      <summary>
            It is a fatal error when a resource error is encountered during processing of an <c>xi:include</c> element has no <c>xi:fallback</c> element.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xife0008">
      <summary>
            It is a fatal error for an <c>xi:fallback</c> element to appear in a document anywhere other than as the direct child of 
            the <x>xi:include</x> (before inclusion processing on the contents of the element).
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xife0009">
      <summary>
            It is a fatal error for the <c>xi:fallback</c> element to contain any elements from the XInclude namespace other 
            than <c>xi:include</c>.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xife0010">
      <summary>
            It is a fatal error to include resources that contain non-well-formed XML when <c>parse="xml"</c>.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xife0011">
      <summary>
            It is a fatal error for the inclusion target to be an attribute node or a namespace node.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xife0012">
      <summary>
            It is a fatal error to process another <c>xi:include</c> element with an include location and <c>xpointer</c> attribute value 
            that have already been processed in the inclusion chain.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xife0013">
      <summary>
            It is a fatal error for the byte sequence of a resource included when <c>parse="text"</c> to be outside the range allowed 
            by the encoding.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xife0014">
      <summary>
            It is a fatal error for a resource included when <c>parse="text"</c> to contain characters that are not permitted in XML 
            documents.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xife0015">
      <summary>
            It is a fatal error to attempt to replace an <c>xi:include</c> element appearing as the document (top-level) element in the source
            infoset with something other than a list of zero or more comments, zero or more processing instructions, and one element.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xife0016">
      <summary>
            It is a fatal error if the <c>xpointer</c> attribute of an <c>xi:include</c> element is present when <c>parse="text"</c>.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xife0017">
      <summary>
            It is a fatal error if the <c>xpointer</c> attribute of an <c>xi:include</c> element is absent when <c>parse="xml"</c>
            and the <c>href</c> attribute is absent.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xife0018">
      <summary>
            It is a fatal error if the <c>href</c> attribute of an <c>xi:include</c> element results in an include location
            which is a syntactically invalid URI.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xife0019">
      <summary>
            It is a fatal error if the <c>href</c> attribute of an <c>xi:include</c> element results in an include location
            which is a relative URI.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xife0020">
      <summary>
            It is a fatal error if the <c>xpointer</c> attribute of an <c>xi:include</c> element identifies no subresources.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xpdy0002">
      <summary>
            It is a dynamic error if evaluation of an expression relies on some part of the 
            dynamic context that has not been assigned a value.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xpdy0050">
      <summary>
            It is a dynamic error if the dynamic type of the operand of a treat expression 
            does not match the sequence type specified by the treat expression.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xpty0004">
      <summary>
            It is a type error if, during the static analysis phase, an expression is found 
            to have a static type that is not appropriate for the context in which the 
            expression occurs, or during the dynamic evaluation phase, the dynamic type of 
            a value does not match a required type as specified by the matching rules in 
            2.5.4 <c>SequenceType</c> Matching.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xpty0018">
      <summary>
            It is a type error if the result of the last step in a path expression contains both
            nodes and atomic values.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xpty0019">
      <summary>
            It is a type error if the result of a step (other than the last step) in a path expression contains an atomic value.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xpty0020">
      <summary>
            It is a type error if in an axis expression, the context item is not a node.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xpty0117">
      <summary>
            Attempt to cast to a namespace-sensitive type failed because the namespace bindings for the result can not be determined.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqdy0025">
      <summary>
            It is a dynamic error if any attribute of a constructed element does not have a name that is distinct 
            from the names of all other attributes of the constructed element.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqdy0026">
      <summary>
            It is a dynamic error if the result of the content expression of a computed 
            processing instruction constructor contains the string "?&gt;".
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqdy0027">
      <summary>
            In a validate expression, it is a dynamic error if the root element information item in the PSVI resulting from 
            validation does not have the expected validity property: valid if validation mode is strict, or either valid or 
            notKnown if validation mode is lax.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqdy0041">
      <summary>
            It is a dynamic error if the value of the name expression in a computed processing instruction constructor cannot be cast to the type xs:NCName.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqdy0044">
      <summary>
            It is a dynamic error if the node-name property of the node constructed by a computed attribute 
            constructor is in the namespace <c>http://www.w3.org/2000/xmlns/</c> (corresponding to namespace prefix xmlns), 
            or is in no namespace and has local name xmlns.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqdy0054">
      <summary>
              It is a dynamic error if a cycle is encountered in the definition of a module's dynamic context components, for example because of a 
            cycle in variable declarations.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqdy0061">
      <summary>
            It is a dynamic error if the operand of a validate expression is a document node whose children do not 
            consist of exactly one element node and zero or more comment and processing instruction nodes, 
            in any order.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqdy0064">
      <summary>
            It is a dynamic error if the value of the name expression in a computed processing instruction constructor 
            is equal to "XML" (in any combination of upper and lower case).
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqdy0072">
      <summary>
            It is a dynamic error if the result of the content expression of a computed 
            comment constructor contains two adjacent hyphens or ends with a hyphen.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqdy0074">
      <summary>
            It is a dynamic error if the name expression in a computed element or attribute constructor
            cannot be converted to an expanded <c>QName</c>.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqdy0084">
      <summary>
            It is a dynamic error if the element validated by a validate statement does not have a top-level element declaration in the in-scope element declarations, if validation mode is strict.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqdy0091">
      <summary>
            An implementation MAY raise a dynamic error if an <c>xml:id</c> error, as defined in [XML Identifier], is encountered during construction of an attribute named <c>xml:id</c>.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqdy0092">
      <summary>
            An implementation MAY raise a dynamic error if a constructed attribute named <c>xml:space</c> has a value other than preserve or default.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqdy0096">
      <summary>
            A dynamic error [err:XQDY0096] is raised if the node-name of the constructed element node has 
            any of the following properties:
            (a) Its namespace prefix is xmlns
            (b) Its namespace URI is <c>http://www.w3.org/2000/xmlns/</c>
            (c) Its namespace prefix is <c>xml</c> and its namespace URI is not <c>http://www.w3.org/XML/1998/namespace</c>
            (d) Its namespace prefix is other than <c>xml</c> and its namespace URI is <c>http://www.w3.org/XML/1998/namespace</c></summary>
      <remarks>
            Introduced in erratum <c>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4463</c></remarks>
    </member>
    <member name="F:XmlPrime.XdmException.Xqdy0101">
      <summary>
            It is a dynamic error if the the namespace URI in a computed namespace constructor is bound to the predefined 
            prefix xmlns, or if a namespace URI other than http://www.w3.org/XML/1998/namespace is bound to the prefix xml,
             or if the prefix xml is bound to a namespace URI other than http://www.w3.org/XML/1998/namespace.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqdy0102">
      <summary>
            In an element constructor, if two or more namespace bindings in the in-scope bindings would have the same
            prefix, then an error is raised if they have different URIs; if they would have the same prefix and URI,
            duplicate bindings are ignored.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqdy0130">
      <summary>
            The URIExpr of a computed namespace constructor is not a valid instance of xs:anyURI.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqdy0137">
      <summary>
            No two keys in a map may have the same key value.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0009">
      <summary>
                An implementation that does not support the Schema Import Feature must raise a static error if a
                Prolog contains a schema import.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0012">
      <summary>
                It is a static error if the set of definitions contained in all schemas imported by a Prolog do not
                satisfy the conditions for schema validity specified in Sections 3 and 5 of [XML Schema] Part 1.
                Each definition must be valid, complete, and unique.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0013">
      <summary>
                It is a static error if an implementation recognizes a pragma but determines that its content is invalid.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0016">
      <summary>
                An implementation that does not support the Module Feature raises a static error if it
                encounters a module declaration or a module import.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0022">
      <summary>
                It is a static error if the value of a namespace declaration attribute is not a URILiteral.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0031">
      <summary>
                It is a static error if the version number specified in a version declaration is not supported by the implementation.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0032">
      <summary>
                A static error is raised if a Prolog contains more than one base URI declaration.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0033">
      <summary>
                It is a static error if a Prolog contains multiple declarations for the same namespace prefix.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0034">
      <summary>
                It is a static error if multiple functions declared or imported by a module have the same number of arguments
                and their expanded QNames are equal (as defined by the <c>eq</c> operator).
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0035">
      <summary>
                It is a static error to import two schema components that both define the same name in the same symbol
                space and in the same scope.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0036">
      <summary>
                It is a static error to import a module if the importing module's in-scope schema types do not include
                definitions for the schema type names that appear in the declarations of variables and functions
                (whether in an argument type or return type) that are present in the imported module and are referenced
                in the importing module.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0038">
      <summary>
                It is a static error if a Prolog contains more than one default collation declaration, or the value
                specified by a default collation declaration is not present in statically known collations.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0039">
      <summary>
                It is a static error for a function declaration to have more than one parameter with the same name.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0040">
      <summary>
                It is a static error if the attributes specified by a direct element constructor do not have distinct
                expanded QNames.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0045">
      <summary>
                It is a static error if the name of an annotation or the function name in a function declaration is in one of the following namespaces:
                <c>http://www.w3.org/XML/1998/namespace</c>,
                <c>http://www.w3.org/2001/XMLSchema</c>,
                <c>http://www.w3.org/2001/XMLSchema-instance</c>,
                <c>http://www.w3.org/2005/xpath-functions</c>,
                <c>http://www.w3.org/2005/xpath-functions/math</c>.
                <c>http://www.w3.org/2011/xquery-options</c>.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0046">
      <summary>
                An implementation MAY raise a static error if the value of a URILiteral is of non-zero length and is not
                in the lexical space of xs:anyURI, or if it is a string that represents a "relative reference" as defined
                in [RFC3986].
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0047">
      <summary>
                It is a static error if multiple module imports in the same Prolog specify the same target namespace.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0048">
      <summary>
                It is a static error if a function or variable declared in a library module is not in the target namespace of the library module.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0049">
      <summary>
                It is a static error if two or more variables declared or imported by a module have equal expanded QNames (as defined by the <c>eq</c> operator.)
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0052">
      <summary>
                The type must be the name of a type defined in the in-scope schema types, and the {variety} of the type must be simple.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0054">
      <summary>
                It is a static error if a variable depends on itself.
            </summary>
      <remarks>
                This error code was replaced by <see cref="F:XmlPrime.XdmException.Xqdy0054"/> in XQuery 3.0.
            </remarks>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0055">
      <summary>
                It is a static error if a schema import binds a namespace prefix but does not specify a target namespace
                other than a zero-length string.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0057">
      <summary>
                It is a static error if a schema import binds a namespace prefix but does not specify a target namespace
                other than a zero-length string.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0058">
      <summary>
                It is a static error if multiple schema imports specify the same target namespace.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0059">
      <summary>
                It is a static error if an implementation is unable to process a schema or module import by finding a
                schema or module with the specified target namespace.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0060">
      <summary>
                It is a static error if the name of a function in a function declaration is not in a namespace
                (expanded <c>QName</c> has a null namespace URI).
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0065">
      <summary>
                A static error is raised if a Prolog contains more than one ordering mode declaration.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0066">
      <summary>
                A static error is raised if a Prolog contains more than one default element/type namespace declaration,
                or more than one default function namespace declaration.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0067">
      <summary>
                A static error is raised if a Prolog contains more than one construction declaration.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0068">
      <summary>
                A static error is raised if a Prolog contains more than one boundary-space declaration.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0069">
      <summary>
                A static error is raised if a Prolog contains more than one empty order declaration.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0070">
      <summary>
                A static error is raised if the predefined namespace prefix <c>xml</c> or <c>xmlns</c> is redeclared or if another
                namespace prefix is bound to the namespace URI associated with the prefix <c>xml</c>.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0071">
      <summary>
                A static error is raised if the namespace declaration attributes of a direct element constructor do
                not have distinct names.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0075">
      <summary>
                An implementation that does not support the Validation Feature must raise a static error if it encounters a validate expression.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0076">
      <summary>
                A static error if a collation sub-clause in an order by clause of a FLWOR expression does not
                identify a collation that is present in statically known collations.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0079">
      <summary>
                It is a static error if an extension expression contains neither a pragma that is recognized by
                the implementation nor an expression enclosed in curly braces.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0085">
      <summary>
                Zero-length namespace declaration.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0087">
      <summary>
                It is a static error if the encoding specified in a Version Declaration does not conform to the definition of EncName specified in [XML 1.0].
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0088">
      <summary>
                It is a static error if the literal that specifies the target namespace in a module import or a module declaration is of zero length.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0089">
      <summary>
                It is a static error if a variable bound in a for clause of a FLWOR expression, and its associated
                positional variable, do not have distinct names (expanded QNames).
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0090">
      <summary>
                It is a static error if a character reference does not identify a valid character in the version of XML that is in use.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0093">
      <summary>
                It is a static error to import a module M1 if there exists a sequence of modules M1 ... Mi ... M1 such that each module directly
                depends on the next module in the sequence (informally, if M1 depends on itself through some chain of module dependencies.)
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0094">
      <summary>
                The name of each grouping variable must be equal (by the eq operator on expanded QNames) to the name of a variable in the input tuple stream.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0097">
      <summary>
                It is a static error for a decimal-format to specify a value that is not valid for a given property, as described in statically known decimal formats.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0098">
      <summary>
                It is a static error if, for any named or unnamed decimal format, the properties representing characters used in a picture string
                do not each have distinct values. These properties are decimal-separator-sign, grouping-separator, percent-sign, per-mille-sign,
                zero-digit, digit-sign, and pattern-separator-sign.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0099">
      <summary>
                No module may contain more than one context item declaration.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0103">
      <summary>
                All variables in a window clause must have distinct names..
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0104">
      <summary>
                A TypeName that is specified in a validate expression must be found in the in-scope schema definitions.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0106">
      <summary>
                It is a static error if a function declaration contains both a %private and a %public annotation.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0108">
      <summary>
                It is a static error if an output declaration occurs in a library module.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0109">
      <summary>
                It is a static error if the local name of an output declaration in the http://www.w3.org/2010/xslt-xquery-serialization namespace is not one of the serialization parameter names listed in C.1 Static Context Components.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0110">
      <summary>
                It is a static error if the same serialization parameter is used more than once in an output declaration.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0111">
      <summary>
                It is a static error for a query prolog to contain two decimal formats with the same name, or to contain two default decimal formats.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0113">
      <summary>
                Specifying a value for a context item declaration in a library module is a static error.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0114">
      <summary>
                It is a static error for a decimal format declaration to define the same property more than once.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0116">
      <summary>
                It is a static error if a variable declaration contains both a %private and a %public annotation.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0118">
      <summary>
                In a direct element constructor, the name used in the end tag must exactly match the name used in the corresponding start tag, including its prefix or absence of a prefix.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0119">
      <summary>
                It is a static error if the implementation is not able to process the value of an output:parameter-document declaration to produce an XDM instance.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0120">
      <summary>
                It is a static error if a feature required by require-feature is not supported by the implementation.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0122">
      <summary>
                It is a static error if the name of a feature in require-feature or prohibit-feature is not in the lexical space of QName.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0123">
      <summary>
                It is a static error if the name of a feature in require-feature is not recognized by the implementation.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0125">
      <summary>
                It is a static error if an inline function expression is annotated as %public or %private.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0126">
      <summary>
                It is a static error if all-extensions appears in a require-feature option declaration.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0127">
      <summary>
                It is a static error if a given feature is both required and prohibited, directly or indirectly, in a module.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0128">
      <summary>
                It is a static error if a feature name that an implementation supports appears in a prohibit-feature option declaration, and the implementation is unable to disable the feature.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0129">
      <summary>
                An implementation that does not provide the Higher-Order Function Feature MUST raise a static error if it encounters a function test,
                dynamic function call, named function reference, inline function expression, or partial function application.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0131">
      <summary>
                A feature prohibited by <c>prohibit-feature</c> is used in this module.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0132">
      <summary>
                The module feature can only be required or prohibited in a main module, not in a library module.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqst0134">
      <summary>
                XQuery 3.0 does not support the namespace axis.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqty0024">
      <summary>
            It is a type error if the content sequence in an element constructor contains an
            attribute node following a node that is not an attribute node.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqty0030">
      <summary>
            It is a type error if the argument of a validate expression does not evaluate to exactly one document or 
            element node.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqty0086">
      <summary>
            It is a type error if the typed value of a copied element or attribute node is namespace-sensitive when
            construction mode is preserve and copy-namespaces mode is no-preserve, or the typed value of a copied attribute
            node is namespace-sensitive when the parent of the copied node is not copied and construction mode is preserve.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xqty0105">
      <summary>
             It is a type error if the content sequence in an element constructor contains a function item.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0030">
      <summary>
            It is a non-recoverable dynamic error if the effective value  of an attribute written using curly brackets, 
            in a position where an attribute value template is permitted, is a value that is not one of the permitted values
             for that attribute. If the processor is able to detect the error statically (for example, when any XPath expressions
             within the curly brackets can be evaluated statically), then the processor may optionally signal this as a static error.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0040">
      <summary>
            It is a non-recoverable dynamic error if the invocation of the stylesheet specifies a template name that does not 
            match the expanded-QName of a named template defined in the stylesheet.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0045">
      <summary>
            It is a non-recoverable dynamic error if the invocation of the stylesheet specifies an initial mode (other than the default
             mode) that does not match the expanded-QName  in the mode attribute of any template defined in the stylesheet.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0047">
      <summary>
            It is a non-recoverable dynamic error if the invocation of the stylesheet specifies both an initial mode and an initial
            template.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0050">
      <summary>
            It is a non-recoverable dynamic error if the stylesheet that is invoked declares a visible stylesheet parameter 
            with required="yes" and no value for this parameter is supplied during the invocation of the stylesheet. A stylesheet 
            parameter is visible if it is not masked by another global variable or parameter with the same name and higher import 
            precedence.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0060">
      <summary>
            It is a non-recoverable dynamic error if the initial template  defines a template parameter that specifies 
            required="yes".
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0290">
      <summary>
            Where the result of evaluating an XPath expression (or an attribute value template) is required to be a
            lexical QName, then unless otherwise specified it is a non-recoverable dynamic error if the defining element
            has no namespace node whose name matches the prefix of the lexical QName. This error may be signaled as a
            static error if the value of the expression can be determined statically.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0410">
      <summary>
            It is a non-recoverable dynamic error if the result sequence used to construct the content of an element node contains 
            a namespace node or attribute node that is preceded in the sequence by a node that is neither a namespace node nor an 
            attribute node.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0420">
      <summary>
            It is a non-recoverable dynamic error if the result sequence used to construct the content of a document node contains 
            a namespace node or attribute node.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0430">
      <summary>
            It is a non-recoverable dynamic error if the result sequence contains two or more namespace nodes having the same name 
            but different string values (that is, namespace nodes that map the same prefix to different namespace URIs).
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0440">
      <summary>
            It is a non-recoverable dynamic error if the result sequence contains a namespace node with no name and the element
            node being constructed has a null namespace URI (that is, it is an error to define a default namespace when the 
            element is in no namespace).
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0450">
      <summary>
            It is a non-recoverable dynamic error if the result sequence contains a function item.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0560">
      <summary>
            It is a non-recoverable dynamic error if xsl:apply-imports  or xsl:next-match  is evaluated when the current template rule  is null.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0610">
      <summary>
            If an optional parameter has no select  attribute and has an empty sequence constructor, and if 
             there is an as attribute, then the default value of the parameter is an empty sequence. If the 
             empty sequence is not a valid instance of the required type defined in the as attribute, then 
             the parameter is treated as a required parameter, which means that it is a non-recoverable 
             dynamic error if the caller supplies no value for the parameter.
             </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0640">
      <summary>
            In general, a circularity in a stylesheet is a non-recoverable dynamic error.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0700">
      <summary>
            Tt is a non-recoverable dynamic error if the template that is invoked declares a template parameter with required="yes" 
            and no value for this parameter is supplied by the calling instruction.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0820">
      <summary>
            It is a non-recoverable dynamic error if the effective value  of the name attribute [of the xsl:element instruction] 
            is not a lexical QName.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0830">
      <summary>
            In the case of an xsl:element  instruction with no namespace attribute, it is a non-recoverable dynamic error if 
            the effective value  of the name attribute is a QName whose prefix is not declared in an in-scope namespace declaration 
            for the xsl:element instruction.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0835">
      <summary>
            It is a non-recoverable dynamic error if the effective value  of the namespace attribute [of the xsl:element 
            instruction] is not in the lexical space of the xs:anyURI data type.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0840">
      <summary>
            It is a static error if the select attribute of the xsl:attribute element is present unless the element has empty content.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0850">
      <summary>
            It is a non-recoverable dynamic error if the effective value of the name attribute [of an xsl:attribute instruction] 
            is not a lexical QName.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0855">
      <summary>
            In the case of an xsl:attribute  instruction with no namespace attribute, it is a non-recoverable dynamic error if 
            the effective value  of the name attribute is the string xmlns.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0860">
      <summary>
            In the case of an xsl:attribute  instruction with no namespace attribute, it is a non-recoverable dynamic error if the 
            effective value  of the name attribute is a lexical QName whose prefix is not declared in an in-scope namespace
             declaration for the xsl:attribute  instruction.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0865">
      <summary>
            It is a non-recoverable dynamic error if the effective value of the namespace attribute [of the xsl:attribute 
            instruction] is not in the lexical space of the xs:anyURI data type.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0890">
      <summary>
            It is a non-recoverable dynamic error if the effective value  of the name attribute [of the xsl:processing-instruction
             instruction] is not both an NCName  Names and a PITarget  XML.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0905">
      <summary>
            It is a non-recoverable dynamic error if the string value of the new namespace node [created using xsl:namespace] 
            is not valid in the lexical space of the data type xs:anyURI. [see ERR XTDE0835]
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0920">
      <summary>
            It is a non-recoverable dynamic error if the effective value  of the name attribute [of the xsl:namespace  instruction]
            is neither a zero-length string nor an NCName  Names, or if it is xmlns.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0925">
      <summary>
            It is a non-recoverable dynamic error if the xsl:namespace  instruction generates a namespace node whose name is
             xml and whose string value is not http://www.w3.org/XML/1998/namespace, or a namespace node whose string value is
             http://www.w3.org/XML/1998/namespace and whose name is not xml.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0930">
      <summary>
            It is a non-recoverable dynamic error if evaluating the select  attribute or the contained sequence constructor of an
            xsl:namespace  instruction results in a zero-length string.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde0980">
      <summary>
            It is a non-recoverable dynamic error if any undiscarded item in the atomized sequence supplied as the value of 
            the value attribute of xsl:number cannot be converted to an integer, or if the resulting integer is less than 0 
            (zero).
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1030">
      <summary>
            It is a non-recoverable dynamic error if, for any sort key component, the set of sort key values  evaluated for 
            all the items in the initial sequence, after any type conversion requested, contains a pair of ordinary values
             for which the result of the XPath lt  operator is an error.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1035">
      <summary>
            It is a non-recoverable dynamic error if the collation attribute of xsl:sort (after resolving against the base URI) is not a URI that is recognized by the implementation as referring to a collation.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1061">
      <summary>
            It is a dynamic error if the current-group function is used when the current group is absent, 
            or when it is invoked in the course of evaluating a pattern. The error may be reported statically if it can be detected statically.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1071">
      <summary>
            It is a dynamic error if the current-grouping-key function is used when the current grouping key is absent. The error may be reported statically if it can be detected statically.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1110">
      <summary>
            It is a non-recoverable dynamic error if the collation URI specified to xsl:for-each-group  (after resolving against the base URI) is a collation that is not recognized by the implementation.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1140">
      <summary>
            It is a non-recoverable dynamic error if the effective value  of the regex attribute does not conform 
            to the required syntax for regular expressions, as specified in [Functions and Operators]. If the 
            regular expression is known statically (for example, if the attribute does not contain any expressions
             enclosed in curly brackets) then the processor may  signal the error as a static error.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1145">
      <summary>
            It is a non-recoverable dynamic error if the effective value  of the flags attribute [of the xsl:analyze-string 
            instruction] has a value other than the values defined in [Functions and Operators]. If the value of the attribute is
            known statically (for example, if the attribute does not contain any expressions  enclosed in curly brackets) then the
            processor may signal the error as a static error.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1150">
      <summary>
            It is a non-recoverable dynamic error if the effective value  of the regex attribute [of the xsl:analyze-string 
            instruction] is a regular expression that matches a zero-length string: or more specifically, if the regular expression 
            $r and flags $f are such that matches("", $r, $f) returns true. If the regular expression is known statically (for 
            example, if the attribute does not contain any expressions  enclosed in curly brackets) then the processor may signal 
            the error as a static error.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1170">
      <summary>
            fn:unparsed-test called with uri containing a fragment identifier, or if it cannot be used to retrieve a resource containing a text.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1190">
      <summary>
            fn:unparsed-test called with unsupported encoding.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1200">
      <summary>
            fn:unparsed-test called with uri which cannot be decoded.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1260">
      <summary>
            It is a non-recoverable dynamic error if the value is not a valid QName,
            or if there is no namespace declaration in scope for the prefix of the QName,
            or if the name obtained by expanding the QName is not the same as the expanded name of any xsl:key declaration in the stylesheet.
            If the processor is able to detect the error statically (for example, when the argument is supplied as a string literal),
            then the processor may optionally signal this as a static error.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1270">
      <summary>
            It is a non-recoverable dynamic error to call the key function with two arguments if there is no 
            context node, or if the root of the tree containing the context node is not a document node; or to call 
            the function with three arguments if the root of the tree containing the node supplied in the third 
            argument is not a document node.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1280">
      <summary>
            It is a non-recoverable dynamic error if the name specified as the $decimal-format-name argument 
            [ to the format-number  function] is not a valid QName, or if its prefix has not been declared in an 
            in-scope namespace declaration, or if the stylesheet does not contain a declaration of a decimal-format 
            with a matching expanded-QName. If the processor is able to detect the error statically (for example, when 
            the argument is supplied as a string literal), then the processor may optionally signal this as a static 
            error.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1310">
      <summary>
            The picture string  [supplied to the format-number  function] must conform to the following rules. 
            [ See full specification.] It is a non-recoverable dynamic error if the picture string does not satisfy these rules.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1340">
      <summary>
            It is a non-recoverable dynamic error if the syntax of the picture is incorrect.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1350">
      <summary>
            It is a non-recoverable dynamic error if a component specifier within the picture refers to components that are not available in the given type of $value,
            for example if the picture supplied to the format-time  refers to the year, month, or day component.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1360">
      <summary>
            If the current  function is evaluated within an expression that is evaluated when the context item is 
            undefined, a non-recoverable dynamic error occurs.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1370">
      <summary>
            It is a non-recoverable dynamic error if the unparsed-entity-uri  function is called when there is no 
            context node, or when the root of the tree containing the context node is not a document node.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1380">
      <summary>
            It is a non-recoverable dynamic error if the unparsed-entity-public-id  function is called when there 
            is no context node, or when the root of the tree containing the context node is not a document node.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1390">
      <summary>
            It is a non-recoverable dynamic error if the value is not a valid QName,
            or if there is no namespace declaration in scope for the prefix of the QName.
            If the processor is able to detect the error statically (for example, when the argument is supplied as a string literal),
            then the processor may optionally signal this as a static error.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1400">
      <summary>
            It is a non-recoverable dynamic error if the argument does not evaluate to a string that is a valid QName,
            or if there is no namespace declaration in scope for the prefix of the QName.
            If the processor is able to detect the error statically (for example, when the argument is supplied as a string literal),
            then the processor may optionally signal this as a static error.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1425">
      <summary>
            When backwards compatible behaviour is enabled, it is a non-recoverable dynamic error to evaluate an extension 
            function call if no implementation of the extension function is available.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1428">
      <summary>
            It is a non-recoverable dynamic error if the argument [passed to the type-available function] does not
            evaluate to a string that is a valid QName, or if there is no namespace declaration in scope for the prefix
            of the QName. If the processor is able to detect the error statically (for example, when the argument is
            supplied as a string literal), then the processor may optionally signal this as a static error.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1440">
      <summary>
            It is a non-recoverable dynamic error if the argument does not evaluate to a string that is a valid QName, or if there is no 
            namespace declaration in scope for the prefix of the QName. If the processor is able to detect the error statically (for 
            example, when the argument is supplied as a string literal), then the processor may optionally signal this as a static 
            error.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1450">
      <summary>
            When a processor performs fallback for an extension instruction  that is not recognized, if the instruction element has one
            or more xsl:fallback  children, then the content of each of the xsl:fallback  children must be evaluated; it is a 
            non-recoverable dynamic error if it has no xsl:fallback  children.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1460">
      <summary>
            It is a non-recoverable dynamic error if the effective value  of the format attribute is not a valid lexical QName, or if 
            it does not match the expanded-QName  of an output definition in the stylesheet. If the processor is able to detect the 
            error statically (for example, when the format attribute contains no curly brackets), then the processor may optionally 
            signal this as a static error.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1480">
      <summary>
            It is a non-recoverable dynamic error to evaluate the xsl:result-document instruction in temporary output state.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1490">
      <summary>
            It is a non-recoverable dynamic error for a transformation to generate two or more final result trees with the same URI.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde1665">
      <summary>
            A basic XSLT processor  must raise a non-recoverable dynamic error if the input to the processor includes a node with a 
            type annotation other than xs:untyped or xs:untypedAtomic, or an atomic value of a type other than those which a basic
            XSLT processor supports. This error will not arise if the input-type-annotations attribute is set to strip.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtde3160">
      <summary>
            It is a non-recoverable dynamic error if the target expression is not a valid XPath 3.0 expression (that is, if a static error occurs when analyzing 
             the string according to the rules of the XPath 3.0 specification).
             </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtmm9000">
      <summary>
            When a transformation is terminated by use of xsl:message terminate="yes", the effect is the same as when a non-recoverable 
            dynamic error occurs during the transformation.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtmm9001">
      <summary>
            When the xsl:assert condition fails and assertions are set to true. The effect is the same as when anon-recoverable
            dynamic error occurs during the transformation.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtre0540">
      <summary>
            It is a recoverable dynamic error if the conflict resolution algorithm for template rules leaves more than one matching 
            template rule. The optional recovery action is to select, from the matching template rules that are left, the one that 
            occurs last in declaration order.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtre1500">
      <summary>
            It is a recoverable dynamic error for a stylesheet to write to an external resource and read from the same 
            resource during a single transformation, whether or not the same URI is used to access the resource in both 
            cases. The optional recovery action is implementation-dependent: implementations are not required to detect 
            the error condition. Note that if the error is not detected, it is undefined whether the document that is 
            read from the resource reflects its state before or after the result tree is written.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtre1160">
      <summary>
            When a URI reference contains a fragment identifier, it is a recoverable dynamic error if the media type is
            not one that is recognized by the processor, or if the fragment identifier does not conform to the rules
            for fragment identifiers for that media type, or if the fragment identifier selects something other than a
            sequence of nodes (for example, if it selects a range of characters within a text node). The optional
            recovery action is to ignore the fragment identifier and return the document node. The set of media types
            recognized by a processor is implementation-defined.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0010">
      <summary>
            A static error is signalled if an XSLT-defined element is used in a context where it 
            is not permitted, if a required attribute is omitted, or if the content of the element 
            does not correspond to the content that is allowed for the element.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0020">
      <summary>
            It is a static error if an attribute (other than an attribute written using curly brackets 
            in a position where an attribute value template is permitted) contains a value that is not 
            one of the permitted values for that attribute.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0080">
      <summary>
            It is a static error to use a reserved namespace in the name of a named template, a mode, an attribute set, a key, a 
            decimal-format, a variable  or parameter, a stylesheet function, a named output definition, or a character map.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0090">
      <summary>
            It is a static error for an element from the XSLT namespace to have an attribute whose namespace is unprefixed
            or the XSLT namespace, other than attributes defined for the element 
            in this document.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0110">
      <summary>
            The value of the version attribute must be a number: specifically, it must be a a valid 
            instance of the type xs:decimal as defined in [XML Schema Part 2].
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0120">
      <summary>
            An xsl:stylesheet element must not have any text node children.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0125">
      <summary>
            It is a static error if the value of an [xsl:]default-collation attribute, after resolving against the base URI, contains no URI that the
             implementation recognizes as a collation URI.
             </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0130">
      <summary>
            It is a static error if the xsl:stylesheet element has a child element whose name has a null
            namespace URI.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0150">
      <summary>
            A literal result element that is used as the outermost element of a simplified stylesheet module must have an 
            xsl:version  attribute.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0165">
      <summary>
            It is a static error if the processor is not able to retrieve the resource identified by the 
            URI reference [ in the href attribute of xsl:include or xsl:import] , or if the resource that 
            is retrieved does not contain a stylesheet module conforming to this specification.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0170">
      <summary>
            An xsl:include  element must be a top-level  element.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0180">
      <summary>
            It is a static error if a stylesheet module directly or indirectly includes itself.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0190">
      <summary>
            An xsl:import element must be a top-level  element.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0200">
      <summary>
            The xsl:import element children must precede all other element children of an xsl:stylesheet 
            element, including any xsl:include  element children and any user-defined data elements.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0210">
      <summary>
            It is a static error if a stylesheet module directly or indirectly imports itself.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0215">
      <summary>
            It is a static error if an xsl:import-schema  element that contains an xs:schema element has a schema-location attribute, or if it
            has a namespace attribute that conflicts with the target namespace of the contained schema.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0220">
      <summary>
            It is a static error if the synthetic schema document does not satisfy the constraints described in [XML Schema Part 1] 
            (section 5.1, Errors in Schema Construction and Structure). This includes, without loss of generality, conflicts such as multiple 
            definitions of the same name.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0260">
      <summary>
            Within an XSLT element that is required to be empty, any content other than comments or processing instructions, 
            including any whitespace text node preserved using the xml:space="preserve" attribute, is a static error.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0265">
      <summary>
            It is a static error if there is a stylesheet module in the stylesheet that specifies input-type-annotations="strip" 
            and another stylesheet module that specifies input-type-annotations="preserve".
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0280">
      <summary>
            In the case of a prefixed QName used as the value of an attribute in the stylesheet, or appearing within an XPath expression in the stylesheet, it is a static error if the defining element has no namespace node whose name matches the prefix of the QName.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0340">
      <summary>
            Where an attribute is defined to contain a pattern, it is a static error  if the pattern does not match the production Pattern.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0350">
      <summary>
            It is a static error if an unescaped left curly bracket appears in a fixed part of an attribute value template without 
            a matching right curly bracket.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0370">
      <summary>
            It is a static error if an unescaped right curly bracket occurs in a fixed part of an attribute value template.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0500">
      <summary>
            An xsl:template element must have either a match attribute or a name attribute, or both. An xsl:template element that has no match attribute must have no mode attribute and no priority attribute.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0530">
      <summary>
            The value of this attribute [the priority  attribute of the xsl:template  element] must conform to the rules for the 
            xs:decimal type defined in [XML Schema Part 2]. Negative values are permitted..
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0550">
      <summary>
            It is a static error if the list [of modes in the mode attribute of xsl:template] is empty, if the same token is included 
            more than once in the list, if the list contains an invalid token, or if the token #all appears together with any other value.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0580">
      <summary>
            It is a static error if two parameters of a template or of a stylesheet function have the same name.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0620">
      <summary>
            It is a static error if a variable-binding element has a select attribute and has non-empty content.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0630">
      <summary>
            It is a static error if a stylesheet contains more than one binding of a global variable with the same name and same import precedence, unless it also contains another binding with the same name and higher import precedence.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0650">
      <summary>
            It is a static error if a stylesheet  contains an xsl:call-template  instruction whose name 
            attribute does not match the name  attribute of any xsl:template  in the stylesheet.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0660">
      <summary>
            It is a static error if a stylesheet contains more than one template with the same name and the same import precedence, unless it also contains a template with the same name and higher import precedence.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0670">
      <summary>
            It is a static error  if a single xsl:call-template, xsl:apply-templates, xsl:apply-imports, or xsl:next-match  element contains two or more xsl:with-param  elements with matching name  attributes.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0680">
      <summary>
            In the case of xsl:call-template, it is a static error to pass a non-tunnel parameter named x to a template that 
            does not have a template parameter named x, unless backwards compatible behavior is enabled for the xsl:call-template 
            instruction.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0690">
      <summary>
            It is a static error if a template that is invoked using xsl:call-template  declares a template parameter 
             specifying required="yes" and not specifying tunnel="yes", if no value for this parameter is supplied by the calling 
             instruction.
             </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0710">
      <summary>
            It is a static error if the value of the use-attribute-sets attribute of an xsl:copy, 
            xsl:element, or xsl:attribute-set  element, or the xsl:use-attribute-sets attribute of a 
            literal result element, is not a whitespace-separated sequence of QNames, or if it contains a
            QName that does not match the name attribute of any xsl:attribute-set  declaration in the 
            stylesheet.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0720">
      <summary>
            It is a static error if an xsl:attribute-set element directly or indirectly references itself via the names contained in the use-attribute-sets  attribute.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0740">
      <summary>
            A stylesheet function  must have a prefixed name, to remove any risk of a clash with a function in the default function
            namespace. It is a static error if the name has no prefix.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0760">
      <summary>
            Because arguments to a stylesheet function call must  all be specified, the xsl:param elements 
            within an xsl:function  element must not specify a default value: this means they must be empty, 
            and must not have a select attribute.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0770">
      <summary>
            It is a static error for a stylesheet to contain two or more functions with the same expanded-QName, the same arity, and
            the same import precedence, unless there is another function with the same expanded-QName  and arity, and a higher import precedence.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0805">
      <summary>
            It is a static error if an attribute on a literal result element is in the XSLT namespace, unless it is one of the attributes explicitly defined in this specification.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0808">
      <summary>
            It is a static error if a namespace prefix is used within the [xsl:]exclude-result-prefixes attribute
            and there is no namespace binding in scope for that prefix.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0809">
      <summary>
            It is a static error if the value #default is used within the [xsl:]exclude-result-prefixes attribute 
            and the parent element of the [xsl:]exclude-result-prefixes  attribute has no default namespace.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0810">
      <summary>
            It is a static error if there is more than one such declaration [more than one 
            xsl:namespace-alias  declaration] with the same literal namespace URI and the same import 
            precedence and different values for the target namespace URI, unless there is also an 
            xsl:namespace-alias  declaration with the same literal namespace URI and a higher import 
            precedence.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0812">
      <summary>
            It is a static error  if a value other than #default is specified for either the stylesheet-prefix or the result-prefix attributes of the xsl:namespace-alias
            element when there is no in-scope binding for that namespace prefix.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0840">
      <summary>
            It is a static error if the select attribute of the xsl:attribute  element is present unless the element has empty 
            content.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0870">
      <summary>
            It is a static error if the select attribute of the xsl:value-of element is present when the content of the element is non-empty, or if the select attribute is absent when the content is empty.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0880">
      <summary>
            It is a static error if the select attribute of the xsl:processing-instruction element is present unless the element has empty content.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0910">
      <summary>
            It is a static error if the select attribute of the xsl:namespace element is present when the element has content other than one or more xsl:fallback instructions, or if the select attribute is absent when the element has empty content.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0940">
      <summary>
            It is a static error if the select attribute of the xsl:comment element is present unless the element has empty content.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse0975">
      <summary>
            It is a static error if the value attribute of xsl:number is present unless the select, level, count, and from attributes are all absent.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1015">
      <summary>
            It is a static error if an xsl:sort element with a select attribute has non-empty content.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1017">
      <summary>
            It is a static error if an xsl:sort  element other than the first in a sequence of sibling xsl:sort  elements has a 
            stable attribute.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1040">
      <summary>
            It is a static error if an xsl:perform-sort  instruction with a select attribute has any content other than xsl:sort 
            and xsl:fallback  instructions.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1060">
      <summary>
            It is a static error if the current-group  function is used within a pattern.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1070">
      <summary>
            It is a static error if the current-grouping-key  function is used within a pattern.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1080">
      <summary>
            These four attributes [the group-by, group-adjacent, group-starting-with, and group-ending-with attributes of 
            xsl:for-each-group ] are mutually exclusive: it is a static error if none of these four attributes is present, or if 
            more than one of them is present.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1090">
      <summary>
            It is an error to specify the collation attribute if neither the group-by attribute nor group-adjacent attribute is
             specified.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1130">
      <summary>
            It is a static error if the xsl:analyze-string  instruction contains neither an xsl:matching-substring nor an 
            xsl:non-matching-substring  element.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1205">
      <summary>
            It is a static error if an xsl:key declaration has a use attribute and has non-empty content, or if it has empty content and no use attribute.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1210">
      <summary>
            It is a static error if the xsl:key  declaration has a collation attribute whose value (after resolving against the 
            base URI) is not a URI recognized by the implementation as referring to a collation.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1220">
      <summary>
            It is a static error if there are several xsl:key  declarations in the stylesheet with the same key name and different
             effective collations. Two collations are the same if their URIs are equal under the rules for comparing xs:anyURI 
            values, or if the implementation can determine that they are different URIs referring to the same collation.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1290">
      <summary>
            It is a static error if a named or unnamed decimal format  contains two conflicting values for the same attribute in
            different xsl:decimal-format  declarations having the same import precedence, unless there is another definition of the 
            same attribute with higher import precedence.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1295">
      <summary>
            It is a static error if the character specified in the zero-digit attribute is not a digit or is a digit that does 
            not have the numeric value zero.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1300">
      <summary>
            It is a static error  if, for any named or unnamed decimal format, the variables representing characters used in a
            picture string do not each have distinct values. These variables are decimal-separator-sign, grouping-sign, percent-sign,
            per-mille-sign, digit-zero-sign, digit-sign, and pattern-separator-sign.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1430">
      <summary>
            It is a static error if there is no namespace bound to the prefix on the element bearing the 
            [xsl:]extension-element-prefixes attribute or, when #default is specified, if there is no 
            default namespace.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1505">
      <summary>
            It is a static error if both the [xsl:]type and [xsl:]validation attributes are present on the 
            xsl:element, xsl:attribute, xsl:copy, xsl:copy-of, xsl:document, or xsl:result-document 
            instructions, or on a literal result element.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1520">
      <summary>
            It is a static error if the value of the type attribute of an xsl:element, xsl:attribute, xsl:copy, xsl:copy-of, 
            xsl:document,  or xsl:result-document  instruction, or the xsl:type attribute of a literal result element, is not 
            a valid QName, or if it uses a prefix that is not defined in an in-scope namespace declaration, or if the QName is 
            not the name of a type definition included in the in-scope schema components for the stylesheet.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1530">
      <summary>
            [ERR XTSE1530] It is a static error if the value of the type attribute of an xsl:attribute instruction refers to a complex type definition.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1560">
      <summary>
            It is a static error if two xsl:output  declarations within an output definition specify 
            explicit values for the same attribute (other than cdata-section-elements and 
            use-character-maps), with the values of the attributes being not equal, unless there is another 
            xsl:output  declaration within the same output definition that has higher import precedence and 
            that specifies an explicit value for the same attribute.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1570">
      <summary>
            The value [of the method attribute on xsl:output  ] must (if present)  be a valid QName. If the QName does not have a
            prefix, then it identifies a method specified in [XSLT and XQuery Serialization] and must be one of xml, html, xhtml,
            or text.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1580">
      <summary>
            It is a static error if the stylesheet  contains two or more character maps with the same name and the same import 
            precedence, unless it also contains another character map with the same name and higher import precedence.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1590">
      <summary>
            It is a static error if a name in the use-character-maps attribute of the xsl:output 
            or xsl:character-map  elements does not match the name attribute of any xsl:character-map 
            in the stylesheet.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1600">
      <summary>
            It is a static error if a character map references itself, directly or indirectly, via a name in the
             use-character-maps attribute.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1650">
      <summary>
            A basic XSLT processor must signal a static error if the stylesheet includes an xsl:import-schema declaration.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtse1660">
      <summary>
            A basic XSLT processor  must signal a static error if the stylesheet includes an [xsl:]type attribute, or an 
            [xsl:]validation or default-validation attribute with a value other than strip.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte0505">
      <summary>
            It is a type error if the result of evaluating the sequence constructor cannot be converted to the required type.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte0510">
      <summary>
            It is a type error if an xsl:apply-templates  instruction with no select attribute is evaluated when the context item 
            is not a node.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte0520">
      <summary>
            It is a type error if the sequence returned by the select expression [of xsl:apply-templates] contains an item that is not a node.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte0570">
      <summary>
            It is a type error if the supplied value of a variable cannot be converted to the required type.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte0590">
      <summary>
            It is a type error if the conversion of the supplied value of a parameter to its required type fails.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte0600">
      <summary>
            If a default value is given explicitly, that is, if there is either a select attribute or a non-empty 
            sequence constructor, then it is a type error if the default value cannot be converted to the required type,
             using the function conversion rules.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte0780">
      <summary>
            If the as attribute is specified, then the result evaluated by the sequence constructor (see 5.7 Sequence 
            Constructors) is converted to the required type, using the function conversion rules. It is a type error if
            this conversion fails. If the as attribute is omitted, the calculated result is used as supplied, and no
            conversion takes place.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte0790">
      <summary>
            If the value of a parameter to a stylesheet function cannot be converted to the required type, a type 
            error is signaled.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte0945">
      <summary>
            It is a type error to use the xsl:copy when the context item is not defined.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte0950">
      <summary>
            It is a type error to use the xsl:copy or xsl:copy-of instruction to copy a node that has namespace-sensitive content if the 
            copy-namespaces attribute has the value no and its explicit or implicit validation attribute has the value preserve. It is also a 
            type error if either of these instructions (with validation="preserve") is used to copy an attribute having namespace-sensitive content, 
            unless the parent element is also copied. A node has namespace-sensitive content if its typed value contains an item of type xs:QName 
            or xs:NOTATION or a type derived therefrom. The reason this is an error is because the validity of the content depends on the namespace 
            context being preserved.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte0990">
      <summary>
            It is a type error if the xsl:number  instruction is evaluated, with no value or select attribute, when the context item is 
            not a node.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte1000">
      <summary>
            It is a type error if the result of evaluating the select attribute of the xsl:number  instruction is anything other than 
            a single node.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte1020">
      <summary>
            If any sort key value, after atomization and any type conversion required by the data-type attribute, is a sequence 
            containing more than one item, then the effect depends on whether the xsl:sort  element is evaluated with backwards 
            compatible behavior. With backwards compatible behavior, the effective sort key value is the first item in the sequence. 
            In other cases, this is a type error.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte1100">
      <summary>
            It is a type error if the grouping key evaluated using the group-adjacent attribute is an empty 
            sequence, or a sequence containing more than one item.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte1120">
      <summary>
            When the group-starting-with or group-ending-with attribute is used, it is a type error  if the result 
             of evaluating the select  expression contains an item that is not a node.
             </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte1510">
      <summary>
            If the validation attribute of an xsl:element, xsl:attribute, xsl:copy, xsl:copy-of, or xsl:result-document  instruction, or the 
            xsl:validation attribute of a literal result element, has the effective value strict, and schema validity assessment concludes that 
            the validity of the element or attribute is invalid or unknown, a type error occurs. As with other type errors, the error may be signaled
            statically if it can be detected statically.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte1512">
      <summary>
            If the validation attribute of an xsl:element, xsl:attribute, xsl:copy, xsl:copy-of, or xsl:result-document  instruction, or the 
             xsl:validation attribute of a literal result element, has the effective value strict, and there is no matching top-level declaration in the
              schema, then a type error occurs. As with other type errors, the error may  be signaled statically if it can be detected statically.
             </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte1515">
      <summary>
            If the validation attribute of an xsl:element, xsl:attribute, xsl:copy, xsl:copy-of, or xsl:result-document  instruction, or the xsl:validation 
            attribute of a literal result element, has the effective value lax, and schema validity assessment concludes that the element or attribute is 
            invalid, a type error occurs. As with other type errors, the error may be signaled statically if it can be detected statically.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte1535">
      <summary>
            It is a type error if the value of the type attribute of an xsl:copy or xsl:copy-of instruction refers to a 
            complex type definition and one or more of the nodes being copied is an attribute node.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte1540">
      <summary>
            It is a type error if an [xsl:]type attribute is defined for a constructed element or attribute, 
            and the outcome of schema validity assessment against that type is that the validity property of
            that element or attribute information item is other than valid.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte1545">
      <summary>
            A type error occurs if a type or validation attribute is defined (explicitly or implicitly) for an instruction that constructs a new 
            attribute node, if the effect of this is to cause the attribute value to be validated against a type that is derived from, or constructed
            by list or union from, the primitive types xs:QName or xs:NOTATION.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte1550">
      <summary>
            A type error occurs [when a document node is validated] unless the children of the document node comprise exactly one element node,
            no text nodes, and zero or more comment and processing instruction nodes, in any order.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte1555">
      <summary>
            It is a type error if, when validating a document node, document-level constraints are not satisfied.  These constraints include identity 
            constraints (xs:unique, xs:key, and xs:keyref) and ID/IDREF constraints.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte3180">
      <summary>
            It is a type error if the result of evaluating the select expression of the xsl:copy element is a sequence of more than one item.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte3170">
      <summary>
             It is a type error if the result of evaluating the namespace-context attribute of the xsl:evaluate instruction is anything other than a single node.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xtte3210">
      <summary>
            If the result of evaluating the context-item expression of an xsl:evaluate instruction is a sequence containing more than one item, then a type error is signaled.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xudy0009">
      <summary>
            The error code indicating a dynamic error in an <c>replace value of</c> expression.
            </summary>
      <remarks>
            In a replace expression where value of is not specified, it is a dynamic error if the node returned by the target expression does not have a parent.
            </remarks>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXUDY0009">[XQuery Update Facility 1.0] XUDY0009</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xudy0014">
      <summary>
            In a transform expression, it is a dynamic error if the modify clause modifies any node that was not created by the copy clause.
            </summary>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXXUTY0014">[XQuery Update Facility 1.0] XUTY0014</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xudy0015">
      <summary>
            It is a dynamic error if any node is the target of more than one rename expression within the same query.
            </summary>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXXUTY0015">[XQuery Update Facility 1.0] XUTY0015</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xudy0016">
      <summary>
            It is a dynamic error if any node is the target of more than one replace expression (without value of being specified) within the same query.
            </summary>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXXUTY0016">[XQuery Update Facility 1.0] XUTY0016</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xudy0017">
      <summary>
            It is a dynamic error if any node is the target of more than one replace value of expression within the same query.
            </summary>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXXUTY0017">[XQuery Update Facility 1.0] XUTY0017</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xudy0018">
      <summary>
            It is a dynamic error if a function that was declared to be external but not updating returns a non-empty pending update list.
            </summary>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXXUTY0018">[XQuery Update Facility 1.0] XUTY0018</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xudy0019">
      <summary>
            It is a dynamic error if a function that was declared to be both external and updating returns a non-empty data model instance.
            </summary>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXXUTY0019">[XQuery Update Facility 1.0] XUTY0019</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xudy0021">
      <summary>
            It is a dynamic error if the XDM instance that would result from applying all the updates in a query violates any constraint specified in [XQuery 1.0 and XPath 2.0 Data Model]. In this case, none of the updates in the query are made effective.
            </summary>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXXUTY0021">[XQuery Update Facility 1.0] XUTY0021</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xudy0023">
      <summary>
            It is a dynamic error if an insert, replace, or rename expression affects an element node by introducing a new namespace binding that conflicts with one of its existing namespace bindings.
            </summary>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXXUTY0023">[XQuery Update Facility 1.0] XUTY0023</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xudy0024">
      <summary>
            It is a dynamic error if the effect of a set of updating expressions is to introduce conflicting namespace bindings into an element node.
            </summary>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXXUTY0024">[XQuery Update Facility 1.0] XUTY0024</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xudy0027">
      <summary>
            It is a dynamic error if the target expression of an insert, replace, or rename expression evaluates to an empty sequence.
            </summary>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXXUTY0027">[XQuery Update Facility 1.0] XUTY0027</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xudy0029">
      <summary>
            In an insert expression where before or after is specified, it is a dynamic error if the node returned by the target expression does not have a parent.
            </summary>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXXUTY0029">[XQuery Update Facility 1.0] XUTY0029</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xudy0030">
      <summary>
            It is a dynamic error if an insert expression specifies the insertion of an attribute node before or after a child of a document node.
            </summary>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXXUTY0030">[XQuery Update Facility 1.0] XUTY0030</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xudy0031">
      <summary>
            It is a dynamic error if multiple calls to fn:put in the same snapshot specify the same URI (after resolution of relative URIs).
            </summary>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXXUTY0031">[XQuery Update Facility 1.0] XUTY0031</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xust0001">
      <summary>
            The error code indicating an incorrectly positioned updating expression.
            </summary>
      <remarks>
        <para>It is a static error if an updating expression is used in any position other than one of the following:</para>
        <list type="number">
          <item>
            <description>The topmost expression in the body of a query.</description>
          </item>
          <item>
            <description>The modify clause of a transform expression.</description>
          </item>
          <item>
            <description>The return clause of a FLWOR expression.</description>
          </item>
          <item>
            <description>The return clauses of a typeswitch expression in which every return clause and contains an updating expression,
            an empty expression ( ), or a call to the fn:error function.</description>
          </item>
          <item>
            <description>The then and else clauses of a conditional statement in which both the then and else clauses contain either an updating expression,
            an empty expression ( ), or a call to the fn:error function.</description>
          </item>
          <item>
            <description>An operand of a comma expression in which each operand is either an updating expression, an empty expression ( ),
            or a call to the fn:error function.</description>
          </item>
          <item>
            <description>The content of a parenthesized expression.</description>
          </item>
          <item>
            <description>The body of a function declaration in which the keyword updating is specified.</description>
          </item>
        </list>
      </remarks>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXUST0001">[XQuery Update Facility 1.0] XUST0001</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xust0002">
      <summary>
            The error code indicating an incorrectly positioned simple expression.
            </summary>
      <remarks>
        <para>It is a static error if a simple expression that is not a vacuous expression is used in one of the 
            following positions:</para>
        <list type="number">
          <item>
            <description>The modify clause of a transform expression.</description>
          </item>
          <item>
            <description>The top-level expression in the body of a function declaration in which the keyword updating is specified.</description>
          </item>
        </list>
      </remarks>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXUST0002">[XQuery Update Facility 1.0] XUST0002</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xust0003">
      <summary>
            The error code indicating more than one revalidation declaration.
            </summary>
      <remarks>
            It is a static error if a Prolog contains more than one revalidation declaration.
            </remarks>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXUST0003">[XQuery Update Facility 1.0] XUST0003</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xust0026">
      <summary>
            It is a static error if a revalidation declaration in a Prolog specifies a revalidation mode that is not supported by the current implementation.
            </summary>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXUST0026">[XQuery Update Facility 1.0] XUST0026</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xust0028">
      <summary>
            It is a static error if a function declaration specifies both updating and a return type.
            </summary>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXUST0028">[XQuery Update Facility 1.0] XUST0028</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xuty0004">
      <summary>
            It is a type error if the insertion sequence of an insert expression contains an attribute node following a node that is not an attribute node.
            </summary>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXUTY0004">[XQuery Update Facility 1.0] XUTY0004</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xuty0005">
      <summary>
            The error code indicating a type checking error in an <c>insert into</c>, <c>insert as first into</c> or 
            <c>insert as last into</c> expression.
            </summary>
      <remarks>
            In an insert expression where into, as first into, or as last into is specified, it is a type error if the target expression returns a non-empty result that does not consist of a single element or document node.
            </remarks>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXUTY0005">[XQuery Update Facility 1.0] XUTY0005</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xuty0006">
      <summary>
            The error code indicating a type checking error in an <c>insert before</c> or <c>insert after</c> expression.
            </summary>
      <remarks>
            In an insert expression where before or after is specified, it is a type error if the target expression returns a non-empty result that does not consist of a single element, text, comment, or processing instruction node.
            </remarks>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXUTY0006">[XQuery Update Facility 1.0] XUTY0006</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xuty0007">
      <summary>
            The error code indicating a type checking error in an <c>delete</c> expression.
            </summary>
      <summary>
            It is a type error if the target expression of a delete expression does not return a sequence of zero or more nodes.
            </summary>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXUTY0007">[XQuery Update Facility 1.0] XUTY0007</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xuty0008">
      <summary>
            The error code indicating a type checking error in an <c>replace</c> expression.
            </summary>
      <remarks>
            In a replace expression, it is a type error if the target expression returns a non-empty result that does not consist of a single element, attribute, text, comment, or processing instruction node.
            </remarks>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXUTY0008">[XQuery Update Facility 1.0] XUTY0008</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xuty0010">
      <summary>
            In a replace expression where value of is not specified and the target is an element, text, comment, or processing instruction node, it is a type error if the replacement sequence does not consist of zero or more element, text, comment, or processing instruction nodes.
            </summary>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXUTY0010">[XQuery Update Facility 1.0] XUTY0010</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xuty0011">
      <summary>
            In a replace expression where value of is not specified and the target is an attribute node, it is a type error if the replacement sequence does not consist of zero or more attribute nodes.
            </summary>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXUTY0011">[XQuery Update Facility 1.0] XUTY0011</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xuty0012">
      <summary>
            In a rename expression, it is a type error if the target expression returns a non-empty result that does not consist of a single element, attribute, or processing instruction node.
            </summary>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXUTY0012">[XQuery Update Facility 1.0] XUTY0012</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xuty0013">
      <summary>
            In a transform expression, it is a type error if a source expression in the copy clause does not return a single node.
            </summary>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXXUTY0013">[XQuery Update Facility 1.0] XUTY0013</seealso>
    </member>
    <member name="F:XmlPrime.XdmException.Xuty0022">
      <summary>
            It is a type error if an insert expression specifies the insertion of an attribute node into a document node.
            </summary>
      <seealso href="http://www.w3.org/TR/xquery-update-10/#ERRXXUTY0022">[XQuery Update Facility 1.0] XUTY0022</seealso>
    </member>
    <member name="M:XmlPrime.XdmException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XdmException"/> class with serialized data.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:XmlPrime.XdmException.#ctor(System.Xml.XmlQualifiedName,System.String,System.Exception)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XdmException"/> class with the specified error code,
            	error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="errorCode">The qualified name of the error code.</param>
      <param name="message">The error message that explains the reason for this exception.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="M:XmlPrime.XdmException.#ctor">
      <overloads>Initializes a new instance of the <see cref="T:XmlPrime.XdmException"/> class.</overloads>
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XdmException"/> class with the error code.
            </summary>
    </member>
    <member name="M:XmlPrime.XdmException.#ctor(System.String)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XdmException"/> class with the specified message and FOER0000 code.
            </summary>
      <param name="message">The error message that explains the reason for this exception.</param>
    </member>
    <member name="M:XmlPrime.XdmException.#ctor(System.String,System.Exception)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XdmException"/> class with the specified message, inner exception and FOER0000 error code.
            </summary>
      <param name="message">The error message that explains the reason for this exception.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="M:XmlPrime.XdmException.BadStylesheetInitiation">
      <summary>
            	Returns an XTDE0047 "bad stylesheet initiation" exception.
            </summary>
      <returns>
            	A new XTDE0047 <see cref="T:XmlPrime.XdmException"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.XdmException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialization object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains the contextual information about the source or destination.</param>
    </member>
    <member name="F:XmlPrime.XdmException.Xpst0001">
      <summary>
            It is a static error if analysis of an expression relies on some component of 
            the static context that has not been assigned a value.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xpst0003">
      <summary>
            It is a static error if an expression is not a valid instance of the grammar 
            defined in A.1 EBNF.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xpst0005">
      <summary>
            During the analysis phase, it is a static error if the static type assigned to an expression other than 
            the expression () or data(()) is empty-sequence().
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xpst0008">
      <summary>
            It is a static error if an expression refers to an element name, attribute name, 
            schema type name, namespace prefix, or variable name that is not defined in 
            the static context, except within an ElementTest or an AttributeTest.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xpst0010">
      <summary>
            An implementation must raise a static error if it encounters a reference to an 
            axis that it does not support.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xpst0017">
      <summary>
            It is an error (the host language environment may define this error as either a 
            static error or a dynamic error) if the expanded qualified name and number of arguments
            in a function call do not match the name and arity of a function signature in
            the static context.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xpst0051">
      <summary>
            It is a static error if the expanded <c>QName</c> for an <c>AtomicOrUnionType</c> in a <c>SequenceType</c> is not defined in the in-scope schema types 
            as a generalized atomic type.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xpst0080">
      <summary>
            The target type of a cast or castable expression must be an atomic type that is in the in-scope 
            schema types and is not xs:NOTATION or xs:anyAtomicType, optionally followed by the occurrence 
            indicator "?"; otherwise a static error is raised.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xpst0081">
      <summary>
            It is a static error if a <c>QName</c> used in an expression contains a namespace prefix that cannot be 
            expanded into a namespace URI by using the statically known namespaces.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xpst0083">
      <summary>Never
            Not currently used.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xpst0112">
      <summary>
            It is a static error if a partial function application or named function reference refers to a function that is focus-dependentFO30 [err:XPST0112].
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Xpst0133">
      <summary>
             It is a static error [err:XPST0133] if the namespace URI for an EQName is http://www.w3.org/2000/xmlns/.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Andy0001">
      <summary>
            	Argument out of implementation defined range.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Andy0002">
      <summary>
            	Badly constructed document.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Andy0003">
      <summary>
            	External function threw exception.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Andy0004">
      <summary>
            	No result document handler set.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Andy0005">
      <summary>
            	Error accessing result document.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Andy0006">
      <summary>
            	Error converting argument for native function.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Andy1000">
      <summary>
            	Error converting return value for native function.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Andy1001">
      <summary>
        <see langword="null"/> returned from <c>msxsl:script</c> function.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Andy1002">
      <summary>
            	Unsupported type returned from native function.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Andy1003">
      <summary>
            	Incompatible node returned from native function.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Andy1004">
      <summary>
            	Error initializing module instance for native module.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Andy1005">
      <summary>
            	Unexpected error encountered while generating call to native function call.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Anst0000">
      <summary>
            	Unidentified internal error.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Anst0002">
      <summary>
            	Invalid value used for query initialization.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Anst0003">
      <summary>
            	Unreachable code detected.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Anst0004">
      <summary>
            	Unused variable detected.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Anst0005">
      <summary>
            	Wrong encoding.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Anst0007">
      <summary>
            	Constructed elements returned from path expression.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Anst0008">
      <summary>
            Attempted to add schemas after compilation in static typing mode.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Anst1000">
      <summary>
            	Invalid prefix for script instruction implements-prefix attribute.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Anst1001">
      <summary>
            	Bad target namespace in script instruction.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Anst1002">
      <summary>
            	Library already compiled in script extension.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Anst1003">
      <summary>
            	Language not supported in script instruction.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Anst1004">
      <summary>
            	All child elements of script element must appear before the text content.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Anst1005">
      <summary>
            	All script elements for the same namespace must be in the same language.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Anst1006">
      <summary>
            	Error occurred during external compilation of script element
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Anst1007">
      <summary>
            	Scripting has been disabled.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Anst1010">
      <summary>
            	Assembly element must contain either href or name attributes but not both.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Anst1011">
      <summary>
            	Error exporting native function.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmException.Anst1012">
      <summary>
            	Error creating native module.
            </summary>
    </member>
    <member name="P:XmlPrime.XdmException.ErrorCode">
      <summary>
            	Gets the qualified name of the error.
            </summary>
      <value>The qualified name of the error.</value>
    </member>
    <member name="P:XmlPrime.XdmException.LineNumber">
      <summary>
            	Gets the line number indicating where the error occurred.
            </summary>
      <remarks>
            	The line number is 1-indexed, that is a value of <c>1</c> represents the first character in the document.
            </remarks>
      <value>
            	The line number in which the error occurred, or <c>-1</c> if the line position is not known.
            </value>
    </member>
    <member name="P:XmlPrime.XdmException.LinePosition">
      <summary>
            	Gets the line position indicating where the error occurred.
            </summary>
      <remarks>
            	The line position is 1-indexed, that is a value of <c>1</c> represents the first character in a line.
            </remarks>
      <value>
            	The position in the line at which the error occurred, or <c>-1</c> if the line position is not known.
            </value>
    </member>
    <member name="P:XmlPrime.XdmException.SourceUri">
      <summary>
            	Gets the source file indicating where the error occurred.
            </summary>
      <value>
            	The source file in which the error occurred, or <see cref="F:System.String.Empty"/> if the source file is not known.
            </value>
    </member>
    <member name="T:XmlPrime.Serialization.CharacterReferenceStyle">
      <summary>
            Describes how character references should be serialized.
            </summary>
    </member>
    <member name="F:XmlPrime.Serialization.CharacterReferenceStyle.Hexadecimal">
      <summary>
            Character references should appear as hexadecimal character references (eg <c>&amp;#x20;</c>)
            </summary>
    </member>
    <member name="F:XmlPrime.Serialization.CharacterReferenceStyle.Decimal">
      <summary>
            Character references should appear as decimal character references (eg <c>&amp;#32;</c>)
            </summary>
    </member>
    <member name="T:XmlPrime.CollationResolver">
      <summary>
            Resolves collations named by a URI.
            </summary>
      <remarks>
        <para>
            The collation resolver is used to resolve collation URIs specified in an XQuery program, XPath expression or XSL
            transformation.
            </para>
        <para>
            The <see cref="P:XmlPrime.StaticContextSettings.CollationResolver"/> property on the <see cref="T:XmlPrime.StaticContextSettings"/>
            class specifies the <see cref="T:XmlPrime.CollationResolver"/> to use.
            </para>
      </remarks>
    </member>
    <member name="M:XmlPrime.CollationResolver.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.CollationResolver"/> class.
            </summary>
    </member>
    <member name="M:XmlPrime.CollationResolver.CreateUcaCollation(XmlPrime.UcaCollationSettings)">
      <summary>
            Returns a collation with the specified settings, or <see langword="null"/> if no
            such collation could be created.
            </summary>
      <param name="settings">The collation settings.</param>
      <returns>
            Returns a new <see cref="T:XmlPrime.Collation"/> instance, or <see langword="null"/> if a collation
            implementation matching the specified settings could not be created.
            </returns>
      <remarks>
            By default, this method always returns <see langword="null"/>.  Override this method in a derrived class
            and consider integrating the International Components for Unicode library.
            </remarks>
    </member>
    <member name="M:XmlPrime.CollationResolver.ResolveCollation(System.String)">
      <summary>
            When overridden in a derived class, maps a collation URI to an <see cref="T:XmlPrime.Collation"/> instance..
            </summary>
      <param name="uri">The absolute URI of the collation to resolve.</param>
      <returns>
            A <see cref="T:XmlPrime.Collation"/> instance implementing the collation with the supplied URI, or 
            <see langword="null"/> if a collation with this URI is not found.
            </returns>
    </member>
    <member name="P:XmlPrime.CollationResolver.CultureCollationResolver">
      <summary>
            Gets the culture collation resolver.
            </summary>
      <value>A <see cref="T:XmlPrime.CollationResolver"/> providing collations for .NET cultures.</value>
      <remarks>
        <para>This resolver maps URIs of the form <c>http://www.xmlprime.com/collation/{lang}?case-order={case-order}</c>
            to the collation corresponding to the .NET culture <c>lang</c>.  The <c>case-order</c> parameter is optional,
            and may take the values <c>upper-first</c>, <c>lower-first</c> indicating the relative order of upper and
            lower case characters, or it can take the value <c>ignore</c> to ignore the case when comparing strings.</para>
        <para>For example <c>http://www.xmlprime.com/collation/en-US</c>
            corresponds to the American English culture, <c>http://www.xmlprime.com/collation/en-US?case-order=upper-first</c>
            corresponds to the American English culture with upper case sorted before lower case, while 
            <c>http://www.xmlprime.com/collation/de-DE?case-order=ignore</c> corresponds to the German culture, ignoring case.</para>
      </remarks>
    </member>
    <member name="T:XmlPrime.CompilationWarnings">
      <summary>
        <para>
            Specifies which warnings should be raised during compilation.
            </para>
        <para>
            This enumeration has a <see cref="T:System.FlagsAttribute"/> attribute that allows a bitwise combination of its member
            values.
            </para>
      </summary>
      <remarks>
        <para>Compiler warnings indicate constructs in XQuery programs, XPath expressions or XSL transformations which,
            while not erroneous, may indicate unintended behaviour or an accidental mistake.</para>
        <para>Use the <see cref="P:XmlPrime.StaticContextSettings.CompilationWarnings"/> property to set the warnings that should be 
            raised during the compilation of an XQuery program, an XPath expression or an XSL transformation.</para>
      </remarks>
    </member>
    <member name="F:XmlPrime.CompilationWarnings.None">
      <summary>
            No extra compilation settings are enabled.
            </summary>
    </member>
    <member name="F:XmlPrime.CompilationWarnings.DynamicErrors">
      <summary>
            Issue a warning when dynamic errors are detected statically by the compiler.
            </summary>
    </member>
    <member name="F:XmlPrime.CompilationWarnings.EmptySequence">
      <summary>
            Issue a warning for expressions whose static type is determined to be <c>empty-sequence()</c>.
            </summary>
    </member>
    <member name="F:XmlPrime.CompilationWarnings.UnreachableCode">
      <summary>
            Issue a warning for expressions which can never be executed.
            </summary>
    </member>
    <member name="F:XmlPrime.CompilationWarnings.UnusedVariable">
      <summary>
            Issue a warning for variables that are declared but not used.
            </summary>
    </member>
    <member name="F:XmlPrime.CompilationWarnings.PathReturnsConstructedNodes">
      <summary>
            A path expression returns constructed nodes, and so the order is not defined.
            </summary>
    </member>
    <member name="F:XmlPrime.CompilationWarnings.ScriptCompilationWarning">
      <summary>
            A warning arising from compiling an external script in a <c>&lt;xmlprime:script&gt;</c> or <c>&lt;msxsl:script&gt;</c> element.
            </summary>
    </member>
    <member name="F:XmlPrime.CompilationWarnings.Other">
      <summary>
            Issue a warning in other cases (eg. encoding declaration does not match the encoding of the query)
            </summary>
    </member>
    <member name="F:XmlPrime.CompilationWarnings.All">
      <summary>
            Enables all compilation warnings
            </summary>
    </member>
    <member name="T:XmlPrime.DocumentSet">
      <summary>
            	Contains a stable cache of documents and collections used in an XQuery program, XPath expression or XSL 
            	transformation.
            </summary>
      <threadsafety static="true" instance="true"/>
      <remarks>
        <para>
            		The document set keeps a cache of all documents and collections available to the query, and those marked
            		as unavailable.  Whenever a document or collection is retrieved it is added to the 
            		<see cref="T:XmlPrime.DocumentSet"/>.  Should,an error occur retrieving a document or collection, the URI is
            		marked as unavailable in the document set.  This helps to enforce the stability of the <c>fn:doc</c>, 
            		<c>fn:doc-available</c>, <c>fn:collection</c>, <c>fn:document</c>, <c>fn:unparsed-text</c> and 
            		<c>fn:unparsed-text-available</c> functions, and the constraint that <c>doc(document-uri($N)) is $N</c> is 
            		<c>true</c> for any document node <c>$N</c>.
            	</para>
        <para>
            		This defines the <see href="http://www.w3.org/TR/xquery/#dt-available-docs">available documents</see>,
            		<see href="http://www.w3.org/TR/xquery/#dt-available-collections">available collections</see> and
            		<see href="http://www.w3.org/TR/xquery/#dt-default-collection">default collection</see> components of the 
            		dynamic context.
            	</para>
        <para>
            		The <see cref="P:XmlPrime.DynamicContextSettings.DocumentSet"/> property specifies the <see cref="T:XmlPrime.DocumentSet"/> to be 
            		used when evaluating an XQuery program, XSL transformation or XPath expression.
            	</para>
        <para>
            		All methods of <see cref="T:XmlPrime.DocumentSet"/> are thread safe can be called concurrently from multiple threads.
            	</para>
      </remarks>
      <seealso cref="P:XmlPrime.DynamicContextSettings.DocumentSet"/>
      <seealso href="http://www.w3.org/TR/xquery/#dt-available-docs">[XQuery 1.0: An XML Query Language] 2.1.2 Dynamic Context (Available documents)</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#dt-available-collections">[XQuery 1.0: An XML Query Language] 2.1.2 Dynamic Context (Available collections)</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#dt-default-collection">[XQuery 1.0: An XML Query Language] 2.1.2 Dynamic Context (Default collection)</seealso>
    </member>
    <member name="M:XmlPrime.DocumentSet.ProcessInputSettings(XmlPrime.InputSettings)">
      <summary>
            Returns a <see cref="T:XmlPrime.DocumentSet"/> which applies the specified <see cref="T:XmlPrime.InputSettings"/> to the current <see cref="T:XmlPrime.DocumentSet"/>.
            </summary>
      <param name="inputSettings">The input settings.</param>
      <returns>A <see cref="T:XmlPrime.DocumentSet"/> with the speciied <see cref="T:XmlPrime.InputSettings"/> applied.</returns>
    </member>
    <member name="M:XmlPrime.DocumentSet.#ctor(System.Xml.XmlNameTable,XmlPrime.InputSettings)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.DocumentSet"/> class.
            </summary>
      <param name="nameTable">The name table used by all the documents in the document set.</param>
      <param name="inputSettings">
            	The filters to be applied when reading source documents, or <see langword="null"/> if no filters should be applied.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nameTable"/> is <see langword="null"/></exception>
    </member>
    <member name="M:XmlPrime.DocumentSet.#ctor(System.Xml.XmlResolver,System.Xml.XmlReaderSettings)">
      <summary>
            Initializes a new thread-safe instance of the <see cref="T:XmlPrime.DocumentSet"/> class with the specified
            <see cref="T:System.Xml.XmlResolver"/> and <see cref="T:System.Xml.XmlReaderSettings"/> instance.
            </summary>
      <param name="resolver">The resolver to use to resolve resources.</param>
      <param name="settings">The settings to use to parse documents.</param>
      <exception cref="T:System.ArgumentException">The <see cref="P:XmlPrime.DocumentSet.NameTable"/> of <paramref name="settings"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/> is <see langword="null"/>.</exception>
      <remarks>
        <para>
          <paramref name="resolver"/> is used to resolve all resources.  Any documents are first resolved as
            resources, and then parsed with an <see cref="T:System.Xml.XmlReader"/> initialized using the <see cref="T:System.Xml.XmlReaderSettings"/>
            provided.  The resolver on the XmlReader settings is replaced with one which retrieves resources directly
            from the document set.
            </para>
        <para>
            If the <c>unparsed-text</c> function is not used then consider constructing the <see cref="T:XmlPrime.DocumentSet"/>
            with an <see cref="T:XmlPrime.XmlReaderDocumentResolver"/> and no <see cref="T:XmlPrime.IResourceResolver"/> to avoid caching
            the raw contents of every document retrieved.
            </para>
        <para>
            This is equivalent to constructing the document set with a <see cref="T:XmlPrime.UnparsedTextDocumentResolver"/> and a
            <see cref="T:XmlPrime.XmlResourceResolver"/> for the document and resource resolvers respectively.
            </para>
        <para>
            The <see cref="P:XmlPrime.DocumentSet.NameTable"/> property is set to that of the <paramref name="settings"/> instance, which
            must not be <see langword="null"/>.
            </para>
      </remarks>
    </member>
    <member name="M:XmlPrime.DocumentSet.#ctor(System.Xml.XmlResolver,System.Xml.XmlReaderSettings,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.DocumentSet"/> class with the specified
            <see cref="T:System.Xml.XmlResolver"/> and <see cref="T:System.Xml.XmlReaderSettings"/> instance.
            </summary>
      <param name="resolver">The resolver to use to resolve resources.</param>
      <param name="settings">The settings to use to parse documents.</param>
      <param name="threadSafe">
        <see langword="true"/> if the document set should be thread-safe; otherwise <see langword="false"/>.</param>
      <exception cref="T:System.ArgumentException">The <see cref="P:XmlPrime.DocumentSet.NameTable"/> of <paramref name="settings"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/> is <see langword="null"/>.</exception>
      <remarks>
        <para>
          <paramref name="resolver"/> is used to resolve all resources.  Any documents are first resolved as
            resources, and then parsed with an <see cref="T:System.Xml.XmlReader"/> initialized using the <see cref="T:System.Xml.XmlReaderSettings"/>
            provided.  The resolver on the XmlReader settings is replaced with one which retrieves resources directly
            from the document set.
            </para>
        <para>
            If the <c>unparsed-text</c> function is not used then consider constructing the <see cref="T:XmlPrime.DocumentSet"/>
            with an <see cref="T:XmlPrime.XmlReaderDocumentResolver"/> and no <see cref="T:XmlPrime.IResourceResolver"/> to avoid caching
            the raw contents of every document retrieved.
            </para>
        <para>
            This is equivalent to constructing the document set with a <see cref="T:XmlPrime.UnparsedTextDocumentResolver"/> and a
            <see cref="T:XmlPrime.XmlResourceResolver"/> for the document and resource resolvers respectively.
            </para>
        <para>
            The <see cref="P:XmlPrime.DocumentSet.NameTable"/> property is set to that of the <paramref name="settings"/> instance, which
            must not be <see langword="null"/>.
            </para>
      </remarks>
    </member>
    <member name="M:XmlPrime.DocumentSet.#ctor(XmlPrime.InputSettings,System.Xml.XmlResolver,System.Xml.XmlReaderSettings,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.DocumentSet"/> class with the specified
            <see cref="T:System.Xml.XmlResolver"/> and <see cref="T:System.Xml.XmlReaderSettings"/> instance.
            </summary>
      <param name="inputSettings">The filters to be applied when reading source documents, or <see langword="null"/> if no filters should be applied.</param>
      <param name="resolver">The resolver to use to resolve resources.</param>
      <param name="settings">The settings to use to parse documents.</param>
      <param name="threadSafe">if set to <c>true</c> [thread safe].</param>
      <exception cref="T:System.ArgumentException">settings.NameTable must not be null;settings</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:XmlPrime.DocumentSet.NameTable"/> of <paramref name="settings"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/> is <see langword="null"/>.</exception>
      <remarks>
        <para>
          <paramref name="resolver"/> is used to resolve all resources.  Any documents are first resolved as
            resources, and then parsed with an <see cref="T:System.Xml.XmlReader"/> initialized using the <see cref="T:System.Xml.XmlReaderSettings"/>
            provided.
            </para>
        <para>
            If the <c>unparsed-text</c> function is not used then consider constructing the <see cref="T:XmlPrime.DocumentSet"/>
            with an <see cref="T:XmlPrime.XmlReaderDocumentResolver"/> and no <see cref="T:XmlPrime.IResourceResolver"/> to avoid caching
            the raw contents of every document retrieved.
            </para>
        <para>
            This is equivalent to constructing the document set with a <see cref="T:XmlPrime.UnparsedTextDocumentResolver"/> and a
            <see cref="T:XmlPrime.XmlResourceResolver"/> for the document and resource resolvers respectively.
            </para>
        <para>
            The <see cref="P:XmlPrime.DocumentSet.NameTable"/> property is set to that of the <paramref name="settings"/> instance, which
            must not be <see langword="null"/>.
            </para>
      </remarks>
    </member>
    <member name="M:XmlPrime.DocumentSet.#ctor(System.Xml.XmlNameTable,XmlPrime.IDocumentResolver,XmlPrime.ICollectionResolver,XmlPrime.IResourceResolver)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.DocumentSet"/> class.
            </summary>
      <param name="nameTable">The name table used by all the documents in the document set.</param>
      <param name="documentResolver">
            	The resolver used to retrieve documents, or <see langword="null"/> if no documents are to be retrieved.
            </param>
      <param name="collectionResolver">
            	The resolver used to retrieve collections, or <see langword="null"/> if no collections are to be retrieved.
            </param>
      <param name="resourceResolver">
            	The resolver used to retrieve resources, or <see langword="null"/> if no resources are to be retrieved.  
            	This backs up the <c>unparsed-text</c> function.
            </param>
      <overloads>
            	Initializes a new instance of the <see cref="T:XmlPrime.DocumentSet"/> class.
            </overloads>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nameTable"/> is <see langword="null"/></exception>
    </member>
    <member name="M:XmlPrime.DocumentSet.#ctor(System.Xml.XmlNameTable,XmlPrime.InputSettings,XmlPrime.IDocumentResolver,XmlPrime.ICollectionResolver,XmlPrime.IResourceResolver)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.DocumentSet"/> class.
            </summary>
      <param name="nameTable">The name table used by all the documents in the document set.</param>
      <param name="inputSettings">The filters to be applied when reading source documents, or <see langword="null"/> if no filters should be applied.</param>
      <param name="documentResolver">The resolver used to retrieve documents, or <see langword="null"/> if no documents are to be retrieved.</param>
      <param name="collectionResolver">The resolver used to retrieve collections, or <see langword="null"/> if no collections are to be retrieved.</param>
      <param name="resourceResolver">The resolver used to retrieve resources, or <see langword="null"/> if no resources are to be retrieved.
            This backs up the <c>unparsed-text</c> function.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nameTable"/> is <see langword="null"/></exception>
      <overloads>
            Initializes a new instance of the <see cref="T:XmlPrime.DocumentSet"/> class.
            </overloads>
    </member>
    <member name="M:XmlPrime.DocumentSet.#ctor(System.Xml.XmlNameTable,XmlPrime.InputSettings,XmlPrime.IDocumentResolver,XmlPrime.ICollectionResolver,XmlPrime.IResourceResolver,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.DocumentSet"/> class.
            </summary>
      <param name="nameTable">The name table used by all the documents in the document set.</param>
      <param name="inputSettings">The filters to be applied when reading source documents, or <see langword="null"/> if no filters should be applied.</param>
      <param name="documentResolver">The resolver used to retrieve documents, or <see langword="null"/> if no documents are to be retrieved.</param>
      <param name="collectionResolver">The resolver used to retrieve collections, or <see langword="null"/> if no collections are to be retrieved.</param>
      <param name="resourceResolver">The resolver used to retrieve resources, or <see langword="null"/> if no resources are to be retrieved.
            This backs up the <c>unparsed-text</c> function.</param>
      <param name="threadSafe">
        <see langword="true"/> if the document set should be thread-safe; otherwise <see langword="false"/>.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nameTable"/> is <see langword="null"/></exception>
      <overloads>
            Initializes a new instance of the <see cref="T:XmlPrime.DocumentSet"/> class.
            </overloads>
    </member>
    <member name="M:XmlPrime.DocumentSet.#ctor">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.DocumentSet"/> class, with no access to external documents and using
            a <see cref="T:XmlPrime.ConcurrentNameTable"/>.
            </summary>
      <remarks>
            	A document set constructed with this constructor is unable to retrieve external documents.  Only documents
            	explicitly added to the document set will be retrieved.
            </remarks>
    </member>
    <member name="M:XmlPrime.DocumentSet.#ctor(System.Xml.XmlNameTable)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.DocumentSet"/> class, with no access to external documents.
            </summary>
      <param name="nameTable">The name table used by all the documents in the document set.</param>
      <remarks>
            	A document set constructed with this constructor is unable to retrieve external documents.  Only documents
            	explicitly added to the document set will be retrieved.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nameTable"/> is <see langword="null"/></exception>
    </member>
    <member name="M:XmlPrime.DocumentSet.Collection(XmlPrime.AnyUri)">
      <summary>
            	Returns an <see cref="T:System.Xml.XPath.IXPathNavigable"/> instance representing the collection retrieved from the specified URI.
            </summary>
      <param name="uri">The URI of the collection to be retrieved, or <see langword="null"/> for the default collection.</param>
      <returns>
            	An array of <see cref="T:System.Xml.XPath.IXPathNavigable"/> instances representing the collection, or <see langword="null"/>
            	if the URI was not handled.
            </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="uri"/> is not an absolute URI.</exception>
      <exception cref="T:System.Xml.XmlException">The collection returned from the collection resolver was not valid.</exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during a previous attempt to retrieve the collection.</exception>
      <exception cref="T:System.Exception">
            	An error occurred retrieving the collection.
            </exception>
    </member>
    <member name="M:XmlPrime.DocumentSet.ResolvedDocument(XmlPrime.AnyUri)">
      <summary>
            	Returns an <see cref="M:XmlPrime.DocumentSet.ResolvedDocument(XmlPrime.AnyUri)"/> instance representing the document retrieved from the specified URI.
            </summary>
      <param name="uri">The URI of the document to be retrieved.</param>
      <returns>
            	A <see creg="ResolvedDocument"/> instance representing the document, or <see langword="null"/> if the URI
            	was not handled.
            </returns>
      <remarks>
            	The fragment identifier of the uri is ignored, but can be resolved against the document using the 
            	<see cref="M:XmlPrime.ResolvedDocument.GetFragment(System.String)"/> method.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="uri"/> is not an absolute URI.</exception>
      <exception cref="T:System.Xml.XmlException">The document returned from the document resolver was not valid.</exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during a previous attempt to retrieve the document.</exception>
      <exception cref="T:System.Exception">
            	An error occurred retrieving the document.
            </exception>
    </member>
    <member name="M:XmlPrime.DocumentSet.Resource(XmlPrime.AnyUri)">
      <summary>
            	Returns the resource with the specified URI.
            </summary>
      <param name="uri">The URI of the unparsed text resource to be retrieved.</param>
      <returns>
            	A <see cref="T:System.IO.Stream"/> over the resource, or <see langword="null"/> if the URI was not handled.
            </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="uri"/> is not an absolute URI, or <paramref name="uri"/> contains a fragment identifier.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during a previous attempt to retrieve the resource.</exception>
      <exception cref="T:System.Exception">
            	An error occurred retrieving the resource.
            </exception>
    </member>
    <member name="M:XmlPrime.DocumentSet.UnparsedText(XmlPrime.AnyUri,System.Text.Encoding)">
      <summary>
            	Returns a <see cref="T:System.String"/> containing the unparsed text of a resource with the specified URI.
            </summary>
      <param name="uri">The URI of the unparsed text resource to be retrieved.</param>
      <param name="encoding">The encoding used to decode the resource.</param>
      <returns>
            	A <see cref="T:System.String"/> containing the unparsed text of the resource, or <see langword="null"/> if the URI
            	was not handled.
            </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="uri"/> is not an absolute URI, or <paramref name="uri"/> contains a fragment identifier.
            </exception>
      <exception cref="T:XmlPrime.XdmException">
            	A previous attempt to retrieve the resource failed.
            </exception>
      <exception cref="T:System.Xml.XmlException">
            	There was an error decoding the resources.
            </exception>
      <exception cref="T:System.Exception">
            	An error occurred retrieving the resource.
            </exception>
    </member>
    <member name="M:XmlPrime.DocumentSet.AddCollection(XmlPrime.AnyUri,System.Xml.XPath.IXPathNavigable[])">
      <overloads>
            	Adds the collection represented by the to the set of available collections,
            </overloads>
      <summary>
            	Associates the specified nodes with the specified collection URI, or marks the collection URI as 
            	unavailable.
            </summary>
      <param name="uri">
            	The collection URI to associate with <paramref name="collection"/>, or <see langword="null"/> to set the 
            	default collection.
            </param>
      <param name="collection">
            	The collection of nodes to add to the <see cref="T:XmlPrime.DocumentSet"/>, or <see langword="null"/> if the
            	collection is unavailable.
            </param>
      <returns>
        <see langword="true"/> if the document was added to the <see cref="T:XmlPrime.DocumentSet"/>;
            	<see langword="false"/> otherwise.
            </returns>
      <remarks>
        <para>
            		If any of the nodes in <paramref name="collection"/> have a document URI that is not empty, then the
            		document should already be added to the document set.
            	</para>
        <para>
            		If <paramref name="uri"/> is already in the document set then no change is made and this method returns
            		<see langword="false"/>.
            	</para>
        <para>
            		If <paramref name="collection"/> is <see langword="null"/> then during evaluation of an XQuery program, XSL 
            		transformation or XPath expression, <c>fn:doc-available</c> will return <c>false</c> for 
            		<paramref name="uri"/>, and the <c>fn:doc</c> function will raise an <c>FODC0002</c> error.
            	</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
        <list type="bullet">
          <item>
            <description>
              <paramref name="collection"/> contains an element which is <see langword="null"/>.</description>
          </item>
          <item>
            <description>
              <paramref name="uri"/> is not an absolute URI.</description>
          </item>
          <item>
            <description>
              <paramref name="uri"/> is already mapped to a collection.</description>
          </item>
          <item>
            <description>A node in <paramref name="collection"/> uses the wrong name table.</description>
          </item>
          <item>
            <description>
            		      	The document URI of a node in <paramref name="collection"/> is not a valid lexical value for
            		      	<c>xs:anyURI</c>.
            		      </description>
          </item>
          <item>
            <description>The document URI of a node in <paramref name="collection"/> is not absolute.</description>
          </item>
          <item>
            <description>
            		      	The document URI of a node in <paramref name="collection"/> is not empty and the node is contained in a
            		      	document that is not in the document set.
            		      </description>
          </item>
        </list>
      </exception>
    </member>
    <member name="M:XmlPrime.DocumentSet.AddCollection(XmlPrime.AnyUri,System.Collections.Generic.IEnumerable{System.Xml.XPath.XPathItem})">
      <summary>
            	Associates the specified items with the specified collection URI, or marks the collection URI as 
            	unavailable.
            </summary>
      <param name="uri">
            	The collection URI to associate with <paramref name="collection"/>, or <see langword="null"/> to set the 
            	default collection.
            </param>
      <param name="collection">
            	The collection of items to add to the <see cref="T:XmlPrime.DocumentSet"/>, or <see langword="null"/> if the
            	collection is unavailable.
            </param>
      <returns>
        <see langword="true"/> if the collection was added to the <see cref="T:XmlPrime.DocumentSet"/>;
            	<see langword="false"/> otherwise.
            </returns>
      <remarks>
        <para>
            	If any item in <paramref name="collection"/> is a document node with a document URI that is not empty, 
            then the document should already be added to the document set.
            	</para>
        <para>
            		If <paramref name="uri"/> is already in the document set then no change is made and this method returns
            		<see langword="false"/>.
            	</para>
        <para>
            		If <paramref name="collection"/> is <see langword="null"/> then during evaluation of an XQuery program, XSL 
            		transformation or XPath expression, <c>fn:doc-available</c> will return <c>false</c> for 
            		<paramref name="uri"/>, and the <c>fn:doc</c> function will raise an <c>FODC0002</c> error.
            	</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
        <list type="bullet">
          <item>
            <description>
              <paramref name="collection"/> contains an element which is <see langword="null"/>.</description>
          </item>
          <item>
            <description>
              <paramref name="uri"/> is not an absolute URI.</description>
          </item>
          <item>
            <description>
              <paramref name="uri"/> is already mapped to a collection.</description>
          </item>
          <item>
            <description>A node in <paramref name="collection"/> uses the wrong name table.</description>
          </item>
          <item>
            <description>
            		      	The document URI of a node in <paramref name="collection"/> is not a valid lexical value for
            		      	<c>xs:anyURI</c>.
            		      </description>
          </item>
          <item>
            <description>The document URI of a node in <paramref name="collection"/> is not absolute.</description>
          </item>
          <item>
            <description>
            		      	The document URI of a node in <paramref name="collection"/> is not empty and the node is contained in a
            		      	document that is not in the document set.
            		      </description>
          </item>
        </list>
      </exception>
    </member>
    <member name="M:XmlPrime.DocumentSet.AddDocument(XmlPrime.AnyUri,System.Xml.XPath.IXPathNavigable)">
      <overloads>
            	Adds the document represented by the specified <see cref="T:System.Xml.XPath.IXPathNavigable"/> to the set of available documents,
            </overloads>
      <summary>
            	Adds the document represented by the specified <see cref="T:System.Xml.XPath.IXPathNavigable"/> to the set of available documents,
            	and associates it with the specified document URI, or marks a document as unavailable.
            </summary>
      <param name="uri">The document URI to associate with <paramref name="navigable"/>.</param>
      <param name="navigable">
            	The document to add to the <see cref="T:XmlPrime.DocumentSet"/>, or <see langword="null"/> if the document is 
            	unavailable.
            </param>
      <returns>
        <see langword="true"/> if the document was added to the <see cref="T:XmlPrime.DocumentSet"/>;
            	<see langword="false"/> otherwise.
            </returns>
      <remarks>
        <para>
            		The document URI of <paramref name="navigable"/> must either be empty or equivalent to 
            		<paramref name="uri"/>.
            	</para>
        <para>
            		If <paramref name="uri"/> is already in the document set then no change is made and this method returns
            		<see langword="false"/>.
            	</para>
        <para>
            		If <paramref name="navigable"/> is <see langword="null"/> then during evaluation of an XQuery program, XSL 
            		transformation or XPath expression, <c>fn:doc-available</c> will return <c>false</c> for 
            		<paramref name="uri"/>, and the <c>fn:doc</c> function will raise an <c>FODC0002</c> error.
            	</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri"/>  is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
        <list type="bullet">
          <item>
            <description>
              <paramref name="navigable"/> is not a document node.</description>
          </item>
          <item>
            <description>
              <paramref name="uri"/> is not an absolute URI.</description>
          </item>
          <item>
            <description>The document uses the wrong name table.</description>
          </item>
          <item>
            <description>
            		      	The document URI of <paramref name="navigable"/> is not empty and is different to <paramref name="uri"/>.</description>
          </item>
        </list>
      </exception>
    </member>
    <member name="M:XmlPrime.DocumentSet.AddDocument(XmlPrime.AnyUri,XmlPrime.ResolvedDocument)">
      <overloads>
            	Adds the document represented by the specified <see cref="M:XmlPrime.DocumentSet.ResolvedDocument(XmlPrime.AnyUri)"/> to the set of available documents,
            </overloads>
      <summary>
            	Adds the document represented by the specified <see cref="M:XmlPrime.DocumentSet.ResolvedDocument(XmlPrime.AnyUri)"/> to the set of available documents,
            	and associates it with the specified document URI, or marks a document as unavailable.
            </summary>
      <param name="uri">The document URI to associate with <paramref name="document"/>.</param>
      <param name="document">
            	The document to add to the <see cref="T:XmlPrime.DocumentSet"/>, or <see langword="null"/> if the document is 
            	unavailable.
            </param>
      <returns>
        <see langword="true"/> if the document was added to the <see cref="T:XmlPrime.DocumentSet"/>;
            	<see langword="false"/> otherwise.
            </returns>
      <remarks>
        <para>
            		The document URI of the document contained in <paramref name="document"/> must either be empty or equivalent to 
            		<paramref name="uri"/>.
            	</para>
        <para>
            		If <paramref name="uri"/> is already in the document set then no change is made and this method returns
            		<see langword="false"/>.
            	</para>
        <para>
            		If <paramref name="document"/> is <see langword="null"/> then during evaluation of an XQuery program, XSL 
            		transformation or XPath expression, <c>fn:doc-available</c> will return <c>false</c> for 
            		<paramref name="uri"/>, and the <c>fn:doc</c> function will raise an <c>FODC0002</c> error.
            	</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri"/>  is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
        <list type="bullet">
          <item>
            <description>
              <paramref name="uri"/> is not an absolute URI.</description>
          </item>
          <item>
            <description>The document uses the wrong name table.</description>
          </item>
          <item>
            <description>
            		      	The document URI of <paramref name="document"/> is not empty and is different to <paramref name="uri"/>.</description>
          </item>
        </list>
      </exception>
    </member>
    <member name="M:XmlPrime.DocumentSet.AddDocument(System.Xml.XPath.IXPathNavigable)">
      <summary>
            	Adds the document represented by the specified <see cref="T:System.Xml.XPath.IXPathNavigable"/> to the set of available documents,
            	and associates it with its document URI.
            </summary>
      <param name="navigable">
            	The document to add to the <see cref="T:XmlPrime.DocumentSet"/>.
            </param>
      <returns>
        <see langword="true"/> if the document was added to the <see cref="T:XmlPrime.DocumentSet"/>;
            	<see langword="false"/> otherwise.
            </returns>
      <remarks>
            	If the document containing <paramref name="navigable"/> has an empty document URI then no change is made.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="navigable"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
        <list type="bullet">
          <item>
            <description>
              <paramref name="navigable"/> is not a document node.</description>
          </item>
          <item>
            <description>The document uses the wrong name table.</description>
          </item>
          <item>
            <description>The document URI of <paramref name="navigable"/> is not a valid lexical value for <c>xs:anyURI</c>.</description>
          </item>
          <item>
            <description>The document URI of <paramref name="navigable"/> is not absolute.</description>
          </item>
        </list>
      </exception>
    </member>
    <member name="M:XmlPrime.DocumentSet.AddResource(XmlPrime.AnyUri,XmlPrime.ResolvedResource)">
      <summary>
            	Adds the resource represented by the specified <see cref="T:System.IO.Stream"/> to the set of available resources,
            	and associates it with its document URI.
            </summary>
      <param name="uri">The URI of the resource to add to the <see cref="T:XmlPrime.DocumentSet"/>.</param>
      <param name="resource">The resource to add to the <see cref="T:XmlPrime.DocumentSet"/>.</param>
      <returns>
        <see langword="true"/> if the document was added to the <see cref="T:XmlPrime.DocumentSet"/>;
            	<see langword="false"/> otherwise.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri"/> or <paramref name="resource"/> is <see langword="null"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.DocumentSet.CreateResultDocumentHandler">
      <summary>
            Creates a new result document handler for the current document set.
            </summary>
      <returns>A new <see cref="T:XmlPrime.IResultDocumentHandler"/>.</returns>
    </member>
    <member name="M:XmlPrime.DocumentSet.CreateXmlResolver">
      <summary>
            	Creates a new <see cref="T:System.Xml.XmlResolver"/> instance which retrieves resources from this document set.
            </summary>
      <returns>
            	A new <see cref="T:System.Xml.XmlResolver"/> instance.
            </returns>
    </member>
    <member name="M:XmlPrime.DocumentSet.Document(XmlPrime.AnyUri)">
      <summary>
            	Returns an <see cref="T:System.Xml.XPath.XPathNavigator"/> instance representing a node in the document retrieved from the specified URI.
            </summary>
      <param name="uri">The URI of the document to be retrieved.</param>
      <returns>
            	A new <see creg="XPathNavigator"/> instance representing the document, or <see langword="null"/> if the URI
            	was not handled.
            </returns>
      <remarks>
            	If the URI contains a fragment then this is resolved against the document and the navigator returned will be located at the
            	specified fragment.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="uri"/> is not an absolute URI.</exception>
      <exception cref="T:System.Xml.XmlException">The document returned from the document resolver was not valid.</exception>
      <exception cref="T:XmlPrime.XdmException">The fragment could not be resolved, or an error occurred during a previous attempt to retrieve the document.</exception>
      <exception cref="T:System.Exception">
            	An error occurred retrieving the document.
            </exception>
    </member>
    <member name="M:XmlPrime.DocumentSet.IncludeWellKnownDocumentTypeDefinitions">
      <summary>
            	Adds a collection of well known DTDs to the document set.
            </summary>
      <remarks>
        <para>These DTDs are loaded from a local copy and will not result in any network traffic.</para>
        <para>Currently the well known DTDs include just the XHTML 1.0 DTDs.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.DocumentSet.ReplaceDocument(XmlPrime.AnyUri,System.Xml.XPath.IXPathNavigable)">
      <summary>
            Replaces the document.
            </summary>
      <param name="uri">The URI.</param>
      <param name="navigable">The navigable.</param>
      <returns/>
    </member>
    <member name="M:XmlPrime.DocumentSet.ShareDocumentSet">
      <overloads>
             Returns a new <see cref="T:XmlPrime.SharedDocumentSet"/> which wraps the current document set..
            </overloads>
      <summary>
              Returns a new <see cref="T:XmlPrime.SharedDocumentSet"/> which wraps the current document set..
            </summary>
      <remarks>
        <para>
                When reading a document during evaluation of an XQuery program, XPath expression or XSL transformation, the underlying
                <see cref="T:XmlPrime.DocumentSet"/> will first be checked to see it already contains that document.  If it does, it will be returned.
                Otherwise, the document will be read and placed in the <see cref="T:XmlPrime.SharedDocumentSet"/>.
                Any document created during evaluation of the XQuery program, XPath expression or XSL transformation will reside
                in the <see cref="T:XmlPrime.SharedDocumentSet"/>.
              </para>
        <para>
                Using a private name table results in any names that are not in the static name table to be added to a
                separate private name table.
              </para>
        <para>
                If a <see cref="T:XmlPrime.DocumentSet"/> is supplied, then it will be wrapped in a <see cref="T:XmlPrime.SharedDocumentSet"/>
                using the private name table.
              </para>
        <para>This is euivalent to calling <see cref="M:XmlPrime.DocumentSet.ShareDocumentSet(System.Xml.XmlNameTable)"/> with this instance's 
            <see cref="P:XmlPrime.DocumentSet.NameTable"/>.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.DocumentSet.ShareDocumentSet(System.Xml.XmlNameTable)">
      <summary>
              Returns a new <see cref="T:XmlPrime.SharedDocumentSet"/> which wraps the current document set and uses the specified <see cref="T:System.Xml.XmlNameTable"/>.
            </summary>
      <param name="nameTable">The <see cref="T:System.Xml.XmlNameTable"/> to associate with the <see cref="T:XmlPrime.SharedDocumentSet"/>.</param>
      <remarks>
        <para>
                When reading a document during evaluation of an XQuery program, XPath expression or XSL transformation, the underlying
                <see cref="T:XmlPrime.DocumentSet"/> will first be checked to see it already contains that document.  If it does, it will be returned.
                Otherwise, the document will be read and placed in the <see cref="T:XmlPrime.SharedDocumentSet"/>.
                Any document created during evaluation of the XQuery program, XPath expression or XSL transformation will reside
                in the <see cref="T:XmlPrime.SharedDocumentSet"/>.
              </para>
        <para>
                Using a private name table results in any names that are not in the static name table to be added to a
                separate private name table.
              </para>
        <para>
                If a <see cref="T:XmlPrime.DocumentSet"/> is supplied, then it will be wrapped in a <see cref="T:XmlPrime.SharedDocumentSet"/>
                using the private name table.
              </para>
      </remarks>
    </member>
    <member name="M:XmlPrime.DocumentSet.TryGetCollection(XmlPrime.AnyUri,XmlPrime.IResolvedCollection@)">
      <summary>
            	Gets the collection with the specified URI from the <see cref="T:XmlPrime.DocumentSet"/>.
            </summary>
      <param name="uri">The URI of the collection to retrieve, or <see langword="null"/> to retrieve the default
            	collection.</param>
      <param name="collection">
            	When this method returns, contains the collection at the specified URI, if it is cached in the
            	<see cref="T:XmlPrime.DocumentSet"/>; otherwise <see langword="null"/>.  This is also set to
            	<see langword="null"/> if the URI is marked as unavailable.
            </param>
      <returns>
        <see langword="true"/> if the <see cref="T:XmlPrime.DocumentSet"/> contains the specified collection, or the URI is
            	marked as unavailable; otherwise <see langword="false"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="uri"/> is not an absolute URI.</exception>
    </member>
    <member name="M:XmlPrime.DocumentSet.TryGetDocument(XmlPrime.AnyUri,XmlPrime.IResolvedDocument@)">
      <summary>
            	Gets the document with the specified URI from the <see cref="T:XmlPrime.DocumentSet"/>.
            </summary>
      <param name="uri">The URI of the document to retrieve.</param>
      <param name="document">
            	When this method returns, contains the document at the specified URI, if it is cached in the
            	<see cref="T:XmlPrime.DocumentSet"/>; otherwise <see langword="null"/>.  This is also set to
            	<see langword="null"/> if the URI is marked as unavailable.
            </param>
      <returns>
        <see langword="true"/> if the <see cref="T:XmlPrime.DocumentSet"/> contains the specified document, or the URI is
            	marked as unavailable; otherwise <see langword="false"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="uri"/> is not an absolute URI.</exception>
    </member>
    <member name="M:XmlPrime.DocumentSet.TryGetResource(XmlPrime.AnyUri,XmlPrime.IResolvedResource@)">
      <summary>
            	Gets the resource with the specified URI from the <see cref="T:XmlPrime.DocumentSet"/>.
            </summary>
      <param name="uri">The URI of the resource to retrieve.</param>
      <param name="resource">When this method returns, contains the unparsed text of the resource at the specified URI, if it is cached
            	in the <see cref="T:XmlPrime.DocumentSet"/>; otherwise <see langword="null"/>.  This is also set to
            	<see langword="null"/> if the URI is marked as unavailable.</param>
      <returns>
        <see langword="true"/> if the <see cref="T:XmlPrime.DocumentSet"/> contains the specified resource, or the URI is
            	marked as unavailable; otherwise <see langword="false"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="uri"/> is not an absolute URI, or <paramref name="uri"/> contains a fragment identifier.
            </exception>
    </member>
    <member name="M:XmlPrime.DocumentSet.TryGetUnparsedText(XmlPrime.AnyUri,System.Text.Encoding,System.String@)">
      <summary>
            	Gets the unparsed text of the resource with the specified URI from the <see cref="T:XmlPrime.DocumentSet"/>.
            </summary>
      <param name="uri">The URI of the resource to retrieve.</param>
      <param name="encoding">
            	The encoding used to retrieve the unparsed text of the resource, or <see langword="null"/> to use the
            	default.
            </param>
      <param name="resource">
            	When this method returns, contains the unparsed text of the resource at the specified URI, if it is cached 
            	in the <see cref="T:XmlPrime.DocumentSet"/>; otherwise <see langword="null"/>.  This is also set to
            	<see langword="null"/> if the URI is marked as unavailable or if the resource cannot be decoded.
            </param>
      <returns>
        <see langword="true"/> if the <see cref="T:XmlPrime.DocumentSet"/> contains the specified resource, or the URI is
            	marked as unavailable; otherwise <see langword="false"/>.
            </returns>
      <remarks>
            	The <paramref name="encoding"/> parameter is ignored if the unparsed text of the resource has been
            	previously retrieved.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="uri"/> is not an absolute URI, <paramref name="uri"/> contains a fragment identifier, or 
            	<paramref name="encoding"/> is not a supported encoding.
            </exception>
    </member>
    <member name="P:XmlPrime.DocumentSet.CollectionTypeResolver">
      <summary>
            	Gets a document type resolver returning the actual types of collection in the document set.
            </summary>
      <remarks>
            	Using this type resolver causes documents to be resolved whenever the URI of a call to <c>fn:collection</c> 
            	can be statically determined.
            </remarks>
      <returns>
            	An <see cref="T:XmlPrime.ICollectionTypeResolver"/> that returns the type of collections in the <see cref="T:XmlPrime.DocumentSet"/>.
            </returns>
    </member>
    <member name="P:XmlPrime.DocumentSet.DocumentTypeResolver">
      <summary>
            	Gets a document type resolver returning the actual types of documents in the document set.
            </summary>
      <remarks>
            	This type resolver causes documents to be resolved whenever the URI of a call to <c>fn:doc</c> can be
            	statically determined.
            </remarks>
      <returns>
            	An <see cref="T:XmlPrime.IDocumentTypeResolver"/> that returns the type of documents in the <see cref="T:XmlPrime.DocumentSet"/>.
            </returns>
    </member>
    <member name="P:XmlPrime.DocumentSet.NameTable">
      <summary>
            	Gets the name table used by the documents in this <see cref="T:XmlPrime.DocumentSet"/>.
            </summary>
      <value>An <see cref="T:System.Xml.XmlNameTable"/> instance.</value>
    </member>
    <member name="T:XmlPrime.ICollectionTypeResolver">
      <summary>
            An interface used to resolve the types of external collections.
            </summary>
      <remarks>
        <para>
            The <see cref="T:XmlPrime.ICollectionTypeResolver"/> interface is used to resolve the types of calls to the 
            <c>fn:collection</c> function when its argument can be statically determined.
            </para>
        <para>
            The <see cref="T:XmlPrime.ICollectionTypeResolver"/> is specified using the 
            <see cref="P:XmlPrime.StaticContextSettings.CollectionTypeResolver"/> property.
            </para>
        <para>
            The collection type resolver represents the 
            <see href="http://www.w3.org/TR/xquery/#dt-known-collections">statically known collections</see> and
            <see href="http://www.w3.org/TR/xquery/#dt-known-default-collection">statically known default collection type</see>
            components of the static context.
            </para>
        <para>
            If a collection returned from the <see cref="T:XmlPrime.DocumentSet"/> at runtime does not match the type specified by the
            <see cref="T:XmlPrime.ICollectionTypeResolver"/> then an <c>err:XPTY0004</c> error is raised.
            </para>
      </remarks>
      <seealse cref="P:XmlPrime.StaticContextSettings.DocumentTypeResolver"/>
      <seealso href="http://www.w3.org/TR/xquery/#dt-known-collections">[XQuery 1.0: An XML Query Language] 2.1.1 Static Context (Statically known collections)</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#dt-known-default-collection">[XQuery 1.0: An XML Query Language] 2.1.1 Static Context (Statically known default collection type)</seealso>
    </member>
    <member name="M:XmlPrime.ICollectionTypeResolver.ResolveCollectionType(XmlPrime.AnyUri,XmlPrime.InputSettings)">
      <summary>
            Resolves a URI to the type of the document represented at that URI.
            </summary>
      <param name="uri">The absolute URI of the document to resolve, or <see langword="null"/> to resolve the default collection
            type.</param>
      <param name="inputSettings">The filters to be applied to the source documents.</param>
      <returns>
            An <see cref="T:XmlPrime.XdmType"/> instance representing the type of the document at the specified URI, or
            <see langword="null"/> if the URI is not handled, or the type is not known.
            </returns>
    </member>
    <member name="P:XmlPrime.ICollectionTypeResolver.DefaultCollectionType">
      <summary>
            Gets the static type of all collections accessible from a query.
            </summary>
      <remarks>
            This can be used if for example you know that all your collections consist of sequences of document nodes.
            </remarks>
      <value>
            An <see cref="T:XmlPrime.XdmType"/> instance representing the default static type of a call to <c>fn:collection</c>,
            or <see langword="null"/> to use the default (<c>node()*</c>).
            </value>
    </member>
    <member name="T:XmlPrime.IDocumentTypeResolver">
      <summary>
              An interface used to resolve the types of external documents.
            </summary>
      <remarks>
        <para>
                The <see cref="T:XmlPrime.IDocumentTypeResolver"/> interface is used to resolve the types of calls to the <c>fn:doc</c>
                function.
              </para>
        <para>
                The <see cref="T:XmlPrime.IDocumentTypeResolver"/> is specified using the
                <see cref="P:XmlPrime.StaticContextSettings.DocumentTypeResolver"/> property.
              </para>
        <para>
                The document type resolver represents the <see href="http://www.w3.org/TR/xquery/#dt-known-docs">statically 
                                                            known documents</see> component of the static context.
              </para>
        <para>
                If a document returned from the <see cref="T:XmlPrime.DocumentSet"/> at runtime does not match the type specified by the
                <see cref="T:XmlPrime.IDocumentTypeResolver"/> then an <c>err:XPTY0004</c> error is raised.
              </para>
      </remarks>
      <seealse cref="P:XmlPrime.StaticContextSettings.DocumentTypeResolver"/>
      <seealso href="http://www.w3.org/TR/xquery/#dt-known-docs">[XQuery 1.0: An XML Query Language] 2.1.1 Static Context (Statically known documents)</seealso>
    </member>
    <member name="M:XmlPrime.IDocumentTypeResolver.ResolveDocumentType(XmlPrime.AnyUri,XmlPrime.InputSettings)">
      <summary>
              Resolves a URI to the type of the document represented at that URI.
            </summary>
      <param name="uri">The absolute URI of the document to resolve.</param>
      <param name="inputSettings">The filters to be applied to the source documents.</param>
      <returns>
              An <see cref="T:XmlPrime.XdmType"/> instance representing the type of the document at the specified URI, or
              <see langword="null"/> if the URI is not handled, or the type is not known.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri"/> is <see langword="null"/></exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="uri"/> is not an absolute URI.</exception>
    </member>
    <member name="P:XmlPrime.IDocumentTypeResolver.DefaultDocumentType">
      <summary>
              Gets the static type of all documents accessible from a query.
            </summary>
      <remarks>
              This can be used if for example you know that all your documents are untyped.
            </remarks>
      <value>
              An <see cref="T:XmlPrime.XdmType"/> instance representing the default type of a call to <c>fn:doc</c>, or 
              <see langword="null"/> to use the default (<c>document-node()</c>).
            </value>
    </member>
    <member name="T:XmlPrime.Licence">
      <summary>
            A static class providing information about the current licence for XmlPrime.
            </summary>
    </member>
    <member name="M:XmlPrime.Licence.LicenceState">
      <summary>
            Returns a description of the current licence for XmlPrime.
            </summary>
      <returns>A <see cref="T:System.String"/> describing the current licence for XmlPrime.</returns>
    </member>
    <member name="P:XmlPrime.Licence.IsLicensed">
      <summary>
            Gets a boolean value indicating whether the licence for this copy of XmlPrime is valid.
            </summary>
      <value>
        <see langword="true"/> if this instance is licensed; otherwise, <see langword="false"/>.
            </value>
    </member>
    <member name="P:XmlPrime.Licence.StartDate">
      <summary>
            Gets the date from which the licence for this copy of XmlPrime is valid.
            </summary>
      <summary>
            A <see cref="T:System.DateTime"/> value indicating the date from which the licence for this copy of XmlPrime is 
            valid, or <see cref="F:System.DateTime.MinValue"/> if the licence is always valid.
            </summary>
    </member>
    <member name="P:XmlPrime.Licence.ExpiryDate">
      <summary>
            Gets the date at which the licence for this copy of XmlPrime expires.
            </summary>
      <summary>
            A <see cref="T:System.DateTime"/> value indicating the date at which the licence for this copy of XmlPrime expires,
            or <see langword="DateTime.MaxValue"/> if the licence is always valid.
            </summary>
    </member>
    <member name="T:XmlPrime.LicenceException">
      <summary>
            Exception caused by licensing errors.
            </summary>
    </member>
    <member name="M:XmlPrime.LicenceException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.LicenceException"/> class.
            </summary>
    </member>
    <member name="M:XmlPrime.LicenceException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.LicenceException"/> class.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:XmlPrime.LicenceException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.LicenceException"/> class.
            </summary>
      <param name="message">The message.</param>
      <param name="inner">The inner exception.</param>
    </member>
    <member name="T:XmlPrime.LocationHintCollection">
      <summary>
            A collection that maps namespace URIs to sets of location hints.
            </summary>
    </member>
    <member name="M:XmlPrime.LocationHintCollection.#ctor">
      <overloads>
            Initializes a new instance of the <see cref="T:XmlPrime.LocationHintCollection"/> class.
            </overloads>
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.LocationHintCollection"/> class.
            </summary>
      <remarks>
        <para>A location hint is a URI used to locate an XQuery module or an XML Schema during compilation
            of an XQuery program.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.LocationHintCollection.#ctor(XmlPrime.LocationHintCollection)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.LocationHintCollection"/> class from another 
            <see cref="T:XmlPrime.LocationHintCollection"/> instance.
            </summary>
      <param name="locationHints">The <see cref="T:XmlPrime.LocationHintCollection"/> to copy.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="locationHints"/> is <see langword="null"/></exception>
      <remarks>
        <para>A location hint is a URI used to locate an XQuery module or an XML Schema during compilation
            of an XQuery program.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.LocationHintCollection.Add(System.String,XmlPrime.AnyUri)">
      <overloads>Adds a location hints to this <see cref="T:XmlPrime.LocationHintCollection"/>.</overloads>
      <summary>
            Adds a location hint for the specified namespace URI to this <see cref="T:XmlPrime.LocationHintCollection"/>.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="locationHint">The location hint to add.</param>
      <returns>
        <see langword="true"/> if the location hint is added to the <see cref="T:XmlPrime.LocationHintCollection"/>; 
            <see langword="false"/> if the location hint was already present.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceURI"/> or <paramref name="locationHint"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="locationHint"/> was not an absolute URI.</exception>
    </member>
    <member name="M:XmlPrime.LocationHintCollection.Add(System.String,XmlPrime.AnyUri[])">
      <summary>
            Adds a location hint for the specified namespace URI to this <see cref="T:XmlPrime.LocationHintCollection"/>.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="locationHints">The location hint to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceURI"/> or <paramref name="locationHints"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
            One of the members of <paramref name="locationHints"/> was <see langword="null"/>, or was not an absolute 
            URI.
            </exception>
      <remarks>
            If any of the hints in <paramref name="locationHints"/> are already present for the specified namespace, 
            then they are ignored.
            </remarks>
    </member>
    <member name="M:XmlPrime.LocationHintCollection.Clear">
      <summary>
            Removes all items from the <see cref="T:XmlPrime.LocationHintCollection"/>.
            </summary>
    </member>
    <member name="M:XmlPrime.LocationHintCollection.Contains(System.String)">
      <overloads>
            Determines whether the <see cref="T:XmlPrime.LocationHintCollection"/> already contains location hints for the 
            specified namespace URI.
            </overloads>
      <summary>
            Determines whether the <see cref="T:XmlPrime.LocationHintCollection"/> already contains the specified location hint
            for the specified namespace URI.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <returns>
        <see langword="true"/> if the <see cref="T:XmlPrime.LocationHintCollection"/> already contains the specified location
            hint for the specified namespace URI; otherwise, <see langword="false"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceURI"/> is <see langword="null"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.LocationHintCollection.Contains(System.String,XmlPrime.AnyUri)">
      <summary>
            Determines whether the <see cref="T:XmlPrime.LocationHintCollection"/> already contains location hints for the 
            specified namespace URI.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="locationHint">The location hint.</param>
      <returns>
        <see langword="true"/> if the <see cref="T:XmlPrime.LocationHintCollection"/> already contains the specified location
            hint for the specified namespace URI; otherwise, <see langword="false"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceURI"/> or <paramref name="locationHint"/> is <see langword="null"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.LocationHintCollection.Remove(System.String,XmlPrime.AnyUri)">
      <overloads>Removes location hints from the <see cref="T:XmlPrime.LocationHintCollection"/>.</overloads>
      <summary>
            Removes a location hint for the specified namespace URI from the <see cref="T:XmlPrime.LocationHintCollection"/>.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="locationHint">The location hint to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceURI"/> or <paramref name="locationHint"/> is <see langword="null"/>.
            </exception>
      <returns>
        <see langword="true"/> if the location hint is successfully removed; otherwise <see langword="false"/>.
            This method returns <see langword="false"/> if the location hint is not found in the 
            <see cref="T:XmlPrime.LocationHintCollection"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.LocationHintCollection.Remove(System.String)">
      <summary>
            Removes all location hints for the specified namespace URI from the <see cref="T:XmlPrime.LocationHintCollection"/>.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceURI"/> is <see langword="null"/>.
            </exception>
      <returns>
        <see langword="true"/> if the location hint is successfully removed; otherwise <see langword="false"/>.
            This method returns <see langword="false"/> if the location hint is not found in the 
            <see cref="T:XmlPrime.LocationHintCollection"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.LocationHintCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="P:XmlPrime.LocationHintCollection.Item(System.String)">
      <summary>
            Gets the location hints associated with the specified namespace URI.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <value>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> instance containing the location hints associated with
            <paramref name="namespaceURI"/>.
            </value>
      <remarks>
            If no location hints have been associated with <paramref name="namespaceURI"/> then <see cref="P:XmlPrime.LocationHintCollection.Item(System.String)"/>
            returns an empty collection.
            </remarks>
    </member>
    <member name="P:XmlPrime.LocationHintCollection.NamespaceUris">
      <summary>
            Gets a collection containing the namespace URIs that have location hints in this
            <see cref="T:XmlPrime.LocationHintCollection"/>.
            </summary>
      <value>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> instance containing the namespace URIs that have location hints in 
            this <see cref="T:XmlPrime.LocationHintCollection"/>.
            </value>
    </member>
    <member name="T:XmlPrime.ParameterDictionary">
      <summary>
            A mapping from parameter names to parameter values.
            </summary>
      <remarks>
            A <see cref="T:XmlPrime.ParameterDictionary"/> instance is used to supply the values of XQuery external variables,
            XPath variables or XSL stylesheet parameters.
            </remarks>
      <seealso cref="P:XmlPrime.DynamicContextSettings.Parameters"/>
    </member>
    <member name="M:XmlPrime.ParameterDictionary.#ctor">
      <overloads>
            Initializes a new instance of the <see cref="T:XmlPrime.ParameterDictionary"/> class.
            </overloads>
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.ParameterDictionary"/> class.
            </summary>
    </member>
    <member name="M:XmlPrime.ParameterDictionary.#ctor(XmlPrime.ParameterDictionary)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.ParameterDictionary"/> class.
            </summary>
      <param name="dictionary">The <see cref="T:XmlPrime.ParameterDictionary"/> to copy.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.ParameterDictionary.Add(System.Xml.XmlQualifiedName,System.Xml.XPath.XPathNodeIterator)">
      <summary>
            Adds a new parameter from an <see cref="T:System.Xml.XPath.XPathNodeIterator"/> value.
            </summary>
      <param name="name">The name of the parameter to add.</param>
      <param name="value">The value of the parameter to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> or <paramref name="value"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
            A parameter with name <paramref name="name"/> already exists.
            </exception>
    </member>
    <member name="M:XmlPrime.ParameterDictionary.Add(System.Xml.XmlQualifiedName,System.Xml.XPath.IXPathNavigable)">
      <summary>
            Adds a new parameter from an <see cref="T:System.Xml.XPath.IXPathNavigable"/> value.
            </summary>
      <param name="name">The name of the parameter to add.</param>
      <param name="value">The value of the parameter to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> or <paramref name="value"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
            A parameter with name <paramref name="name"/> already exists.
            </exception>
    </member>
    <member name="M:XmlPrime.ParameterDictionary.Add(System.Xml.XmlQualifiedName,System.Xml.XPath.IXPathNavigable[])">
      <summary>
            Adds a new parameter from a sequence of <see cref="T:System.Xml.XPath.IXPathNavigable"/> values.
            </summary>
      <param name="name">The name of the parameter to add.</param>
      <param name="values">The items making up the value of the parameter to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> or <paramref name="values"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
            An entry in <paramref name="values"/> is <see langword="null"/>, or 
            a parameter with name <paramref name="name"/> already exists.
            </exception>
    </member>
    <member name="M:XmlPrime.ParameterDictionary.Add(System.Xml.XmlQualifiedName,System.Xml.XPath.XPathNavigator)">
      <summary>
            Adds a new parameter from an <see cref="T:System.Xml.XPath.XPathNavigator"/> value.
            </summary>
      <param name="name">The name of the parameter to add.</param>
      <param name="value">The value of the parameter to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> or <paramref name="value"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
            A parameter with name <paramref name="name"/> already exists.
            </exception>
    </member>
    <member name="M:XmlPrime.ParameterDictionary.Add(System.Xml.XmlQualifiedName,System.Xml.XPath.XPathNavigator[])">
      <summary>
            Adds a new parameter from a sequence of <see cref="T:System.Xml.XPath.XPathNavigator"/> values.
            </summary>
      <param name="name">The name of the parameter to add.</param>
      <param name="values">The items making up the value of the parameter to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> or <paramref name="values"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
            An entry in <paramref name="values"/> is <see langword="null"/>, or 
            a parameter with name <paramref name="name"/> already exists.
            </exception>
    </member>
    <member name="M:XmlPrime.ParameterDictionary.Add(System.Xml.XmlQualifiedName,System.Xml.XPath.XPathItem)">
      <summary>
            Adds a new parameter from an <see cref="T:System.Xml.XPath.XPathItem"/> value.
            </summary>
      <param name="name">The name of the parameter to add.</param>
      <param name="value">The value of the parameter to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> or <paramref name="value"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value"/> is not an <see cref="T:System.Xml.XPath.XPathNavigator"/> or <see cref="T:XmlPrime.XPathAtomicValue"/> instance, or
            a parameter with name <paramref name="name"/> already exists.
            </exception>
    </member>
    <member name="M:XmlPrime.ParameterDictionary.Add(System.Xml.XmlQualifiedName,System.Xml.XPath.XPathItem[])">
      <summary>
            Adds a new parameter from a sequence of <see cref="T:System.Xml.XPath.XPathItem"/> values.
            </summary>
      <param name="name">The name of the parameter to add.</param>
      <param name="values">The items making up the value of the parameter to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> or <paramref name="values"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
            An entry in <paramref name="values"/> is <see langword="null"/>, or is not an instance of
            <see cref="T:System.Xml.XPath.XPathNavigator"/> or <see cref="T:XmlPrime.XPathAtomicValue"/>, or
            a parameter with name <paramref name="name"/> already exists.
            </exception>
    </member>
    <member name="M:XmlPrime.ParameterDictionary.Add(System.Xml.XmlQualifiedName,System.Collections.Generic.IEnumerable{XmlPrime.XPathAtomicValue})">
      <summary>
            Adds a parameter with the specified name.
            </summary>
      <param name="key">
            The name of the parameter.
            </param>
      <param name="value">The value of the parameter to add.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key"/> or <paramref name="value"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
            An parameter with the same name already exists in the <see cref="T:XmlPrime.ParameterDictionary"/>, or an entry in
            <paramref name="value"/> is <see langword="null"/></exception>
    </member>
    <member name="M:XmlPrime.ParameterDictionary.Add(System.Xml.XmlQualifiedName,System.Collections.Generic.IEnumerable{XmlPrime.XPathFunctionItem})">
      <summary>
            Adds a parameter with the specified name.
            </summary>
      <param name="key">
            The name of the parameter.
            </param>
      <param name="value">The value of the parameter to add.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key"/> or <paramref name="value"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
            An parameter with the same name already exists in the <see cref="T:XmlPrime.ParameterDictionary"/>, or an entry in
            <paramref name="value"/> is <see langword="null"/></exception>
    </member>
    <member name="M:XmlPrime.ParameterDictionary.Add(System.Xml.XmlQualifiedName,System.Collections.Generic.IEnumerable{System.Xml.XPath.XPathNavigator})">
      <summary>
            Adds a parameter with the specified name.
            </summary>
      <param name="key">
            The name of the parameter.
            </param>
      <param name="value">The value of the parameter to add.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key"/> or <paramref name="value"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
            An parameter with the same name already exists in the <see cref="T:XmlPrime.ParameterDictionary"/>, or an entry in
            <paramref name="value"/> is <see langword="null"/></exception>
    </member>
    <member name="M:XmlPrime.ParameterDictionary.Contains(System.Xml.XmlQualifiedName)">
      <summary>
            Determines whether the <see cref="T:XmlPrime.ParameterDictionary"/> contains the specified parameter.
            </summary>
      <param name="name">The name of the parameter.</param>
      <returns>
        <see langword="true"/> if the <see cref="T:XmlPrime.ParameterDictionary"/> contains the specified parameter;
             otherwise, <see langword="false"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> is <see langword="null"/></exception>
    </member>
    <member name="M:XmlPrime.ParameterDictionary.Types">
      <summary>
            Returns a names/types dictionary of the parameters contained in this <see cref="T:XmlPrime.ParameterDictionary"/>.
            </summary>
      <returns>A new <see cref="T:XmlPrime.ParameterTypeDictionary"/> containing the names/types pairs of the parameters in this <see cref="T:XmlPrime.ParameterDictionary"/>.</returns>
    </member>
    <member name="M:XmlPrime.ParameterDictionary.Add(System.Xml.XmlQualifiedName,System.Collections.Generic.IEnumerable{System.Xml.XPath.XPathItem})">
      <summary>
            Adds a parameter with the specified name.
            </summary>
      <param name="key">
            The name of the parameter.
            </param>
      <param name="value">The value of the parameter to add.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key"/> or <paramref name="value"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
            An parameter with the same name already exists in the <see cref="T:XmlPrime.ParameterDictionary"/>, or an entry in
            <paramref name="value"/> is <see langword="null"/></exception>
    </member>
    <member name="M:XmlPrime.ParameterDictionary.Clear">
      <summary>
            Removes all parameter entries from the <see cref="T:XmlPrime.ParameterDictionary"/>.
            </summary>
    </member>
    <member name="M:XmlPrime.ParameterDictionary.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:XmlPrime.ParameterDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:XmlPrime.ParameterDictionary.Remove(System.Xml.XmlQualifiedName)">
      <summary>
            Removes the parameter with the specified name from this <see cref="T:XmlPrime.ParameterDictionary"/>.
            </summary>
      <param name="key">The name of the parameter to remove.</param>
      <returns>
        <see langword="true"/> if the parameter was successfully removed from the <see cref="T:XmlPrime.ParameterDictionary"/>;
            otherwise <see langword="false"/>.  This method also returns false if there is no parameter with the
            specified name in the <see cref="T:XmlPrime.ParameterDictionary"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.ParameterDictionary.TryGetValue(System.Xml.XmlQualifiedName,System.Collections.Generic.IEnumerable{System.Xml.XPath.XPathItem}@)">
      <summary>
            Gets the value with the specified key.
            </summary>
      <param name="key">The name of the parameter whose value is to be returned.</param>
      <param name="value">When this method returns, contains the value of the specified parameter, if it is set; otherwise, <see langword="null"/>.</param>
      <returns>
        <see langword="true"/> if the <see cref="T:XmlPrime.ParameterDictionary"/> contains the specified parameter, otherwise <see langword="false"/></returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.ParameterDictionary.Add(System.Xml.XmlQualifiedName,System.String)">
      <overloads>Adds a new parameter to the <see cref="T:XmlPrime.ParameterDictionary"/>.</overloads>
      <summary>
            Adds a new parameter from a <see cref="T:System.String"/> value.
            </summary>
      <param name="name">The name of the parameter to add.</param>
      <param name="value">The value of the parameter to add.</param>
      <remarks>
        <para>The parameter added will have type <c>xs:string</c>.</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> or <paramref name="value"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.ParameterDictionary.AddUntypedAtomic(System.Xml.XmlQualifiedName,System.String)">
      <summary>
            Adds a new parameter from a <see cref="T:System.String"/> value.
            </summary>
      <param name="name">The name of the parameter to add.</param>
      <param name="value">The value of the parameter to add.</param>
      <remarks>
        <para>The parameter added will have type <c>xs:untypedAtomic</c>.</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> or <paramref name="value"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.ParameterDictionary.Add(System.Xml.XmlQualifiedName,System.Double)">
      <summary>
            Adds a new parameter from a <see cref="T:System.Double"/> value.
            </summary>
      <param name="name">The name of the parameter to add.</param>
      <param name="value">The value of the parameter to add.</param>
      <remarks>
        <para>The parameter added will have type <c>xs:double</c>.</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.ParameterDictionary.Add(System.Xml.XmlQualifiedName,System.Decimal)">
      <summary>
            Adds a new parameter from a <see cref="T:System.Decimal"/> value.
            </summary>
      <param name="name">The name of the parameter to add.</param>
      <param name="value">The value of the parameter to add.</param>
      <remarks>
        <para>The parameter added will have type <c>xs:decimal</c>.</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> is <see langword="null"/>.</exception>
    </member>
    <member name="P:XmlPrime.ParameterDictionary.Names">
      <summary>
            Gets the names of the parameters contained in this <see cref="T:XmlPrime.ParameterDictionary"/>.
            </summary>
      <value>A <see cref="T:System.Collections.Generic.ICollection`1"/> containing the names of the parameters in this <see cref="T:XmlPrime.ParameterDictionary"/>.</value>
    </member>
    <member name="P:XmlPrime.ParameterDictionary.Count">
      <summary>
            Gets the number of parameters contained in the <see cref="T:XmlPrime.ParameterDictionary"/>.
            </summary>
      <returns>
            The number of parameters contained in the <see cref="T:XmlPrime.ParameterDictionary"/>.
            </returns>
    </member>
    <member name="P:XmlPrime.ParameterDictionary.Item(System.Xml.XmlQualifiedName)">
      <summary>
            Gets or sets the value of the parameter with the specified name.
            </summary>
      <value>
            The value of the parameter with the specified name.
            </value>
      <param name="name">The name of the parameter to get or set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> or the supplied value is <see langword="null"/>.
            </exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and the parameter with the specified name is not found.</exception>
    </member>
    <member name="T:XmlPrime.ResolvedResource">
      <summary>
              A resource that has been returned from an <see cref="T:XmlPrime.IResourceResolver"/>.
            </summary>
      <remarks>
        <para>
                The encoding used to read a resource as unparsed text is determined as follows:
              </para>
        <list type="number">
          <item>
            <description>
                  The encoding specified by the <see cref="T:XmlPrime.ResolvedResource"/> is used if it is not <see langword="null"/>.
                </description>
          </item>
          <item>
            <description>
                  If the media type is an XML media type then the encoding is recognized as by the XML specification.
                </description>
          </item>
          <item>
            <description>
                  If an encoding was passed to the <c>unparsed-text</c> function, then this encoding is used.
                </description>
          </item>
          <item>
            <description>
                  If a byte order mark is present, then either <c>UTF-32</c>, <c>UTF-16</c> or <c>UTF-8</c> is assumed based on the byte order mark
                </description>
          </item>
          <item>
            <description>
                  If none of the above cases apply, then <c>UTF-8</c> is assumed.
                </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="M:XmlPrime.ResolvedResource.#ctor(System.IO.Stream,System.Text.Encoding,System.String)">
      <overloads>Initializes a new instance of the <see cref="T:XmlPrime.ResolvedResource"/> class.</overloads>
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.ResolvedResource"/> class.
            </summary>
      <param name="stream">The resource.</param>
      <param name="encoding">The encoding of the resource (or <see langword="null"/> if this is not known).</param>
      <param name="mediaType">The media type of the resource (or <see langword="null"/> if this is not known).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mediaType"/> is not a valid media type, or contains a <c>charset</c> parameter that refers to a 
              different encoding than <paramref name="encoding"/>.
            </exception>
      <remarks>
              If the media type has a <c>charset</c> parameter and <paramref name="encoding"/> is <see langword="null"/>
              then the <c>charset</c> parameter is used to identify the encoding.
            </remarks>
    </member>
    <member name="M:XmlPrime.ResolvedResource.#ctor(System.IO.Stream,System.String,System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.ResolvedResource"/> class.
            </summary>
      <param name="stream">The resource.</param>
      <param name="encodingName">The encoding of the resource (or <see langword="null"/> if this is not known).</param>
      <param name="mediaType">The media type of the resource (or <see langword="null"/> if this is not known).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mediaType"/> is not a valid media type, or contains a <c>charset</c> parameter that refers to a 
              different encoding that referred to by <paramref name="encodingName"/>.
            </exception>
      <remarks>
              If the media type has a <c>charset</c> parameter and <paramref name="encodingName"/> is <see langword="null"/>
              then the <c>charset</c> parameter is used to identify the encoding.
            </remarks>
    </member>
    <member name="M:XmlPrime.ResolvedResource.#ctor(System.IO.Stream,System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.ResolvedResource"/> class.
            </summary>
      <param name="stream">The resource.</param>
      <param name="mediaType">The media type of the resource (or <see langword="null"/> if this is not known).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mediaType"/> is not a valid media type. </exception>
      <remarks>
              If the media type has a <c>charset</c> parameter  then the <c>charset</c> parameter is used to identify the encoding.
            </remarks>
    </member>
    <member name="M:XmlPrime.ResolvedResource.#ctor(System.IO.Stream)">
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.ResolvedResource"/> class.
            </summary>
      <param name="stream">The stream.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.ResolvedResource.GetStream">
      <summary>
              Gets a <see cref="T:System.IO.Stream"/> over the resource.
            </summary>
      <returns>A <see cref="T:System.IO.Stream"/> over the resource.</returns>
    </member>
    <member name="M:XmlPrime.ResolvedResource.GetTextReader">
      <overloads>
            Gets a <see cref="T:System.IO.TextReader"/> over the resource.
            </overloads>
      <summary>
            Gets a <see cref="T:System.IO.TextReader"/> over the resource.
            </summary>
      <returns>
            A <see cref="T:System.IO.TextReader"/> over the resource.
            </returns>
      <remarks>
        <para>This will cause the encoding of the resource to be set, if it has not been already.</para>
        <para>The behavior of this method is the same as the <c>unparsed-text</c> function.</para>
      </remarks>
      <exception cref="T:System.Xml.XmlException">The encoding specified is not supported.</exception>
    </member>
    <member name="M:XmlPrime.ResolvedResource.GetTextReader(System.Text.Encoding)">
      <summary>
            Gets a <see cref="T:System.IO.TextReader"/> over the resource.
            </summary>
      <param name="encoding">
            The encoding to use if it has not been specified.  This is equivalent to the <c>$encoding</c> argument
            on <c>fn:unparsed-text</c>.
            </param>
      <returns>
            A <see cref="T:System.IO.TextReader"/> over the resource.
            </returns>
      <remarks>
        <para>This will cause the encoding of the resource to be set, if it has not been already.</para>
        <para>The behavior of this method is the same as the <c>unparsed-text</c> function.</para>
      </remarks>
      <exception cref="T:System.Xml.XmlException">The encoding specified is not supported.</exception>
    </member>
    <member name="P:XmlPrime.ResolvedResource.Encoding">
      <summary>
              Gets the encoding used by the resource, if it has been resolved.
            </summary>
      <value>The encoding, or <see langword="null"/> if the encoding has not been determined.</value>
    </member>
    <member name="P:XmlPrime.ResolvedResource.EncodingName">
      <summary>
              Gets the name of the encoding used by the resource.
            </summary>
      <value>The name of the encoding used by the resource.</value>
    </member>
    <member name="P:XmlPrime.ResolvedResource.MediaType">
      <summary>
              Gets or sets the media-type of the resolved resource.
            </summary>
      <value>The media-type of the resolved resource, or <see langword="null"/> if it is unknown.</value>
      <remarks>
        <para>
                This property contains the media type with all optional parameters stripped.
              </para>
        <para>
                The media type is used to resolve URI fragments in a document.  Fragments are resolved for any media types
                specified as XML Media Types in <c>RFC3023</c>.
              </para>
      </remarks>
      <seealso href="http://tools.ietf.org/html/rfc3023"/>
    </member>
    <member name="T:XmlPrime.Serialization.CheckNamespaces">
      <summary>
            Specifies what checking should be done for namespace URI values.
            </summary>
    </member>
    <member name="F:XmlPrime.Serialization.CheckNamespaces.Auto">
      <summary>
            The serializer determines what namespace checking should be perform and performs the appropriate checking.
            If the method is set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.CanonicalOutputMethod"/> then this is
            equivalent to <see cref="F:XmlPrime.Serialization.CheckNamespaces.CheckAbsolute"/>, otherwise this is equivalent to <see cref="F:XmlPrime.Serialization.CheckNamespaces.None"/></summary>
    </member>
    <member name="F:XmlPrime.Serialization.CheckNamespaces.None">
      <summary>
            No namespace checking is performed.
            </summary>
    </member>
    <member name="F:XmlPrime.Serialization.CheckNamespaces.CheckAbsolute">
      <summary>
            An <c>SERE0003</c><see cref="T:XmlPrime.XdmException"/> is thrown if a namespace URI is encountered that is not an
            absolute URI.
            </summary>
    </member>
    <member name="T:XmlPrime.StaticContextSettings">
      <summary>
            	This serves as a base class for the user-controllable static context settings of XQuery 1.0, XPath 2.0 and XSLT 2.0.
            </summary>
      <remarks>
        <para>The static context of an expression is the information that is available during static analysis of the 
            		expression, prior to its evaluation.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xpath20/#static_context">[XML Path Language (XPath) 2.0] 2.1.1 Static Context</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#static_context">[XQuery 1.0: An XML Query Language] 2.1.1 Static Context</seealso>
      <seealso href="http://www.w3.org/TR/xslt20/#static-context">[XSL Transformations (XSLT) Version 2.0] 5.4.1 Initializing the Static Context</seealso>
    </member>
    <member name="M:XmlPrime.StaticContextSettings.LoadXPathFunctionsSchema">
      <summary>
            Returns a new <see cref="T:System.Xml.Schema.XmlSchema"/> instance corresponding to the schemas
            defined in XQuery Functions and Operators 3.1.
            </summary>
      <returns>A new <see cref="T:System.Xml.Schema.XmlSchema"/> instance.</returns>
    </member>
    <member name="M:XmlPrime.StaticContextSettings.#ctor(System.Xml.XmlNameTable)">
      <overloads>
            	Initializes a new instance of the <see cref="T:XmlPrime.StaticContextSettings"/> class.
            </overloads>
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.StaticContextSettings"/> class with the specified <see cref="T:System.Xml.XmlNameTable"/>.
            </summary>
      <param name="nameTable">The <see cref="T:System.Xml.XmlNameTable"/> instance to be used for atomized string comparisons.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nameTable"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="M:XmlPrime.StaticContextSettings.#ctor(System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.StaticContextSettings"/> class with the specified <see cref="T:System.Xml.XmlNameTable"/> and in scope namespaces.
            </summary>
      <param name="nameTable">The <see cref="T:System.Xml.XmlNameTable"/> instance to be used for atomized string comparisons.</param>
      <param name="namespaceResolver">
            	An <see cref="T:System.Xml.IXmlNamespaceResolver"/> defining the in scope namespaces, or <see langword="null"/> if no
            	namespaces are in scope.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nameTable"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="M:XmlPrime.StaticContextSettings.ImportSchema(System.String)">
      <summary>
            	Imports the schema with the specified target namespace.
            </summary>
      <param name="targetNamespace">The target namespace to import.</param>
      <remarks>
        <para>
            		The schema with the specified namespace is implicitly imported in all modules of the XQuery program, XPath
            		Expression or XSL Transformation.  This is equivalent to adding an <c>import schema</c> declaration to every
            		module.
            	</para>
        <para>
            		The target namespace must correspond to a schema within the <see cref="P:XmlPrime.StaticContextSettings.Schemas"/>,
            or must be the XQueyr Functions and Operators schema <c>"http://www.w3.org/2005/xpath-functions"</c>.
            	</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetNamespace"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:XmlPrime.StaticContextSettings.Schemas"/> does not contain a schema with the specified target namespace.</exception>
    </member>
    <member name="M:XmlPrime.StaticContextSettings.ImportSchema(System.Xml.Schema.XmlSchema)">
      <summary>
            	Adds a schema to the set of available schemas, and imports its namespace.
            </summary>
      <param name="schema">The schema to import.</param>
      <remarks>
        <para>
            		The schema specified is added to <see cref="P:XmlPrime.StaticContextSettings.Schemas"/>, and the namespace of the schema is implicitly
            		imported in all modules of the XQuery Program, XPath Expression or XSL Transformation.
            	</para>
        <para>
            		If the namespace of the schema is explicitly imported (via an <c>import module</c> statement) then the
            		declaration in the query is ignored, and only the schemas added to the static context settings will be used.
            	</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schema"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Xml.Schema.XmlSchema.TargetNamespace"/> property on <paramref name="schema"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.StaticContextSettings.ImportModule(System.String)">
      <summary>
            	Imports the library with the specified target namespace.
            </summary>
      <param name="targetNamespace">The target namespace to import.</param>
      <remarks>
        <para>
            		The target namespace is implicitly imported in all modules of the XQuery Program, XPath Expression or XSL Transformation.
            		This is equivalent to the following XQuery declaration:
            	</para>
        <code>
            		import module namespace "<paramref name="targetNamespace"/>";
            	</code>
        <para>
            		This method overrides any location hints specified in <c>import module</c> statements in the query body, and
            		if no modules in this namespace are added to <see cref="P:XmlPrime.StaticContextSettings.Libraries"/> then an <see cref="T:XmlPrime.XdmException"/>
            		will be raised when the query is compiled.
            	</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetNamespace"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.StaticContextSettings.DeclareVariable(System.Xml.XmlQualifiedName,XmlPrime.XdmType)">
      <overloads>
            Declares a external variable.
            </overloads>
      <summary>
            Declares an external variable with the specified name and type.
            </summary>
      <param name="name">The qualified name of the variable</param>
            /// <param name="type">The type of the variable</param><exception cref="T:System.ArgumentNullException"><paramref name="name"/> is <see langword="null"/>.</exception><remarks><para>
            If <paramref name="type"/> is not <see langword="null"/>, then calling this method is equivalent to the following XQuery declaration:
            </para><code>
            declare variable <paramref name="name"/> as <paramref name="type"/> external;
            </code><para>
            If <paramref name="name"/> is  <see langword="null"/>, then calling this method is equivalent to the following XQuery declaration:
            </para><code>
            declare variable <paramref name="name"/> external;
            </code></remarks></member>
    <member name="M:XmlPrime.StaticContextSettings.DeclareVariable(System.Xml.XmlQualifiedName)">
      <summary>
            Declares an external variable with the specified name.
            </summary>
      <param name="name">The qualified name of the variable</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> is <see langword="null"/>.</exception>
      <remarks>
        <para>
            Calling this method is equivalent to the following XQuery declaration:
            </para>
        <code>
            declare variable <paramref name="name"/> external;
            </code>
      </remarks>
    </member>
    <member name="M:XmlPrime.StaticContextSettings.DeclareKey(System.Xml.XmlQualifiedName,System.String,System.String,XmlPrime.AnyUri)">
      <summary>
            Declares a key.
            </summary>
      <param name="name">The qualified name of the key.</param>
      <param name="match">An XSLT pattern which identifies all nodes that match constitute the key.</param>
      <param name="use">An XPath expression which defines the key value.</param>
      <param name="collation">The collation to use when deciding whether two strings are equal for the purposes of key matching, or <see langword="null"/> to use the default collation.</param>
    </member>
    <member name="M:XmlPrime.StaticContextSettings.DeclareNamespace(System.String,System.String)">
      <summary>
            Declares a namespace prefix and associates it with a namespace URI, adding the <c>(prefix, URI)</c> pair to the set of statically known namespaces.
            </summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="namespaceUri">The namespace URI.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix"/> is <see langword="namespaceUri"/>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="prefix"/> is not a valid <c>xs:NCName</c> (other than the empty string) or is "xml" or "xmlns",
            or <paramref name="namespaceUri"/> is not a valid <c>xs:anyURI</c> or is the empty string (when <paramref name="prefix"/> is not the empty string) or is
            <c>"http://www.w3.org/XML/1998/namespace"</c>.
            </exception>
      <remarks>
        <para>
            If <paramref name="prefix"/> is not the empty string then calling this method is equivalent to the following XQuery declaration:
            </para>
        <code>
            declare namespace <paramref name="prefix"/> = "<paramref name="namespaceUri"/>";
            </code>
        <para>
            If <paramref name="prefix"/> is the empty string, then calling this method is equivalent to the following XQuery declaration:
            </para>
        <code>
            declare default element namespace "<paramref name="namespaceUri"/>";
            </code>
        <para>These namespace declarations may be overridden by any namespace declarations made in the body of an XQuery program, but take precedence over those
            specified in <see cref="P:XmlPrime.StaticContextSettings.Namespaces"/>.
            </para>
      </remarks>
    </member>
    <member name="M:XmlPrime.StaticContextSettings.ImportModule(XmlPrime.XdmModule)">
      <summary>
            	Adds the specified module to the set of available libraries and imports the library with the module's namespace.
            </summary>
      <param name="module">A module to import.</param>
      <remarks>
        <para>
            		The module specified is added to <see cref="P:XmlPrime.StaticContextSettings.Libraries"/>, and the namespace of the module is implicitly
            		imported in all modules of the XQuery Program, XPath Expression or XSL Transformation.
            	</para>
        <para>
            		If the namespace of the module is explicitly imported (via an <c>import module</c> statement) then the
            		declaration in the query is ignored, and only the libraries added to the static context settings will be used.
            	</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="module"/> is <see langword="null"/>.</exception>
    </member>
    <member name="P:XmlPrime.StaticContextSettings.DocumentTypeResolver">
      <summary>
            	Sets the resolver used to compute the type of calls to the <c>fn:doc</c> function.
            </summary>
      <remarks>
        <para>
            		If this property is set to <see langword="null"/> then the type of each call to the <c>fn:doc</c> function
            		is <c>document-node()</c> (or <c>document-node()?</c> if <see cref="T:XmlPrime.TypeCheckingMode"/> is set to 
            		<see cref="F:XmlPrime.TypeCheckingMode.Pedantic"/>).
            	</para>
        <para>
            		By default this is set to <see langword="null"/>.
            	</para>
      </remarks>
      <value>
            	The <see cref="T:XmlPrime.IDocumentTypeResolver"/> used to compute the static type of calls to the <c>fn:doc</c> function.
            </value>
      <seealso href="http://www.w3.org/TR/xpath20/#dt-known-docs">[XML Path Language (XPath) 2.0] 2.1.1 Static Context</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#dt-known-docs">[XQuery 1.0: An XML Query Language] 2.1.1 Static Context</seealso>
    </member>
    <member name="P:XmlPrime.StaticContextSettings.CollectionTypeResolver">
      <summary>
            	Sets the resolver used to compute the type of calls to the <c>fn:collection</c> function .
            </summary>
      <remarks>
        <para>
            		If this property is set to <see langword="null"/> then the type of each call to the <c>fn:collection</c>
            		function is <c>node()*</c>.
            	</para>
        <para>
            		By default this is set to <see langword="null"/>.
            	</para>
      </remarks>
      <value>
            	The <see cref="T:XmlPrime.ICollectionTypeResolver"/> used to compute the static type of calls to the <c>fn:collection</c> function.
            </value>
      <seealso href="http://www.w3.org/TR/xpath20/#dt-known-collections">[XML Path Language (XPath) 2.0] 2.1.1 Static Context</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#dt-known-collections">[XQuery 1.0: An XML Query Language] 2.1.1 Static Context</seealso>
    </member>
    <member name="P:XmlPrime.StaticContextSettings.BaseURI">
      <summary>
            	Gets or sets the base URI.
            </summary>
      <value>An <see cref="T:XmlPrime.AnyUri"/> instance representing the base URI.</value>
      <remarks>
        <para>
            		This is a URI, used when necessary in the resolution of relative URIs, for example, by the 
            		<c>fn:resolve-uri</c> function.
            	</para>
        <para>
            		If the value is <see langword="null"/>, then the base URI is set to the URI of the query or transformation.
            		This is the default value.
            	</para>
        <para>
            		If the value is a relative URI, it will resolved to an absolute URI using the URI of the query or 
            		transformation.
            	</para>
        <para>
            		This can be overridden with a <c>declare base-uri</c> declaration in a query.
            	</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xpath20/#dt-base-uri">[XML Path Language (XPath) 2.0] 2.1.1 Static Context</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#dt-base-uri">[XQuery 1.0: An XML Query Language] 2.1.1 Static Context</seealso>
    </member>
    <member name="P:XmlPrime.StaticContextSettings.CompilationWarnings">
      <summary>
            	Gets or sets a value specifying which compilation warnings should be reported.
            </summary>
      <value>
            	A <see cref="P:XmlPrime.StaticContextSettings.CompilationWarnings"/> value.
            </value>
    </member>
    <member name="P:XmlPrime.StaticContextSettings.CodeGeneration">
      <summary>
            	Gets or sets a value specifying which code generation method should be used.
            </summary>
      <value>
            	A <see cref="P:XmlPrime.StaticContextSettings.CodeGeneration"/> value.
            </value>
    </member>
    <member name="P:XmlPrime.StaticContextSettings.EnableProfiling">
      <summary>
            Gets or sets a value indicating whether profiling is enabled.
            </summary>
      <value>
        <see langword="true"/> if profiling is enabled; otherwise, <see langword="false"/>.
            </value>
      <remarks>
        <para>When enabled, the compiled XPath expression, XQuery program or XSLT stylesheet will emit profiling events via
            <see cref="E:XmlPrime.DynamicContextSettings.Execution"/>.</para>
        <para>Profiling is a feature available only in the comercially licenced product.</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.StaticContextSettings.ContextItemType">
      <summary>
            	Gets or sets the static type of the initial context item.
            </summary>
      <value>An <see cref="T:XmlPrime.XdmType"/> instance representing the static type of the initial context item.</value>
      <remarks>
        <p>The default value is <c>item()</c>.</p>
        <p>The default can be overriden in XQuery 3.0 using a 
            <see href="http://www.w3.org/TR/xquery-30/#id-context-item-declarations">Context Item Declaration</see>.</p>
      </remarks>
      <seealso href="http://www.w3.org/TR/xpath20/#dt-context-item-static-type">[XML Path Language (XPath) 2.0] 2.1.1 Static Context</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#dt-context-item-static-type">[XQuery 1.0: An XML Query Language] 2.1.1 Static Context</seealso>
    </member>
    <member name="P:XmlPrime.StaticContextSettings.DefaultCollation">
      <summary>
            	Gets or sets the default collation URI.
            </summary>
      <value>An <see cref="T:XmlPrime.AnyUri"/> instance specifying default collation URI.</value>
      <remarks>
        <para>
            		The default collation is the collation that is used by functions and operators that require a collation if 
            		no other collation is specified.
            	</para>
        <para>
            		A collation is a specification of the manner in which strings and URIs are compared and, by extension, 
            		ordered.
            	</para>
        <para>
            		By default the value of this property is the default collation is the codepoint collation
            		(<c>http://www.w3.org/2005/xpath-functions/collation/codepoint</c>).
            	</para>
        <para>
            		This can be overridden with a <c>declare default collation</c> declaration in a query.
            	</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:XmlPrime.StaticContextSettings.DefaultCollation"/> was set to <see langword="null"/>.</exception>
      <seealso href="http://www.w3.org/TR/xpath20/#dt-def-collation">[XML Path Language (XPath) 2.0] 2.1.1 Static Context</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#dt-def-collation">[XQuery 1.0: An XML Query Language] 2.1.1 Static Context</seealso>
    </member>
    <member name="P:XmlPrime.StaticContextSettings.DefaultElementNamespace">
      <summary>
            	Gets or sets the default namespace for element and type names.
            </summary>
      <value>A <see cref="T:System.String"/> representing the default namespace for elements and types.</value>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:XmlPrime.StaticContextSettings.DefaultElementNamespace"/> was set to <see langword="null"/></exception>
      <exception cref="T:System.ArgumentException">Raised if <see cref="P:XmlPrime.StaticContextSettings.DefaultElementNamespace"/> was set to <c>http://www.w3.org/XML/1998/namespace</c>.</exception>
      <remarks>
        <para>Setting this property is equivalent to calling <c>DeclareNamespace(string.Empty, value)</c>.</para>
        <para>
            		Unless explicitly set, the default element namespace is the namespace bound to the empty prefix by the 
            		<see cref="T:System.Xml.IXmlNamespaceResolver"/> specified by the <see cref="P:XmlPrime.StaticContextSettings.Namespaces"/> property.
            	</para>
        <para>This is a namespace URI or <see cref="F:System.String.Empty"/>.  The namespace URI, if present, is used for any 
            		unprefixed qualified names appearing in a position where an element or type name is expected.</para>
        <para>This can be overridden with a <c>declare default element namespace</c> declaration in the query.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xpath20/#dt-def-elemtype-ns">[XML Path Language (XPath) 2.0] 2.1.1 Static Context</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#dt-def-elemtype-ns">[XQuery 1.0: An XML Query Language] 2.1.1 Static Context</seealso>
    </member>
    <member name="P:XmlPrime.StaticContextSettings.DefaultFunctionNamespace">
      <summary>
            	Gets or sets the default namespace for function names.
            </summary>
      <value>A <see cref="T:System.String"/> representing the default namespace for function names.</value>
      <remarks>
        <para>This is a namespace URI or <see cref="F:System.String.Empty"/>.  The namespace URI, if present, is used for any 
            		unprefixed qualified names appearing in a position where a function name is expected.</para>
        <para>This can be overridden with a <c>declare default function namespace</c> declaration in the query.</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:XmlPrime.StaticContextSettings.DefaultFunctionNamespace"/> was set to <see langword="null"/></exception>
      <seealso href="http://www.w3.org/TR/xpath20/#dt-def-fn-ns">[XML Path Language (XPath) 2.0] 2.1.1 Static Context</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#dt-def-fn-ns">[XQuery 1.0: An XML Query Language] 2.1.1 Static Context</seealso>
    </member>
    <member name="P:XmlPrime.StaticContextSettings.Libraries">
      <summary>
            	Gets or sets the set of additional libraries available to the query.
            </summary>
      <value>
            	A <see cref="T:XmlPrime.LibrarySet"/> containing libraries that are available to the query.
            </value>
      <remarks>
        <para>
            		By default this is an empty collection.  The default function libraries are added to the collection when the
            		query or expression is compiled
            	</para>
        <para>
            		In order to use a library it must be imported, either by using an <c>import module</c> statement in the
            		query, or by using the <see cref="M:XmlPrime.StaticContextSettings.ImportModule(System.String)"/> method.
            	</para>
        <para>
            		If an <c>import module</c> declaration in an XQuery program references a namespace which already has 
            		corresponding modules in the library set, then these modules are used and the location hints are ignored.
            		Otherwise the location hints are resolved, and the resulting modules are added to the library set.
            	</para>
        <para>
            		After compilation the library set also contains all modules that have been imported by the query (either by
            		the main module or by another library module that has been imported).  Sharing the library set amongst
            		multiple queries will avoid additional libraries from being recompiled.
            	</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">An attempt is made to set this property to <see langword="null"/>.</exception>
    </member>
    <member name="P:XmlPrime.StaticContextSettings.Namespaces">
      <summary>
            	Gets or sets the statically known namespaces.
            </summary>
      <value>An <see cref="T:System.Xml.IXmlNamespaceResolver"/> containing the statically known namespaces.</value>
      <remarks>
        <para>
            		The namespace bound to <see cref="F:System.String.Empty"/> is interpreted as the default element namespace.
            	</para>
        <para>
            		In XQuery this property defaults to <c>fn</c>, <c>xml</c>, <c>xs</c>, <c>xsi</c> and <c>local</c>.
            		In XPath and XSL the default value just contains the <c>xml</c> namespace.
            	</para>
        <para>
            		The initial in scope namespaces are made accessible to all modules that are compiled during compilation.
            	</para>
        <para>
            		These namespace declarations can be overridden in XQuery with <c>declare namespace</c> declarations.
            	</para>
      </remarks>
      <seealso cref="P:XmlPrime.StaticContextSettings.DefaultElementNamespace"/>
      <seealso href="http://www.w3.org/TR/xpath20/#dt-static-namespaces">[XML Path Language (XPath) 2.0] 2.1.1 Static Context</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#dt-static-namespaces">[XQuery 1.0: An XML Query Language] 2.1.1 Static Context</seealso>
    </member>
    <member name="P:XmlPrime.StaticContextSettings.NameTable">
      <summary>
            	Gets the <see cref="T:System.Xml.XmlNameTable"/> to be used for atomized string comparisons.
            </summary>
      <value>
            	The <see cref="T:System.Xml.XmlNameTable"/> that stores all the atomized strings used statically in queries or
            	transformations which use this <see cref="T:XmlPrime.StaticContextSettings"/> object.
            </value>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:XmlPrime.StaticContextSettings.NameTable"/> was set to <see langword="null"/>.</exception>
      <remarks>
        <para>
            		All data sources, such as <see cref="T:System.Xml.XPath.XPathNavigator"/> instances passed as query parameters or
            		<see cref="T:System.Xml.XmlReader"/> instance used to read input documents MUST use this <see cref="T:System.Xml.XmlNameTable"/>.
            	</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.StaticContextSettings.OptimizationLevel">
      <summary>
            	Gets or sets the level of optimization to perform when compiling an XPath expressiona, an XQuery program or
            	an XSL transformation.
            </summary>
      <value>A member of the <see cref="T:XmlPrime.OptimizationLevel"/> enumeration.</value>
    </member>
    <member name="P:XmlPrime.StaticContextSettings.XmlVersion">
      <summary>
            	Gets or sets the XML version to be used.
            </summary>
            A member of the
            <see cref="T:XmlPrime.XmlVersion"/>
            enumeration.
            <remarks><para>This parameter specifies the version of XML to use.</para><para>
            		By default this property is set to <see cref="F:XmlPrime.XmlVersion.Xml11"/>.
            	</para></remarks></member>
    <member name="P:XmlPrime.StaticContextSettings.CollationResolver">
      <summary>
            	Gets or sets the resolver for collation URIs .
            </summary>
      <value>The collation resolver.</value>
      <remarks>
        <para>
            		This defines the collations that are available for use in processing queries and expressions.
            	</para>
        <para>
            		A collation is a specification of the manner in which strings and URIs are compared and, by extension,
            		ordered.
            	</para>
        <para>
            		The resolver is used for all collations other than the codepoint collation 
            		(<c>http://www.w3.org/2005/xpath-functions/collation/codepoint</c>).
            	</para>
        <para>
            		If this is set to <see langword="null"/> then the codepoint collation is the only collation available to
            		the query.
            	</para>
        <para>
            		By default the <see cref="P:XmlPrime.CollationResolver.CultureCollationResolver"/> is used.
            	</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xpath20/#dt-static-collations">[XML Path Language (XPath) 2.0] 2.1.1 Static Context</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#dt-static-collations">[XQuery 1.0: An XML Query Language] 2.1.1 Static Context</seealso>
    </member>
    <member name="P:XmlPrime.StaticContextSettings.Schemas">
      <summary>
            	Gets or sets the set of schemas used for type checking and schema validation in the query.
            </summary>
      <value>
            	The <see cref="T:System.Xml.Schema.XmlSchemaSet"/> containing the schemas used for type checking and schema validation.
            </value>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:XmlPrime.StaticContextSettings.Schemas"/> was set to <see langword="null"/>.</exception>
      <remarks>
        <para>
            		If an <c>import schema</c> declaration references a namespace that is already defined in this schema set,
            		then no additional schemas are imported.
            	</para>
        <para>
            		Any schemas imported by a query will be added to this <see cref="T:System.Xml.Schema.XmlSchemaSet"/>.  The resolver specified
            		by the <see cref="P:System.Xml.Schema.XmlSchemaSet.XmlResolver"/> property is used to resolve schema location hints in
            		<c>import schema</c> declarations.
            	</para>
        <para>
            		Documents passed into the query can be validated against this schema set in order to take full advantage of 
            		their type information.
            	</para>
        <para class="warning">
            		If <see cref="T:XmlPrime.TypeCheckingMode"/> is not set to <see cref="F:XmlPrime.TypeCheckingMode.Optimistic"/> then the schemas
             must not be modified after the query has compiled.  If a module is compiled independently then this schema set
             must contain all the schemas that are used anywhere in the query.  This is because during compilation the static
             typing rules rely on knowing about any type that extends any other type.  If the schemas change after compilation
             then the static typing judgements become unsound, and the query will have an undefined result.
             </para>
        <para>
            		If <see cref="T:XmlPrime.TypeCheckingMode"/> is set to <see cref="F:XmlPrime.TypeCheckingMode.Optimistic"/> then XmlPrime makes no
             assumptions about external schemas, and so it is fine for other schema types to be introduced before the query is run.
             </para>
        <para>
            		By default this is a new <see cref="T:System.Xml.Schema.XmlSchemaSet"/> instance.
            	</para>
      </remarks>
    </member>
    <member name="E:XmlPrime.StaticContextSettings.CompilationError">
      <summary>
            	Occurs when a compilation error is encountered.
            </summary>
      <remarks>
            	If the event is not registered, the first compilation error will cause an exception to be raised.
            </remarks>
    </member>
    <member name="P:XmlPrime.StaticContextSettings.InputSettings">
      <summary>
            	Gets or sets the input settings.
            </summary>
      <value>The input settings.</value>
    </member>
    <member name="P:XmlPrime.StaticContextSettings.ParameterTypes">
      <summary>
            	Gets the parameter types.
            </summary>
      <value>The parameter types.</value>
    </member>
    <member name="P:XmlPrime.StaticContextSettings.Parameters">
      <summary>
            	Gets the parameter declarations.
            </summary>
      <value>The parameter declarations.</value>
    </member>
    <member name="P:XmlPrime.StaticContextSettings.DecimalFormats">
      <summary>
            Gets the decimal formats.
            </summary>
      <value>The decimal formats.</value>
    </member>
    <member name="P:XmlPrime.StaticContextSettings.Keys">
      <summary>
            Gets the collection of declared keys.
            </summary>
      <value>The collection of declared keys.</value>
    </member>
    <member name="T:XmlPrime.UnparsedTextDocumentResolver">
      <summary>
            An implementation of the <see cref="T:XmlPrime.IDocumentResolver"/> interface that retrieves documents as resources from
            the document set.  This ensures consistency with the <c>unparsed-text</c> function.
            </summary>
    </member>
    <member name="M:XmlPrime.UnparsedTextDocumentResolver.#ctor(System.Xml.XmlReaderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.UnparsedTextDocumentResolver"/> class.
            </summary>
      <param name="readerSettings">The reader settings to use when parsing a document.</param>
      <remarks>
            Since all resources are retrieved from the document set, the <see cref="P:System.Xml.XmlReaderSettings.XmlResolver"/>
            property of <paramref name="readerSettings"/> is ignored.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="readerSettings"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.UnparsedTextDocumentResolver.ResolveDocument(XmlPrime.AnyUri,XmlPrime.DocumentSet,System.Xml.XmlNameTable,XmlPrime.InputSettings)">
      <summary>
            Resolves a URI to a document.
            </summary>
      <param name="uri">The absolute URI of the document to resolve.</param>
      <param name="documentSet">The document set which can be used to retrieve resources required to retrieve the document (for example this
            can be used to retrieve an unparsed resource).</param>
      <param name="nameTable">The name table to use to load the document.</param>
      <param name="inputSettings">The input settings.</param>
      <returns>
            An <see cref="T:System.Xml.XPath.IXPathNavigable"/> instance representing the document for the specified URI, or
            <see langword="null"/> if the URI can not be mapped to a document.
            </returns>
      <remarks>
        <para>
            A return value of <see langword="null"/> indicates that <paramref name="uri"/> is not supported by this
            resolver (for example an unsupported URI scheme).  If the URI does have meaning to this resolver but there was
            an error retrieving the document then an exception should be thrown.
            </para>
        <para>
            The document URI of the returned document must either be <paramref name="uri"/> or the empty string.
            </para>
      </remarks>
    </member>
    <member name="T:XmlPrime.CompilationErrorEventArgs">
      <summary>
            Provides data for the <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> compilation error event. 
            </summary>
      <remarks>
        <para>The <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event occurs during compilation of
            an XQuery program, an XPath expression or an XSL transformation.</para>
      </remarks>
      <seealso cref="E:XmlPrime.StaticContextSettings.CompilationError"/>
    </member>
    <member name="P:XmlPrime.CompilationErrorEventArgs.CompilationError">
      <summary>
            Gets the <see cref="T:XmlPrime.XdmException"/> describing this compilation error.
            </summary>
      <value>An <see cref="T:XmlPrime.XdmException"/> object.  This value will never be <see langword="null"/></value>
    </member>
    <member name="P:XmlPrime.CompilationErrorEventArgs.Severity">
      <summary>
            Gets the severity of this compilation error.
            </summary>
      <value>A member of the <see cref="T:XmlPrime.Severity"/> enumeration.</value>
    </member>
    <member name="T:XmlPrime.DecimalFormat">
      <summary>
              A class representing information for formatting numbers.
            </summary>
      <remarks>
        <para>This class represents information used for formatting numbers using the <c>fn:format-number</c>
                function defined in XPath and XQuery Functions and Operators 3.0.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xpath-functions-30/#func-format-date">9.8.2 fn:format-date [XPath and XQuery Functions and Operators 3.0]</seealso>
    </member>
    <member name="M:XmlPrime.DecimalFormat.#ctor">
      <overloads>Initializes a new instance of the <see cref="T:XmlPrime.DecimalFormat"/> class.</overloads>
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.DecimalFormat"/> class.
            </summary>
    </member>
    <member name="M:XmlPrime.DecimalFormat.#ctor(XmlPrime.DecimalFormat)">
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.DecimalFormat"/> class from another <see cref="T:XmlPrime.DecimalFormat"/>.
            </summary>
      <exception cref="T:System.ArgumentNullException">Raised if <paramref name="decimalFormat"/> is <see langword="null"/>.</exception>
    </member>
    <member name="P:XmlPrime.DecimalFormat.DecimalSeparator">
      <summary>
              Gets or sets the character used for the decimal-separator-sign,
            </summary>
      <value>The Unicode codepoint of the decimal separator.</value>
      <exception cref="T:System.ArgumentException">Raised if <see cref="P:XmlPrime.DecimalFormat.DecimalSeparator"/> is set to an invalid value for an XML character.</exception>
      <remarks>
        <para>The default value is "."</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.DecimalFormat.Digit">
      <summary>
              Gets or sets the  character used for the digit-sign in the picture string.
            </summary>
      <value>The Unicode codepoint of the digit-sign.</value>
      <exception cref="T:System.ArgumentException">Raised if <see cref="P:XmlPrime.DecimalFormat.Digit"/> is set to an invalid value for an XML character.</exception>
      <remarks>
        <para>The default value is "#"</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.DecimalFormat.ExponentSeparator">
      <summary>
              Gets or sets the character used for the exponent-separator-sign.
            </summary>
      <value>The Unicode codepoint of the pattern separator.</value>
      <exception cref="T:System.ArgumentException">Raised if <see cref="P:XmlPrime.DecimalFormat.ExponentSeparator"/> is set to an invalid value for an XML character.</exception>
      <remarks>
        <para>The default value is "e".</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.DecimalFormat.GroupingSeparator">
      <summary>
              Gets or sets the character used for the grouping-sign, which is typically used as a thousands separator.
            </summary>
      <value>The Unicode codepoint of the grouping-sign.</value>
      <exception cref="T:System.ArgumentException">Raised if <see cref="P:XmlPrime.DecimalFormat.GroupingSeparator"/> is set to an invalid value for an XML character.</exception>
      <remarks>
        <para>The default value is ","</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.DecimalFormat.Infinity">
      <summary>
              Gets or sets the string used for the infinity-symbol.
            </summary>
      <value>The infinity string.</value>
      <exception cref="T:System.ArgumentNullException">Raised if <see cref="P:XmlPrime.DecimalFormat.Infinity"/> is set to <see langword="null"/>.</exception>
      <remarks>
        <para>The default value is "Infinity".</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.DecimalFormat.MinusSign">
      <summary>
              Gets or sets the character used for the minus-symbol.
            </summary>
      <value>The Unicode codepoint of the minus sign.</value>
      <exception cref="T:System.ArgumentException">Raised if <see cref="P:XmlPrime.DecimalFormat.MinusSign"/> is set to an invalid value for an XML character.</exception>
      <remarks>
        <para>The default value is "-".</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.DecimalFormat.NotANumber">
      <summary>
              Gets or sets the string used for the NaN-symbol, which is used to represent the value NaN (not-a-number).
            </summary>
      <value>The NaN string.</value>
      <exception cref="T:System.ArgumentNullException">Raised if <see cref="P:XmlPrime.DecimalFormat.NotANumber"/> is set to <see langword="null"/>.</exception>
      <remarks>
        <para>The default value is "NaN".</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.DecimalFormat.PatternSeparator">
      <summary>
              Gets or sets the character used for the pattern-separator-sign, which separates positive and negative sub-pictures in a picture string.
            </summary>
      <value>The Unicode codepoint of the pattern separator.</value>
      <exception cref="T:System.ArgumentException">Raised if <see cref="P:XmlPrime.DecimalFormat.PatternSeparator"/> is set to an invalid value for an XML character.</exception>
      <remarks>
        <para>The default value is ";".</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.DecimalFormat.PerMille">
      <summary>
              Gets or sets the character used for the per-mille-sign.
            </summary>
      <value>The Unicode codepoint of the per mille sign.</value>
      <exception cref="T:System.ArgumentException">Raised if <see cref="P:XmlPrime.DecimalFormat.PerMille"/> is set to an invalid value for an XML character.</exception>
      <remarks>
        <para>The default value is "‰" (\u2030).</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.DecimalFormat.Percent">
      <summary>
              Gets or sets the character used for the percent-sign.
            </summary>
      <value>The Unicode codepoint of the percent sign.</value>
      <exception cref="T:System.ArgumentException">Raised if <see cref="P:XmlPrime.DecimalFormat.Percent"/> is set to an invalid value for an XML character.</exception>
      <remarks>
        <para>The default value is "%".</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.DecimalFormat.ZeroDigit">
      <summary>
              Gets or sets the character used for the digit-zero-sign.
            </summary>
      <value>The Unicode codepoint of the zero digit.</value>
      <exception cref="T:System.ArgumentException">Raised if <see cref="P:XmlPrime.DecimalFormat.ZeroDigit"/> is set to character which is not a digit (category Nd in the Unicode property database) with numeric value zero.</exception>
      <remarks>
        <para>The default value is "0".</para>
        <para>This character must be a digit (category Nd in the Unicode property database), and it must have the numeric value zero.</para>
      </remarks>
    </member>
    <member name="T:XmlPrime.Severity">
      <summary>
            Specifies the severity of a compilation error event.
            </summary>
      <remarks>
        <para>
            The <see cref="T:XmlPrime.Severity"/> enumeration is used by <see cref="T:XmlPrime.CompilationErrorEventArgs"/> to describe the
            severity of an event which occurred during compilation.  The compiler is able to attempt recovery from warnings,
            while errors are considered fatal.
            </para>
        <para>
            Whilst a fatal error is unrecoverable (the query cannot be compiled), if the error is ignored then processing
            can continue to allow more than one fatal error to be reported.
            </para>
      </remarks>
    </member>
    <member name="F:XmlPrime.Severity.Warning">
      <summary>
            The error is recoverable.
            </summary>
    </member>
    <member name="F:XmlPrime.Severity.Error">
      <summary>
            The error is unrecoverable.
            </summary>
    </member>
    <member name="T:XmlPrime.ConcurrentNameTable">
      <summary>
            Implements an efficient (lock free) thread-safe <see cref="T:System.Xml.XmlNameTable"/>.
            </summary>
      <remarks>
            All public and protected members of <see cref="T:XmlPrime.ConcurrentNameTable"/> are thread-safe and may be used
            concurrently from multiple threads.
            </remarks>
    </member>
    <member name="M:XmlPrime.ConcurrentNameTable.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.ConcurrentNameTable"/> class.
            </summary>
    </member>
    <member name="M:XmlPrime.ConcurrentNameTable.Add(System.Char[],System.Int32,System.Int32)">
      <overloads>Atomizes the specified string and adds it to the <see cref="T:XmlPrime.ConcurrentNameTable"/>.</overloads>
      <summary>
            Atomizes the specified string and adds it to the <see cref="T:XmlPrime.ConcurrentNameTable"/>.
            </summary>
      <param name="array">The character array containing the name to add.</param>
      <param name="offset">Zero-based index into the array specifying the first character of the name.</param>
      <param name="length">The number of characters in the name.</param>
      <returns>
            The new atomized string or the existing one if it already exists. If length is less than or equal to zero, 
            <see cref="F:System.String.Empty"/> is returned.
            </returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="array"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="offset"/> and <paramref name="length"/> identify a range that exceeds the bounds of 
            <paramref name="array"/></exception>
    </member>
    <member name="M:XmlPrime.ConcurrentNameTable.Add(System.String)">
      <summary>
            Atomizes the specified string and adds it to the <see cref="T:XmlPrime.ConcurrentNameTable"/>.
            </summary>
      <param name="array">The name to add.</param>
      <returns>
            The new atomized string or the existing one if it already exists.
            </returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="array"/> is <see langword="null"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.ConcurrentNameTable.Get(System.Char[],System.Int32,System.Int32)">
      <overloads>Gets the atomized string containing the same value as the specified string.</overloads>
      <summary>
            Gets the atomized string containing the same characters as the specified range of characters in the given array.
            </summary>
      <param name="array">The character array containing the name to look up.</param>
      <param name="offset">The zero-based index into the array specifying the first character of the name.</param>
      <param name="length">The number of characters in the name.</param>
      <returns>
            The atomized string or <see langword="null"/> if the string has not already been atomized. If 
            <paramref name="length"/> is less than or equal to zero, <see cref="F:System.String.Empty"/> is returned.
            </returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="array"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="offset"/> and <paramref name="length"/> identify a range that exceeds the bounds of 
            <paramref name="array"/></exception>
    </member>
    <member name="M:XmlPrime.ConcurrentNameTable.Get(System.String)">
      <summary>
            Gets the atomized string containing the same value as the specified string.
            </summary>
      <param name="array">The name to look up.</param>
      <returns>
            The atomized string or <see langword="null"/> if the string has not already been atomized.
            </returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="array"/> is <see langword="null"/>.</exception>
    </member>
    <member name="T:XmlPrime.SharedDocumentSet">
      <summary>
            A document set wrapping a static document set.
            </summary>
      <threadsafety static="true" instance="true"/>
      <remarks>
        <para>
            The <see cref="T:XmlPrime.SharedDocumentSet"/> class wraps a static <see cref="T:XmlPrime.DocumentSet"/>.  Any documents and 
            collections in the static document set are exposed through the <see cref="T:XmlPrime.SharedDocumentSet"/>; but any
            documents added (or marked as unavailable) do not affect the underlying <see cref="T:XmlPrime.DocumentSet"/>.
            </para>
        <para>
            This allows a set of static documents and collections to be shared between XQuery programs, XSL transformations
            and XPath expressions, whilst documents loaded (or failed to load) will not be cached in the (static) document
            set.
            </para>
      </remarks>
    </member>
    <member name="M:XmlPrime.SharedDocumentSet.#ctor(XmlPrime.DocumentSet,System.Xml.XmlNameTable,XmlPrime.IDocumentResolver,XmlPrime.ICollectionResolver,XmlPrime.IResourceResolver)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.SharedDocumentSet"/> class.
            </summary>
      <param name="shared">The shared (static) document set.</param>
      <param name="nameTable">The (dynamic) name table for documents loaded.</param>
      <param name="documentResolver">The resolver used to retrieve documents, or <see langword="null"/> if no documents are to be retrieved.</param>
      <param name="collectionResolver">The resolver used to retrieve collections, or <see langword="null"/> if no collections are to be retrieved.</param>
      <param name="resourceResolver">The resolver used to retrieve unparsed text resources.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="shared"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.SharedDocumentSet.Collection(XmlPrime.AnyUri)">
      <summary>
            Returns an <see cref="T:XmlPrime.IResolvedCollection"/> instance representing the collection retrieved from the specified URI.
            </summary>
      <param name="uri">The URI of the collection to be retrieved, or <see langword="null"/> for the default collection.</param>
      <returns>
            An array of <see cref="T:System.Xml.XPath.IXPathNavigable"/> instances representing the collection, or <see langword="null"/>
            if the URI was not handled.
            </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="uri"/> is not an absolute URI.</exception>
      <exception cref="T:System.Xml.XmlException">The collection returned from the collection resolver was not valid.</exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during a previous attempt to retrieve the collection.</exception>
      <exception cref="T:System.Exception">
            An error occurred retrieving the collection.
            </exception>
    </member>
    <member name="M:XmlPrime.SharedDocumentSet.ResolvedDocument(XmlPrime.AnyUri)">
      <summary>
            Returns an <see cref="T:System.Xml.XPath.IXPathNavigable"/> instance representing the document retrieved from the specified URI.
            </summary>
      <param name="uri">The URI of the document to be retrieved.</param>
      <returns>
            An <see creg="XPathNavigator"/> instance representing the document, or <see langword="null"/> if the URI
            was not handled.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="uri"/> is not an absolute URI.</exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during a previous attempt to retrieve the document.</exception>
      <exception cref="T:System.Exception">
            An error occurred retrieving the document.
            </exception>
    </member>
    <member name="M:XmlPrime.SharedDocumentSet.UnparsedText(XmlPrime.AnyUri,System.Text.Encoding)">
      <summary>
            Returns a <see cref="T:System.String"/> containing the unparsed text of a resource with the specified URI.
            </summary>
      <param name="uri">The URI of the unparsed text resource to be retrieved.</param>
      <param name="encoding">The encoding used to decode the resource.</param>
      <returns>
            A <see cref="T:System.String"/> containing the unparsed text of the resource, or <see langword="null"/> if the URI
            was not handled.
            </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="uri"/> is not an absolute URI, or <paramref name="uri"/> contains a fragment identifier.
            </exception>
      <exception cref="T:XmlPrime.XdmException">
            A previous attempt to retrieve the resource failed.
            </exception>
      <exception cref="T:System.Xml.XmlException">
            There was an error decoding the resources.
            </exception>
      <exception cref="T:System.Exception">
            An error occurred retrieving the resource.
            </exception>
    </member>
    <member name="M:XmlPrime.SharedDocumentSet.Resource(XmlPrime.AnyUri)">
      <summary>
            Returns the resource with the specified URI.
            </summary>
      <param name="uri">The URI of the unparsed text resource to be retrieved.</param>
      <returns>
            A <see cref="T:System.IO.Stream"/> over the resource, or <see langword="null"/> if the URI was not handled.
            </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="uri"/> is not an absolute URI, or <paramref name="uri"/> contains a fragment identifier.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during a previous attempt to retrieve the resource.</exception>
      <exception cref="T:System.Exception">
            An error occurred retrieving the resource.
            </exception>
    </member>
    <member name="T:XmlPrime.XdmType">
      <summary>
            References a type in the XQuery 1.0 and XPath 2.0 Data Model (XDM) type hierarchy.
            </summary>
      <seealso href="http://www.w3.org/TR/xpath-datamodel/#types-hierarchy">[XQuery 1.0 and XPath 2.0 Data Model (XDM)] 2.6.3 Type Hierarchy</seealso>
    </member>
    <member name="M:XmlPrime.XdmType.AtomicType(System.Xml.Schema.XmlSchemaSimpleType)">
      <summary>
            Returns an <see cref="T:XmlPrime.XdmType"/> instance which represents the specified atomic type.
            </summary>
      <param name="type">The <see cref="T:System.Xml.Schema.XmlSchemaSimpleType"/> which represents the atomic type.</param>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the specified atomic type.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type"/> is not an atomic type.</exception>
    </member>
    <member name="M:XmlPrime.XdmType.Attribute">
      <overloads>Returns an <see cref="T:XmlPrime.XdmType"/> instance corresponding to an attribute type.</overloads>
      <summary>
            Returns a reference to the type that matches all attributes.
            </summary>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the type that matches all attributes.</returns>
      <remarks>This corresponds to the XPath 2.0 type <c>attribute()</c></remarks>
    </member>
    <member name="M:XmlPrime.XdmType.Attribute(System.Xml.XmlQualifiedName)">
      <summary>
            Returns an <see cref="T:XmlPrime.XdmType"/> instance corresponding to the attribute type with the specified name.
            </summary>
      <param name="attributeName">The name of attributes matching this type, or <see langword="null"/> for a type matching all attribute names.</param>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the attribute type with the specified name.</returns>
      <remarks>
            This corresponds to the XPath 2.0 type <c>attribute(<paramref name="attributeName"/>)</c>,
            or <c>attribute()</c> if <paramref name="attributeName"/> is <see langword="null"/></remarks>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeName"/> is not a valid <c>xs:QName</c> value.</exception>
    </member>
    <member name="M:XmlPrime.XdmType.Attribute(System.String,System.String)">
      <summary>
            Returns an <see cref="T:XmlPrime.XdmType"/> instance corresponding to the attribute type with the specified name.
            </summary>
      <param name="attributeLocalName">The local name of the attribute.</param>
      <param name="attributeNamespace">The namespace of the attribute.</param>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the attribute type with the specified name.</returns>
      <remarks>
            This corresponds to the XPath 2.0 type <c>attribute(name)</c>, where <c>name</c> is has local name and 
            namespace specified by <paramref name="attributeLocalName"/> and <paramref name="attributeNamespace"/>
            respectively.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeLocalName"/> or <paramref name="attributeNamespace"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeLocalName"/> is not a valid <c>xs:NCName</c> value.</exception>
    </member>
    <member name="M:XmlPrime.XdmType.Attribute(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaSimpleType)">
      <summary>
            Returns an <see cref="T:XmlPrime.XdmType"/> instance corresponding to the attribute type with the specified name and type annotation.
            </summary>
      <param name="attributeName">The name of attributes matching this type, or <see langword="null"/> for a type matching all attribute names.</param>
      <param name="typeAnnotation">The type annotation.</param>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the attribute type with the specified name and type.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeAnnotation"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeName"/> is not a valid <c>xs:QName</c> value.</exception>
      <remarks>
            This corresponds to the XPath 2.0 type <c>attribute(<paramref name="attributeName"/>, <paramref name="typeAnnotation"/>)</c>,
            or <c>attribute(*, <paramref name="typeAnnotation"/>)</c> if <paramref name="attributeName"/> is <see langword="null"/></remarks>
    </member>
    <member name="M:XmlPrime.XdmType.Attribute(System.String,System.String,System.Xml.Schema.XmlSchemaSimpleType)">
      <summary>
            Returns an <see cref="T:XmlPrime.XdmType"/> instance corresponding to the attribute type with the specified name and type annotation name.
            </summary>
      <param name="attributeLocalName">The local name of the attribute.</param>
      <param name="attributeNamespace">The namespace of the attribute.</param>
      <param name="typeAnnotation">The ntype annotation.</param>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the attribute type with the specified name and type.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeLocalName"/>, <paramref name="attributeNamespace"/> or 
            <paramref name="typeAnnotation"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeLocalName"/> is not a valid <c>xs:NCName</c> value.</exception>
      <remarks>
            This is equivalent to the XPath 2.0 type <c>attribute(attributeName, typeAnnotation)</c> where 
            <c>attributeName</c> has local name and namespace specified by <paramref name="attributeLocalName"/> and 
            <paramref name="attributeNamespace"/>.
            </remarks>
    </member>
    <member name="M:XmlPrime.XdmType.BuiltInAtomicType(System.String,System.String)">
      <overloads>
            Returns an <see cref="T:XmlPrime.XdmType"/> instance which represents the specified built in atomic type.
            </overloads>
      <summary>
            Returns an <see cref="T:XmlPrime.XdmType"/> instance which represents the specified built in atomic type.
            </summary>
      <param name="localName">The local name of the built in atomic type.</param>
      <param name="namespaceUri">The namespace of the built in atomic type.</param>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the built in type with the specified name, or <see langword="null"/> if there is no built in type with the specified name.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName"/> or <paramref name="namespaceUri"/> is <see langword="null"/></exception>
    </member>
    <member name="M:XmlPrime.XdmType.BuiltInAtomicType(System.Xml.XmlQualifiedName)">
      <overloads>
            Returns an <see cref="T:XmlPrime.XdmType"/> instance which represents the specified built in atomic type.
            </overloads>
      <summary>
            Returns an <see cref="T:XmlPrime.XdmType"/> instance which represents the specified built in atomic type.
            </summary>
      <param name="name">The name of the built in atomic type.</param>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the built in type with the specified name, or <see langword="null"/> if there is no built in type with the specified name.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> is <see langword="null"/></exception>
    </member>
    <member name="M:XmlPrime.XdmType.Document">
      <overloads>Returns an <see cref="T:XmlPrime.XdmType"/> instance corresponding to the document type.</overloads>
      <summary>
            Returns a reference to the type matching all document nodes.
            </summary>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the type matching all document nodes.</returns>
      <remarks>This corresponds to the XPath 2.0 type <c>document-node()</c>.</remarks>
    </member>
    <member name="M:XmlPrime.XdmType.Document(System.Xml.XmlQualifiedName)">
      <summary>
            Returns an <see cref="T:XmlPrime.XdmType"/> instance corresponding to the document type with element content with the specified name.
            </summary>
      <param name="elementName">
            The name of the root element of this document, or <see langword="null"/> for a type matching a document with
            a (single) root element of any name.
            </param>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the document type with element content with the specified name.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementName"/> is not a valid <c>xs:QName</c> value.</exception>
      <remarks>
            This corresponds to the XPath 2.0 type <c>document-node(element(<paramref name="elementName"/>))</c>, or
            <c>document-node(element(*))</c> if <paramref name="elementName"/> is <see langword="null"/>.
            </remarks>
    </member>
    <member name="M:XmlPrime.XdmType.Document(System.String,System.String)">
      <summary>
            Returns an <see cref="T:XmlPrime.XdmType"/> instance corresponding to the document type with element content with the specified name.
            </summary>
      <param name="elementLocalName">The local name of the root element of this document.</param>
      <param name="elementNamespace">The namespace of the root element of this document.</param>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the document type with element content with the specified name.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementLocalName"/> or <paramref name="elementNamespace"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementLocalName"/> is not a valid <c>xs:NCName</c> value.</exception>
      <remarks>
            This corresponds to the XPath 2.0 type <c>document-node(element(elementName))</c>, where 
            <c>elementName</c> has local name and namespace specified by
            <paramref name="elementLocalName"/> and <paramref name="elementNamespace"/> respectively.
            </remarks>
    </member>
    <member name="M:XmlPrime.XdmType.Document(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaType,System.Boolean)">
      <summary>
            Returns an <see cref="T:XmlPrime.XdmType"/> instance corresponding to the document type with element content with the specified name and type annotation.
            </summary>
      <param name="elementName">
            The name of the root element of this document, or <see langword="null"/> for a type matching a document with
            root element of any name.
            </param>
      <param name="elementTypeAnnotation">
            The type annotation of the root element of this document type.
            </param>
      <param name="nillable">
            A boolean value indicating whether the root element is nillable.
            </param>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the document type with element content with the specified name and type annotation.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementTypeAnnotation"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementName"/> is not a valid <c>xs:QName</c> value.</exception>
      <remarks>
            This corresponds to the XPath 2.0 type
            <c>document-node(element(<paramref name="elementName"/>, <paramref name="elementTypeAnnotation"/>))</c>,
            <c>document-node(element(*, <paramref name="elementTypeAnnotation"/>))</c> if 
            <paramref name="elementName"/> is <see langword="null"/>, or
            <c>document-node(element(<paramref name="elementName"/>, <paramref name="elementTypeAnnotation"/>?))</c> 
            if <paramref name="nillable"/> is <see langword="true"/>.
            </remarks>
    </member>
    <member name="M:XmlPrime.XdmType.Document(System.String,System.String,System.Xml.Schema.XmlSchemaType,System.Boolean)">
      <summary>
            Returns an <see cref="T:XmlPrime.XdmType"/> instance corresponding to the document type with element content with the specified name and type annotation.
            </summary>
      <param name="elementLocalName">The local name of the root element of this document.</param>
      <param name="elementNamespace">The namespace of the root element of this document.</param>
      <param name="elementTypeAnnotation">The type annotation of the root element of this document type.</param>
      <param name="nillable">A boolean value indicating whether the root element is nillable.</param>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the document type with element content with the specified name and type annotation.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementLocalName"/>, <paramref name="elementNamespace"/> or 
            <paramref name="elementTypeAnnotation"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementLocalName"/> is not a valid <c>xs:NCName</c> value.</exception>
      <remarks>
            This corresponds to the XPath 2.0 type <c>document-node(element(elementName, elementTypeAnnotation))</c>, or
            <c>document-node(element(elementName, elementTypeAnnotation?))</c> if <paramref name="nillable"/> is
            <see langword="true"/>, where <c>elementName</c> has local name and namespace specified by 
            <paramref name="elementLocalName"/> and <paramref name="elementNamespace"/>.
            </remarks>
    </member>
    <member name="M:XmlPrime.XdmType.DynamicType(System.Xml.XPath.XPathItem)">
      <summary>
            Returns an <see cref="T:XmlPrime.XdmType"/> instance corresponding to the dynamic type of the specified item.
            </summary>
      <param name="item">The item.</param>
      <returns>
            The dynamic type of the specified item.
            </returns>
    </member>
    <member name="M:XmlPrime.XdmType.Element">
      <overloads>Returns an <see cref="T:XmlPrime.XdmType"/> instance corresponding to the element type.</overloads>
      <summary>
            Returns a reference to the type matching any element.
            </summary>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the type matching any element.</returns>
      <remarks>This corresponds to the XPath 2.0 type <c>element()</c>.</remarks>
    </member>
    <member name="M:XmlPrime.XdmType.Element(System.Xml.XmlQualifiedName)">
      <summary>
            Returns an <see cref="T:XmlPrime.XdmType"/> instance corresponding to the element type with the specified name.
            </summary>
      <param name="elementElementName">
            The name of the element, or <see langword="null"/> for a type matching an element of any name.
            </param>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the element type with the specified name.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementElementName"/> is not a valid <c>xs:QName</c> value.</exception>
      <remarks>
            This corresponds to the XPath 2.0 type <c>element(<paramref name="elementElementName"/>)</c> or
            <c>element()</c> if <paramref name="elementElementName"/> is <see langword="null"/>.
            </remarks>
    </member>
    <member name="M:XmlPrime.XdmType.Element(System.String,System.String)">
      <summary>
            Returns an <see cref="T:XmlPrime.XdmType"/> instance corresponding to the element type with the specified name.
            </summary>
      <param name="elementLocalName">The local name of the element.</param>
      <param name="elementNamespace">The namespace of the element.</param>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the element type with the specified name.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementLocalName"/> or <paramref name="elementNamespace"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementLocalName"/> is not a valid <c>xs:NCName</c> value.</exception>
      <remarks>
            This corresponds to the XPath type <c>element(name)</c>, where <c>name</c> has local name and namespace
            specified by <paramref name="elementLocalName"/> and <paramref name="elementNamespace"/> respectively.
            </remarks>
    </member>
    <member name="M:XmlPrime.XdmType.Element(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaType,System.Boolean)">
      <summary>
            Returns an <see cref="T:XmlPrime.XdmType"/> instance corresponding to the element type with the specified name and type annotation.
            </summary>
      <param name="elementName">
            The name of the element, or <see langword="null"/> for a type matching an element of any name.
            </param>
      <param name="typeAnnotation">The type annotation of this element type.</param>
      <param name="nillable">A boolean value indicating whether the element is nillable. </param>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the element type with the specified name and type annotation.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeAnnotation"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementName"/> is not a valid <c>xs:QName</c> value.</exception>
      <remarks>
            This corresponds to the XPath 2.0 type <c>element(<paramref name="elementName"/>, <paramref name="typeAnnotation"/>)</c>, or
            <c>element(*, <paramref name="typeAnnotation"/>)</c> if <paramref name="elementName"/> is <see langword="null"/>. Similarly 
            <c>element(<paramref name="elementName"/>, <paramref name="typeAnnotation"/>?)</c>, or
            <c>element(*, <paramref name="typeAnnotation"/>?)</c> if <paramref name="nillable"/> is
            <see langword="true"/>.
            </remarks>
    </member>
    <member name="M:XmlPrime.XdmType.Element(System.String,System.String,System.Xml.Schema.XmlSchemaType,System.Boolean)">
      <summary>
            Returns an <see cref="T:XmlPrime.XdmType"/> instance corresponding to the element type with the specified name and type annotation.
            </summary>
      <param name="elementLocalName">The local name of the element.</param>
      <param name="elementNamespace">The namespace of the element.</param>
      <param name="typeAnnotation">The  type annotation of the element type.</param>
      <param name="nillable">A boolean value indicating whether the element is nillable.</param>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the element type with the specified name and type annotation.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementLocalName"/>, <paramref name="elementNamespace"/> or <paramref name="typeAnnotation"/> is 
            <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementLocalName"/> is not a valid <c>xs:NCName</c> value.</exception>
      <remarks>
            This corresponds to the XPath 2.0 type <c>element(name, typeAnnotation)</c>, or
            <c>element(name, typeAnnotation?)</c> if <paramref name="nillable"/> is <see langword="true"/>, where 
            <c>name</c> has local name and namespace specified by <paramref name="elementLocalName"/> and 
            <paramref name="elementNamespace"/>.
            </remarks>
    </member>
    <member name="M:XmlPrime.XdmType.FunctionType">
      <overloads>Creates a reference to a function type.</overloads>
      <summary>
            Returns a reference to the type that matches all function items.
            </summary>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the type that matches all function items.</returns>
      <remarks>This corresponds to the XPath 3.0 type <c>function(*)</c></remarks>
    </member>
    <member name="M:XmlPrime.XdmType.FunctionType(XmlPrime.XdmType[])">
      <summary>
            Creates a reference to the function type for a function with the specified signature.
            </summary>
      <param name="signatureTypes">The return type, followed by any argument types.</param>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing function type for a function with the specified signature.</returns>
      <remarks>
            This corresponds to the XPath 3.0 type <c>function(SequenceType, SequenceType, ... ) as SequenceType</c>.
            </remarks>
    </member>
    <member name="M:XmlPrime.XdmType.FunctionType(XmlPrime.XPathFunctionItem)">
      <summary>
            Creates a reference to the function type for the specified function item.
            </summary>
      <param name="functionItem">The function item.</param>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing type of the specified function item.</returns>
    </member>
    <member name="M:XmlPrime.XdmType.GetBuiltInType(System.Xml.Schema.XmlTypeCode)">
      <summary>
            Gets an <see cref="T:XmlPrime.XdmType"/> corresponding to the built-in type with the specified <see cref="T:System.Xml.Schema.XmlTypeCode"/>.
            </summary>
      <param name="typeCode">The type code.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="typeCode"/> is not a valid <see cref="T:System.Xml.Schema.XmlTypeCode"/> value.
            </exception>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance corresponding to the built-in type represented by <paramref name="typeCode"/>.</returns>
    </member>
    <member name="M:XmlPrime.XdmType.Parse(System.String)">
      <summary>
            Returns an <see cref="T:XmlPrime.XdmType"/> which represents the specified type name.
            </summary>
      <param name="typeName">The type name.</param>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the specified type.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred whilst parsing the type name.</exception>
      <remarks>
        <para>The in-scope namespaces available for use in the type name are those available by default in XQuery.</para>
        <para>The default version of XPath is used when parsing, namely <see cref="F:XmlPrime.XPathVersion.XPath31"/>.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XdmType.Parse(System.String,XmlPrime.XPathVersion)">
      <summary>
            Returns an <see cref="T:XmlPrime.XdmType"/> which represents the specified type name according to the specified <see cref="T:XmlPrime.XPathVersion"/>.
            </summary>
      <param name="typeName">The type name.</param>
      <param name="version">The XPath specification version.</param>
      <returns>
            An <see cref="T:XmlPrime.XdmType"/> instance representing the specified type.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred whilst parsing the type name.</exception>
      <remarks>
            The in-scope namespaces available for use in the type name are those available by default in XQuery.
            </remarks>
    </member>
    <member name="M:XmlPrime.XdmType.Parse(System.String,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaSet,XmlPrime.XPathVersion)">
      <summary>
            Returns an <see cref="T:XmlPrime.XdmType"/> which represents the specified type name according to the specified <see cref="T:XmlPrime.XPathVersion"/>.
            </summary>
      <param name="typeName">The type name.</param>
      <param name="namespaces">The in-scope namespaces to use to parse the type.</param>
      <param name="schemaSet">The schema set to use to lookup schema types.</param>
      <param name="version">The XPath specification version.</param>
      <returns>
            An <see cref="T:XmlPrime.XdmType"/> instance representing the specified type.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName"/>, <paramref name="namespaces"/> or <paramref name="schemaSet"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred whilst parsing the type name.</exception>
    </member>
    <member name="M:XmlPrime.XdmType.Parse(System.String,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaSet)">
      <summary>
            Returns an <see cref="T:XmlPrime.XdmType"/> which represents the specified type name.
            </summary>
      <param name="typeName">The type name.</param>
      <param name="namespaces">The in-scope namespaces to use to parse the type.</param>
      <param name="schemaSet">The schema set to use to lookup schema types.</param>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the specified type.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName"/>, <paramref name="namespaces"/> or <paramref name="schemaSet"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred whilst parsing the type name.</exception>
      <remarks>
        <para>The default version of XPath is used when parsing, namely <see cref="F:XmlPrime.XPathVersion.XPath31"/>.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XdmType.ProcessingInstruction">
      <overloads>Returns an <see cref="T:XmlPrime.XdmType"/> instance corresponding to the processing instruction type.</overloads>
      <summary>
            Returns a reference to the type that matches all processing instructions.
            </summary>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the type that matches all processing instructions.</returns>
      <remarks>This is equivalent to the XPath 2.0 type <c>processing-instruction()</c>.</remarks>
    </member>
    <member name="M:XmlPrime.XdmType.ProcessingInstruction(System.String)">
      <summary>
            Returns an <see cref="T:XmlPrime.XdmType"/> instance corresponding to the processing instruction type with the specified target.
            </summary>
      <param name="target">
            The target of processing instructions matching this type, or <see langword="null"/> for a type matching all
            processing instructions.
            </param>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the processing instruction type with the specified target.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="target"/> is not a valid <c>xs:NCName</c> value.</exception>
      <remarks>
            This corresponds to the XPath 2.0 type <c>processing-instruction(<paramref name="target"/>)</c>,
            or <c>processing-instruction()</c> if <paramref name="target"/> is <see langword="null"/>.
            </remarks>
    </member>
    <member name="M:XmlPrime.XdmType.SchemaAttribute(System.Xml.Schema.XmlSchemaAttribute)">
      <summary>
            Returns an <see cref="T:XmlPrime.XdmType"/> instance corresponding to the specified schema attribute type.
            </summary>
      <param name="attribute">The schema attribute.</param>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the specified schema attribute type.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attribute"/> is <see langword="null"/>.</exception>
      <remarks>
            This corresponds to the XPath 2.0 type <c>schema-attribute(<paramref name="attribute"/>)</c>.
            </remarks>
    </member>
    <member name="M:XmlPrime.XdmType.SchemaDocument(System.Xml.Schema.XmlSchemaElement)">
      <summary>
            Returns an <see cref="T:XmlPrime.XdmType"/> instance corresponding to the document type with the specified schema element content.
            </summary>
      <param name="element">The schema element that corresponds to the document's type.</param>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the document type with the specified schema element content.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element"/> is <see langword="null"/>.
            </exception>
      <remarks>
            This corresponds to the XPath 2.0 type <c>document-node(schema-element(<paramref name="element"/>))</c>.
            </remarks>
    </member>
    <member name="M:XmlPrime.XdmType.SchemaElement(System.Xml.Schema.XmlSchemaElement)">
      <summary>
            Returns an <see cref="T:XmlPrime.XdmType"/> instance corresponding to the specified schema element type.
            </summary>
      <param name="element">The schema element.</param>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the specified schema element type.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element"/> is <see langword="null"/>.
            </exception>
      <remarks>
            This corresponds to the XPath 2.0 type <c>schema-element(<paramref name="element"/>)</c>.
            </remarks>
    </member>
    <member name="M:XmlPrime.XdmType.Sequence(XmlPrime.XdmType,XmlPrime.Quantifier)">
      <summary>
            Returns a reference to the type representing a sequence of the specified item type.
            </summary>
      <param name="typeReference">The item type reference.</param>
      <param name="quantifier">The quantifier of the sequence.</param>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing a sequence of the specified type.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeReference"/> is <see langword="null"/>.
            </exception>
      <remarks>
            This is equivalent to the XPath 2.0 type <c><paramref name="typeReference"/></c> when 
            <paramref name="quantifier"/> is <see cref="F:XmlPrime.Quantifier.One"/>,
            <c><paramref name="typeReference"/>?</c> when <paramref name="quantifier"/> is 
            <see cref="F:XmlPrime.Quantifier.ZeroOrOne"/>, <c><paramref name="typeReference"/>*</c> when 
            <paramref name="quantifier"/> is <see cref="F:XmlPrime.Quantifier.ZeroOrMore"/> or 
            <c><paramref name="typeReference"/>+</c> when  <paramref name="quantifier"/> is
            <see cref="F:XmlPrime.Quantifier.OneOrMore"/>.
            
            </remarks>
    </member>
    <member name="M:XmlPrime.XdmType.UntypedDocument">
      <summary>
            Returns a reference to the document type with untyped element content.
            </summary>
      <returns>An <see cref="T:XmlPrime.XdmType"/> instance representing the document type with untyped element content.</returns>
      <remarks>This corresponds to the XPath 2.0 type <c>document-node(element(*, xs:untyped))</c>.</remarks>
    </member>
    <member name="M:XmlPrime.XdmType.IsMatch(System.Collections.Generic.IEnumerator{System.Xml.XPath.XPathItem},System.Xml.Schema.XmlSchemaSet)">
      <summary>
            Determines whether the specified items is match.
            </summary>
      <param name="items">The items.</param>
      <param name="availableSchemas"/>
      <returns>
        <see langword="true"/> if the specified items match the current type; otherwise, <see langword="false"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.XdmType.IsMatch(System.Xml.XPath.XPathItem,System.Xml.Schema.XmlSchemaSet)">
      <summary>
            Determines whether the specified item is match.
            </summary>
      <param name="item">The item, or <see langword="null"/> for the empty sequence..</param>
      <param name="availableSchemas"/>
      <returns>
        <see langword="true"/> if the specified item match the current type; otherwise, <see langword="false"/>.
            </returns>
    </member>
    <member name="P:XmlPrime.XdmType.AnyAtomicType">
      <summary>
            Gets the type that matches any single atomic values.
            </summary>
      <value>An <see cref="T:XmlPrime.XdmType"/> instance representing the type that matches all nodes.</value>
    </member>
    <member name="P:XmlPrime.XdmType.Comment">
      <summary>
            Gets the type that matches all comment nodes.
            </summary>
      <value>An <see cref="T:XmlPrime.XdmType"/> instance representing the type that matches all comment nodes.</value>
      <remarks>This corresponds to the XPath 2.0 type <c>comment()</c>.</remarks>
    </member>
    <member name="P:XmlPrime.XdmType.Empty">
      <summary>
            Gets the type that matches the empty sequence.
            </summary>
      <value>An <see cref="T:XmlPrime.XdmType"/> instance representing the type that matches the empty sequence.</value>
      <remarks>This corresponds to the XPath 2.0 type <c>empty-sequence()</c>.</remarks>
    </member>
    <member name="P:XmlPrime.XdmType.FunctionItem">
      <summary>
            Gets the type that matches any function item.
            </summary>
      <value>An <see cref="T:XmlPrime.XdmType"/> instance representing the type that matches any function item.</value>
      <remarks>This corresponds to the XPath 3.0 type <c>function(*)</c>.</remarks>
    </member>
    <member name="P:XmlPrime.XdmType.Item">
      <summary>
            Gets the type that matches any item.
            </summary>
      <value>An <see cref="T:XmlPrime.XdmType"/> instance representing the type that matches any item.</value>
      <remarks>This corresponds to the XPath 2.0 type <c>item()</c>.</remarks>
    </member>
    <member name="P:XmlPrime.XdmType.Namespace">
      <summary>
            Gets the type that matches namespace nodes.
            </summary>
      <value>An <see cref="T:XmlPrime.XdmType"/> instance representing the type that matches namespace nodes.</value>
    </member>
    <member name="P:XmlPrime.XdmType.Node">
      <summary>
            Gets the type that matches all nodes.
            </summary>
      <value>An <see cref="T:XmlPrime.XdmType"/> instance representing the type that matches all nodes.</value>
      <remarks>This corresponds to the XPath 2.0 type <c>node()</c>.</remarks>
    </member>
    <member name="P:XmlPrime.XdmType.Text">
      <summary>
            Gets the type that matches all text node.
            </summary>
      <value>An <see cref="T:XmlPrime.XdmType"/> instance representing the type that matches all text nodes.</value>
      <remarks>This corresponds to the XPath 2.0 type <c>text()</c>.</remarks>
    </member>
    <member name="P:XmlPrime.XdmType.Category">
      <summary>
            Gets the category of this type.
            </summary>
      <value>A member of the <see cref="T:XmlPrime.XdmTypeCategory"/> enumeration.</value>
      <remarks>
            The category specifies how the <see cref="P:XmlPrime.XdmType.NameTest"/> and <see cref="P:XmlPrime.XdmType.SchemaType"/> properties are interpreted.
            </remarks>
    </member>
    <member name="P:XmlPrime.XdmType.HasTypeAnnotation">
      <summary>
            Gets a value indicating whether this instance has type annotation.
            </summary>
      <value>
        <c>true</c> if this instance has type annotation; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:XmlPrime.XdmType.IsNillable">
      <summary>
            Gets a value indicating whether this <see cref="T:XmlPrime.XdmType"/> is a nillable element type.
            </summary>
      <value>
        <see langword="true"/> if this type is a nillable element type; otherwise, <see langword="false"/>.</value>
    </member>
    <member name="P:XmlPrime.XdmType.IsWildNameTest">
      <summary>
              Gets a value indicating whether the name test of this type is a wildcard.
            </summary>
      <value>
        <see langword="true"/> if the name test of this type is a wildcard; otherwise, <see langword="false"/>.
            </value>
    </member>
    <member name="P:XmlPrime.XdmType.NameTest">
      <summary>
            Gets the name test.
            </summary>
      <value>The name test.</value>
    </member>
    <member name="P:XmlPrime.XdmType.Quantifier">
      <summary>
            Gets the quantifier associated with this type.
            </summary>
      <value>A member of the <see cref="T:XmlPrime.Quantifier"/> enumeration.</value>
      <remarks>
            The quantifier is an indication of the number of items in a value matching this type.
            </remarks>
    </member>
    <member name="P:XmlPrime.XdmType.SchemaType">
      <summary>
            Gets the schema type.
            </summary>
      <value>The schema type.</value>
    </member>
    <member name="P:XmlPrime.XdmType.TypeCode">
      <summary>
            Gets the type code of this type.
            </summary>
      <value>A member of the <see cref="T:System.Xml.Schema.XmlTypeCode"/> enumeration.</value>
    </member>
    <member name="T:XmlPrime.XdmTypeCategory">
      <summary>
            Defines which category of type an <see cref="T:XmlPrime.XdmType"/> instance is.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmTypeCategory.None">
      <summary>
            This instance corresponds to the type <c>none()</c>.  The <see cref="P:XmlPrime.XdmType.NameTest"/> and <see cref="P:XmlPrime.XdmType.SchemaType"/>
            properties are <see langword="null"/>.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmTypeCategory.Empty">
      <summary>
            This instance represents the type <c>empty-sequence()</c>.  The <see cref="P:XmlPrime.XdmType.NameTest"/> and <see cref="P:XmlPrime.XdmType.SchemaType"/>
            properties are <see langword="null"/>.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmTypeCategory.SequenceTypeUnion">
      <summary>
            This instance corresponds to a sequence type union.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmTypeCategory.AtomicType">
      <summary>
            This instance represents an atomic type.  The <see cref="P:XmlPrime.XdmType.NameTest"/> property is <see langword="null"/>, and the
            <see cref="P:XmlPrime.XdmType.SchemaType"/> property returns the corresponding schema type.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmTypeCategory.Document">
      <summary>
            This instance represents a document type.  If their values aren't <see langword="null"/> the <see cref="P:XmlPrime.XdmType.NameTest"/>
            and <see cref="P:XmlPrime.XdmType.SchemaType"/> properties represent the name and schema type of the (single) root element.  If these properties
            are <see langword="null"/> then the contents of the document are unconstrained.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmTypeCategory.Element">
      <summary>
            This instance represents a element type.  If their values aren't <see langword="null"/> the <see cref="P:XmlPrime.XdmType.NameTest"/>
            and <see cref="P:XmlPrime.XdmType.SchemaType"/> properties represent the name and schema type of the element.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmTypeCategory.Attribute">
      <summary>
            This instance represents an attribute type.  If their values aren't <see langword="null"/> the <see cref="P:XmlPrime.XdmType.NameTest"/>
            and <see cref="P:XmlPrime.XdmType.SchemaType"/> properties represent the name and schema type of the attribute.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmTypeCategory.Namespace">
      <summary>
            This instance represents the type <c>namespace()</c>.  The <see cref="P:XmlPrime.XdmType.NameTest"/> property is <see langword="null"/>,
            and the <see cref="P:XmlPrime.XdmType.SchemaType"/> property is set to the type <c>xs:string</c></summary>
    </member>
    <member name="F:XmlPrime.XdmTypeCategory.Comment">
      <summary>
            This instance represents the type <c>comment()</c>.  The <see cref="P:XmlPrime.XdmType.NameTest"/> property is <see langword="null"/>,
            and the <see cref="P:XmlPrime.XdmType.SchemaType"/> property is set to the type <c>xs:string</c></summary>
    </member>
    <member name="F:XmlPrime.XdmTypeCategory.ProcessingInstruction">
      <summary>
            This instance represents a processing instruction type.  If it is not null, the <see cref="P:XmlPrime.XdmType.NameTest"/> property has empty namespace URI,
            and its local name corresponds to the target of the processing instruction type.  The <see cref="P:XmlPrime.XdmType.SchemaType"/> property is set to the type
            <c>xs:string</c>.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmTypeCategory.Text">
      <summary>
            This instance represents the type <c>text()</c>.  The <see cref="P:XmlPrime.XdmType.NameTest"/> property is <see langword="null"/>,
            and the <see cref="P:XmlPrime.XdmType.SchemaType"/> property is set to the type <c>xs:string</c>.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmTypeCategory.SchemaDocument">
      <summary>
            This instance represents a document type whose single root element matches a <c>schema-element</c> type.  The <see cref="P:XmlPrime.XdmType.NameTest"/>
            property specifies the name of the head of the substitution group that is matched, and the <see cref="P:XmlPrime.XdmType.SchemaType"/> property is set
            to the schema type of this element.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmTypeCategory.SchemaElement">
      <summary>
            This instance represents a <c>schema-element</c> type.  The <see cref="P:XmlPrime.XdmType.NameTest"/>  property specifies the name of the head of the substitution
            group that is matched, and the <see cref="P:XmlPrime.XdmType.SchemaType"/> property is set  to the schema type of this element.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmTypeCategory.SchemaAttribute">
      <summary>
            This instance represents a <c>schema-attribute</c> type.  This value should never appear and is for internal use.  Constructing a type with the <see cref="M:XmlPrime.XdmType.SchemaAttribute(System.Xml.Schema.XmlSchemaAttribute)"/>
            method returns a type with category <see cref="F:XmlPrime.XdmTypeCategory.Attribute"/>.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmTypeCategory.Function">
      <summary>
            This instance represents a function item type.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmTypeCategory.Array">
      <summary>
            This instance represents a array type.
            </summary>
    </member>
    <member name="F:XmlPrime.XdmTypeCategory.Map">
      <summary>
            This instance represents a map type.
            </summary>
    </member>
    <member name="T:XmlPrime.XdmTypeAttribute">
      <summary>
            This attribute is used to specify the XDM type of an argument or return
            value of a function exported in an XDM module.
            </summary>
      <remarks>
        <para>
            		This attribute is ignored unless the containing method is marked with the
            		<see cref="T:XmlPrime.XdmFunctionAttribute"/>, and the containing object is marked
            		with <see cref="T:XmlPrime.XdmModuleAttribute"/>.
            	</para>
        <para>
            		The type specified by this attribute must be a subtype of the primitive
            		base type of the XDM type represented by the CLR type of the argument or
            		return value of the function annotated with this annotation.  For example
            		if a function has an argument with CLR type <see cref="T:System.Int32"/> then its
            		XDM type is <c>xs:int</c>, whose primitive base type is <c>xs:integer</c>.
            		 This means that the argument can be annotated with any subtype of 
            		<c>xs:integer</c>.
            	</para>
        <para>
            		If an argument or return value has a CLR type that is a subtype of
            		<see cref="T:System.Xml.XPath.XPathItem"/> (for example <see cref="T:System.Xml.XPath.XPathNavigator"/>) then the type
            		that can be specified by this attribute must be representable by the argument.
            	</para>
        <para>
            		If at runtime a value passed to an argument cannot be converted from the declared
            		type to the CLR type then an <c>ANDY1000</c> error is raised at runtime.  Similarly if a
            		value returned from a function cannot be converted to its declared type, or if a
            		value returned is of a type annotated with XDM type information (for example 
            		<see cref="T:XmlPrime.XPathAtomicValue"/>) and is not a subtype of the functions declared
            		type then an <c>ANDY1000</c> error is raised at runtime.
            	</para>
      </remarks>
      <seealso cref="T:XmlPrime.XdmFunctionAttribute"/>
      <seealso cref="T:XmlPrime.XdmModuleAttribute"/>
      <seealso cref="M:XmlPrime.XdmModule.NativeModule``1"/>
    </member>
    <member name="M:XmlPrime.XdmTypeAttribute.#ctor">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XdmTypeAttribute"/> class.
            </summary>
      <remarks>
            This constructor annotates the type of an argument or return value as <c>item()*</c>.  It is recommended that you
            use one of the other constructors to initialize this attribute.
            </remarks>
    </member>
    <member name="M:XmlPrime.XdmTypeAttribute.#ctor(System.Xml.Schema.XmlTypeCode)">
      <summary>
            Creates a new instance of the <see cref="T:XmlPrime.XdmTypeAttribute"/> class wit a particular item type.
            </summary>
      <param name="typeCode">The type code of the item type.</param>
      <remarks>
            This constructor annotates the type of an argument or return value as a single item with the specified type code.
            If you want to allow an empty value, or allow a sequence of values, then use the
            <see cref="M:XmlPrime.XdmTypeAttribute.#ctor(System.Xml.Schema.XmlTypeCode,XmlPrime.Quantifier)"/> constructor instead.
            </remarks>
    </member>
    <member name="M:XmlPrime.XdmTypeAttribute.#ctor(System.Xml.Schema.XmlTypeCode,XmlPrime.Quantifier)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.XdmTypeAttribute"/> class with a particular sequence type.
            </summary>
      <param name="typeCode">The type code of the items in the sequence.</param>
      <param name="quantifier">The cardinality of the sequence type.</param>
    </member>
    <member name="P:XmlPrime.XdmTypeAttribute.TypeCode">
      <summary>
            Gets or sets a type code representing the types of the items in the sequence.
            </summary>
      <value>The type code representing the types of the items in the sequence.</value>
    </member>
    <member name="P:XmlPrime.XdmTypeAttribute.Quantifier">
      <summary>
            Gets or sets the quantifier of the sequence.
            </summary>
      <value>A <see cref="P:XmlPrime.XdmTypeAttribute.Quantifier"/> value which specifies the cardinality of the sequence type.</value>
    </member>
    <member name="T:XmlPrime.XInclude">
      <summary>
            Uses the XML Inclusions (XInclude) processing model to performs merging of XML information sets.
            </summary>
    </member>
    <member name="M:XmlPrime.XInclude.Process(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter,XmlPrime.XIncludeSettings)">
      <overloads>
            Performs XML inclusion processing and serializes the result to the specified output.
            </overloads>
      <summary>
            Performs XML inclusion processing on an <see cref="T:System.Xml.XPath.IXPathNavigable"/> instance and 
            serializes the result to an <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="navigable">The <see cref="T:System.Xml.XPath.IXPathNavigable"/> to process.</param>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to serialize to.</param>
      <param name="includeSettings">A <see cref="T:XmlPrime.XIncludeSettings"/> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during processing.</exception>
    </member>
    <member name="M:XmlPrime.XInclude.Process(System.Xml.XPath.IXPathNavigable,System.String,XmlPrime.Serialization.XdmWriterSettings,XmlPrime.XIncludeSettings)">
      <summary>
            Performs XML inclusion processing on an <see cref="T:System.Xml.XPath.IXPathNavigable"/> instance and 
            serializes the result to a file using the specified <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/>.
            </summary>
      <param name="navigable">The <see cref="T:System.Xml.XPath.IXPathNavigable"/> to process.</param>
      <param name="outputFileName">The name of the file to which you want to write.  The <paramref name="outputFileName"/> must be a file system path.</param>
      <param name="settings">The serialization settings.</param>
      <param name="includeSettings">A <see cref="T:XmlPrime.XIncludeSettings"/> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="outputFileName"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.XInclude.Process(System.Xml.XPath.IXPathNavigable,System.IO.Stream,XmlPrime.Serialization.XdmWriterSettings,XmlPrime.XIncludeSettings)">
      <summary>
            Performs XML inclusion processing on an <see cref="T:System.Xml.XPath.IXPathNavigable"/> instance and 
            serializes the result to a <see cref="T:System.IO.Stream"/> using the specified <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/>.
            </summary>
      <param name="navigable">The <see cref="T:System.Xml.XPath.IXPathNavigable"/> to process.</param>
      <param name="stream">The <see cref="T:System.IO.Stream"/> to serialize to.</param>
      <param name="settings">The serialization settings.</param>
      <param name="includeSettings">A <see cref="T:XmlPrime.XIncludeSettings"/> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.XInclude.Process(System.Xml.XPath.IXPathNavigable,System.IO.TextWriter,XmlPrime.Serialization.XdmWriterSettings,XmlPrime.XIncludeSettings)">
      <summary>
            Performs XML inclusion processing on an <see cref="T:System.Xml.XPath.IXPathNavigable"/> instance and 
            serializes the result to a <see cref="T:System.IO.TextWriter"/> using the specified <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/>.
            </summary>
      <param name="navigable">The <see cref="T:System.Xml.XPath.IXPathNavigable"/> to process.</param>
      <param name="textWriter">The <see cref="T:System.IO.TextWriter"/> to serialize to.</param>
      <param name="settings">The serialization settings.</param>
      <param name="includeSettings">A <see cref="T:XmlPrime.XIncludeSettings"/> instance.</param>
      <remarks>
              The value of the <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Encoding"/> and 
              <see cref="P:XmlPrime.Serialization.XdmWriterSettings.ByteOrderMark"/> properties of <paramref name="settings"/> is
              ignored, and the encoding specified by <paramref name="textWriter"/> is used instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textWriter"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.XInclude.Process(System.IO.Stream,System.IO.TextWriter,XmlPrime.Serialization.XdmWriterSettings,XmlPrime.XIncludeSettings)">
      <summary>
            Performs XML inclusion processing on a <see cref="T:System.IO.Stream"/> and
            serializes the result a <see cref="T:System.IO.TextWriter"/> using the specified <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/>.
            </summary>
      <param name="stream">The <see cref="T:System.IO.Stream"/> to process.</param>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to serialize to.</param>
      <param name="settings">The serialization settings.</param>
      <param name="includeSettings">A <see cref="T:XmlPrime.XIncludeSettings"/> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream"/>, <paramref name="writer"/>, <paramref name="settings"/> or
            <paramref name="includeSettings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.XInclude.Process(System.IO.Stream,System.Xml.XmlWriter,XmlPrime.XIncludeSettings)">
      <summary>
            Performs XML inclusion processing on a <see cref="T:System.IO.Stream"/> and 
            serializes the result an <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="stream">The <see cref="T:System.IO.Stream"/> to process.</param>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to serialize to.</param>
      <param name="includeSettings">A <see cref="T:XmlPrime.XIncludeSettings"/> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream"/>, <paramref name="writer"/> or <paramref name="includeSettings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.XInclude.Process(System.IO.Stream,System.String,XmlPrime.Serialization.XdmWriterSettings,XmlPrime.XIncludeSettings)">
      <summary>
            Performs XML inclusion processing on a <see cref="T:System.IO.Stream"/> and 
            serializes the result to a file using the specified <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/>.
            </summary>
      <param name="stream">The <see cref="T:System.IO.Stream"/> to process.</param>
      <param name="outputFileName">The name of the file to which you want to write.  The <paramref name="outputFileName"/> must be a file system path.</param>
      <param name="settings">The serialization settings.</param>
      <param name="includeSettings">A <see cref="T:XmlPrime.XIncludeSettings"/> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream"/>, <paramref name="outputFileName"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.XInclude.Process(System.String,System.IO.Stream,XmlPrime.Serialization.XdmWriterSettings,XmlPrime.XIncludeSettings)">
      <summary>
            Performs XML inclusion processing on a file and 
            serializes the result to a file using the specified <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/>.
            </summary>
      <param name="inputFileName">The name of the file to process.</param>
      <param name="outputStream">The name of the file to which the results will be serialized.</param>
      <param name="settings">The serialization settings.</param>
      <param name="includeSettings">A <see cref="T:XmlPrime.XIncludeSettings"/> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputFileName"/>, <paramref name="outputStream"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.XInclude.Process(System.String,System.IO.TextWriter,XmlPrime.Serialization.XdmWriterSettings,XmlPrime.XIncludeSettings)">
      <summary>
            Performs XML inclusion processing on a file and 
            serializes the result to a file using the specified <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/>.
            </summary>
      <param name="inputFileName">The name of the file to process.</param>
      <param name="writer">The <see cref="T:System.IO.TextWriter"/> to which the results will be serialized.</param>
      <param name="settings">The serialization settings.</param>
      <param name="includeSettings">A <see cref="T:XmlPrime.XIncludeSettings"/> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputFileName"/>, <paramref name="writer"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.XInclude.Process(System.String,System.Xml.XmlWriter,XmlPrime.XIncludeSettings)">
      <summary>
            Performs XML inclusion processing on a <see cref="T:System.IO.Stream"/> and 
            serializes the result to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="inputFileName">The name of the file to process.</param>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to serialize to.</param>
      <param name="includeSettings">A <see cref="T:XmlPrime.XIncludeSettings"/> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputFileName"/> or <paramref name="writer"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.XInclude.Process(System.String,System.String,XmlPrime.Serialization.XdmWriterSettings,XmlPrime.XIncludeSettings)">
      <summary>
            Performs XML inclusion processing on a file and serializes the result to a file using the specified
            <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/>.
            </summary>
      <param name="inputFileName">The name of the file to process.</param>
      <param name="outputFileName">The name of the file to which you want to write.  The <paramref name="outputFileName"/> must be a file system path.</param>
      <param name="settings">The serialization settings.</param>
      <param name="includeSettings">A <see cref="T:XmlPrime.XIncludeSettings"/> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputFileName"/>, <paramref name="outputFileName"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.XInclude.Process(System.IO.Stream,System.IO.Stream,XmlPrime.Serialization.XdmWriterSettings,XmlPrime.XIncludeSettings)">
      <summary>
            Performs XML inclusion processing on a <see cref="T:System.IO.Stream"/> instance and 
            serializes the result to the specified <see cref="T:System.IO.Stream"/> using the specified
            <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/>.
            </summary>
      <param name="inputStream">The <see cref="T:System.IO.Stream"/> to process.</param>
      <param name="outputStream">The <see cref="T:System.IO.Stream"/> to serialize to.</param>
      <param name="settings">The serialization settings.</param>
      <param name="includeSettings">A <see cref="T:XmlPrime.XIncludeSettings"/> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputStream"/>, <paramref name="outputStream"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.XInclude.Process(System.Xml.XmlReader,System.Xml.XmlWriter,XmlPrime.XIncludeSettings)">
      <summary>
            Performs XML inclusion processing on an <see cref="T:System.Xml.XmlReader"/> instance and 
            serializes the result to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="reader">The document to serialize.</param>
      <param name="writer">The writer to serialize to.</param>
      <param name="includeSettings">A <see cref="T:XmlPrime.XIncludeSettings"/> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader"/> or <paramref name="writer"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.XInclude.Process(System.Xml.XmlReader,System.String,XmlPrime.Serialization.XdmWriterSettings,XmlPrime.XIncludeSettings)">
      <summary>
            Performs XML inclusion processing on an <see cref="T:System.Xml.XmlReader"/> instance and 
            serializes the result to the specified file using the specified
            <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/>.
            </summary>
      <param name="reader">The document to serialize.</param>
      <param name="outputFileName">The name of the file to which you want to write.  The <paramref name="outputFileName"/> must be a file system path.</param>
      <param name="settings">The serialization settings.</param>
      <param name="includeSettings">A <see cref="T:XmlPrime.XIncludeSettings"/> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader"/>, <paramref name="outputFileName"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.XInclude.Process(System.Xml.XmlReader,System.IO.Stream,XmlPrime.Serialization.XdmWriterSettings,XmlPrime.XIncludeSettings)">
      <summary>
            Performs XML inclusion processing on an <see cref="T:System.Xml.XmlReader"/> instance and 
            serializes the result to a <see cref="T:System.IO.Stream"/> using the specified <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/>.
            </summary>
      <param name="reader">The document to serialize.</param>
      <param name="stream">The <see cref="T:System.IO.Stream"/> to serialize to.</param>
      <param name="settings">The serialization settings.</param>
      <param name="includeSettings">A <see cref="T:XmlPrime.XIncludeSettings"/> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader"/>, <paramref name="stream"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.XInclude.Process(System.Xml.XmlReader,System.IO.TextWriter,XmlPrime.Serialization.XdmWriterSettings,XmlPrime.XIncludeSettings)">
      <summary>
            Performs XML inclusion processing on an <see cref="T:System.Xml.XmlReader"/> instance and 
            serializes the result to a <see cref="T:System.IO.TextWriter"/> using the specified <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/>.
            </summary>
      <param name="reader">The document to serialize.</param>
      <param name="writer">The <see cref="T:System.IO.TextWriter"/> to serialize to.</param>
      <param name="settings">The serialization settings.</param>
      <param name="includeSettings">A <see cref="T:XmlPrime.XIncludeSettings"/> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader"/>, <paramref name="writer"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.XInclude.Process(System.IO.TextReader,System.Xml.XmlWriter,XmlPrime.XIncludeSettings)">
      <summary>
            Performs XML inclusion processing on an <see cref="T:System.IO.TextReader"/> instance and 
            serializes the result to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="reader">The document to serialize.</param>
      <param name="writer">The writer to serialize to.</param>
      <param name="includeSettings">A <see cref="T:XmlPrime.XIncludeSettings"/> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader"/> or <paramref name="writer"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.XInclude.Process(System.IO.TextReader,System.String,XmlPrime.Serialization.XdmWriterSettings,XmlPrime.XIncludeSettings)">
      <summary>
            Performs XML inclusion processing on an <see cref="T:System.IO.TextReader"/> instance and 
            serializes the result to the specified file using the specified
            <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/>.
            </summary>
      <param name="reader">The document to serialize.</param>
      <param name="outputFileName">The name of the file to which you want to write.  The <paramref name="outputFileName"/> must be a file system path.</param>
      <param name="settings">The serialization settings.</param>
      <param name="includeSettings">A <see cref="T:XmlPrime.XIncludeSettings"/> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader"/>, <paramref name="outputFileName"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.XInclude.Process(System.IO.TextReader,System.IO.Stream,XmlPrime.Serialization.XdmWriterSettings,XmlPrime.XIncludeSettings)">
      <summary>
            Performs XML inclusion processing on an <see cref="T:System.IO.TextReader"/> instance and 
            serializes the result to the specified <see cref="T:System.IO.Stream"/> using the specified
            <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/>.
            </summary>
      <param name="reader">The document to serialize.</param>
      <param name="stream">The <see cref="T:System.IO.Stream"/> to serialize to.</param>
      <param name="settings">The serialization settings.</param>
      <param name="includeSettings">A <see cref="T:XmlPrime.XIncludeSettings"/> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader"/>, <paramref name="stream"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="M:XmlPrime.XInclude.Process(System.IO.TextReader,System.IO.TextWriter,XmlPrime.Serialization.XdmWriterSettings,XmlPrime.XIncludeSettings)">
      <summary>
            Performs XML inclusion processing on an <see cref="T:System.IO.TextReader"/> instance and 
            serializes the result to a <see cref="T:System.IO.TextWriter"/> using the specified
            <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/>.
            </summary>
      <param name="reader">The document to serialize.</param>
      <param name="writer">The <see cref="T:System.IO.TextWriter"/> to serialize to.</param>
      <param name="settings">The serialization settings.</param>
      <param name="includeSettings">A <see cref="T:XmlPrime.XIncludeSettings"/> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader"/>, <paramref name="writer"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred during serialization.</exception>
    </member>
    <member name="T:XmlPrime.XIncludeSettings">
      <summary>
              Represents the user-controllable settings of XInclude processing.
            </summary>
      <remarks>
        <para>For security reasons, the loading of external resources is disabled.
                This means that only intra-document <c>xi:include</c> references can be processed.</para>
        <para>To enable the processing of external resources, set the <see cref="P:XmlPrime.XIncludeSettings.DocumentSet"/> property.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xinclude/">XML Inclusions (XInclude) Version 1.0 (Second Edition)</seealso>
    </member>
    <member name="M:XmlPrime.XIncludeSettings.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.XIncludeSettings"/> class.
            </summary>
      <exception cref="T:XmlPrime.LicenceException">The licence for XmlPrime was invalid</exception>
    </member>
    <member name="P:XmlPrime.XIncludeSettings.DocumentSet">
      <summary>
              Gets or sets the cache of documents and collections.
            </summary>
      <value>
              The <see cref="T:XmlPrime.DocumentSet"/> instance containing the cache of documents and collections.
            </value>
      <remarks>
        <para>
                The document set keeps a thread-safe cache of all documents and collections available to the query, and
                those marked as unavailable.
              </para>
        <para>
                The <c>fn:doc</c>, <c>fn:doc-available</c>, <c>fn:collection</c>, <c>fn:document</c>, 
                <c>fn:unparsed-text</c> and <c>fn:unparsed-text-available</c> functions all retrieve documents and
                collections through the document set.  This enforces stability of these function and the constraint that 
                <c>doc(document-uri($N)) is $N</c> is <c>true</c> for any document node <c>$N</c>.
              </para>
        <para>
                In order to prevent documents from being loaded every time the XQuery program, XPath expression or XSL
                transformation is run, the document set can be shared between queries.
              </para>
        <para>
                The document set can be pre-populated with documents and collections.
              </para>
        <para>
                If this property is set to <see langword="null"/> then the loading of external resources by functions
                such as <c>fn:doc</c> and <c>fn:collection</c> is prohibited.
              </para>
        <para>
                By default, this property is set to <see langword="null"/></para>
      </remarks>
    </member>
    <member name="P:XmlPrime.XIncludeSettings.FixupXmlBase">
      <summary>
            Gets or sets a value indicating whether to perform base URI (<c>xml:base</c>) fixup.
            </summary>
      <value>
        <see langword="true"/> if base URI fixup will be performed; otherwise, <see langword="false"/>.</value>
      <seealso href="http://www.w3.org/TR/xinclude/#base">4.5.5 Base URI Fixup</seealso>
      <remarks>
        <para>
                By default, the value of this property is <see langword="true"/>.
              </para>
      </remarks>
    </member>
    <member name="P:XmlPrime.XIncludeSettings.FixupXmlLang">
      <summary>
            Gets or sets a value indicating whether to perform language (<c>xml:lang</c>) fixup.
            </summary>
      <value>
        <see langword="true"/> if language fixup will be performed; otherwise, <see langword="false"/>.</value>
      <seealso href="http://www.w3.org/TR/xinclude/#language">4.5.6 Language Fixup</seealso>
      <remarks>
        <para>
                By default, the value of this property is <see langword="true"/>.
              </para>
      </remarks>
    </member>
    <member name="T:XmlPrime.XmlReaderDocumentResolver">
      <summary>
            An implementation of the <see cref="T:XmlPrime.IDocumentResolver"/> interface which uses a specified 
            <see cref="T:System.Xml.XmlReaderSettings"/> to retrieve documents.
            </summary>
      <seealso cref="T:XmlPrime.IDocumentResolver"/>
    </member>
    <member name="M:XmlPrime.XmlReaderDocumentResolver.#ctor(System.Xml.XmlReaderSettings)">
      <overloads>Initializes a new instance of the <see cref="T:XmlPrime.XmlReaderDocumentResolver"/> class.</overloads>
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.XmlReaderDocumentResolver"/> class from an 
            <see cref="T:System.Xml.XmlReaderSettings"/> instance.
            </summary>
      <param name="settings">The reader settings.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/> is <see langword="null"/>.</exception>
      <remarks>
        <para>Documents are resolved using the <see cref="T:System.Xml.XmlResolver"/> instance specified by the
            <see cref="T:System.Xml.XmlReaderSettings"/><see cref="P:System.Xml.XmlReaderSettings.XmlResolver"/> property.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XmlReaderDocumentResolver.#ctor(System.Xml.XmlResolver)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.XmlReaderDocumentResolver"/> class from an 
            <see cref="T:System.Xml.XmlResolver"/> instance.
            </summary>
      <param name="resolver">The resolver used to resolve URIs.</param>
    </member>
    <member name="M:XmlPrime.XmlReaderDocumentResolver.#ctor(System.Xml.XmlReaderSettings,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.XmlReaderDocumentResolver"/> class from an
            <see cref="T:System.Xml.XmlReaderSettings"/> instance.
            </summary>
      <param name="settings">The reader settings.</param>
      <param name="preserveLineInfo">If set to <see langword="true"/> the resolved document should preserve line numbering information; otherwise, <see langword="false"/>.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/> is <see langword="null"/>.</exception>
      <remarks>
            Documents are resolved using the <see cref="T:System.Xml.XmlResolver"/> instance specified by the
            <see cref="T:System.Xml.XmlReaderSettings"/><see cref="P:System.Xml.XmlReaderSettings.XmlResolver"/> property.
            </remarks>
    </member>
    <member name="M:XmlPrime.XmlReaderDocumentResolver.#ctor(System.Xml.XmlResolver,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.XmlReaderDocumentResolver"/> class from an
            <see cref="T:System.Xml.XmlResolver"/> instance.
            </summary>
      <param name="resolver">The resolver used to resolve URIs.</param>
      <param name="preserveLineInfo">If set to <see langword="true"/> the resolved document should preserve line numbering information; otherwise, <see langword="false"/>.</param>
    </member>
    <member name="M:XmlPrime.XmlReaderDocumentResolver.ResolveDocument(XmlPrime.AnyUri,XmlPrime.DocumentSet,System.Xml.XmlNameTable,XmlPrime.InputSettings)">
      <summary>
            Resolves a URI to a document.
            </summary>
      <param name="uri">The absolute URI of the document to resolve.</param>
      <param name="documentSet">The document set which can be used to retrieve resources required to retrieve the document (for example this
            can be used to retrieve an unparsed resource).</param>
      <param name="nameTable">The name table to use to load the document.</param>
      <param name="inputSettings">The input settings.</param>
      <returns>
            An <see cref="T:System.Xml.XPath.IXPathNavigable"/> instance representing the document for the specified URI, or
            <see langword="null"/> if the URI can not be mapped to a document.
            </returns>
      <remarks>
        <para>
            A return value of <see langword="null"/> indicates that <paramref name="uri"/> is not supported by this
            resolver (for example an unsupported URI scheme).  If the URI does have meaning to this resolver but there was
            an error retrieving the document then an exception should be thrown.
            </para>
        <para>
            The document URI of the returned document must either be <paramref name="uri"/> or the empty string.
            </para>
      </remarks>
    </member>
    <member name="T:XmlPrime.XmlNamespaces">
      <summary>
            	XML namespaces with special significance to XmlPrime.
            </summary>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.LocalFunctionsNamespace">
      <summary>
            	The XQuery local functions namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.w3.org/2005/xquery-local-functions</c>.</value>
      <remarks>
        <para>
            		In XQuery, the prefix <c>local</c> is bound to this namespace by default.
            	</para>
        <para>
            		The local functions namespace is intended for use by functions in an XQuery main module, to avoid having to
            		create a new namespace in which to declare them.
            	</para>
      </remarks>
      <seealso href="http://www.w3.org/2005/xquery-local-functions">XQuery 1.0 Local Functions Namespace</seealso>
      <seealso href="http://www.w3.org/TR/2007/REC-xquery-20070123/#FunctionDeclns">[XQuery 1.0: An XML Query Language] 4.15 Function Declaration</seealso>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.MathMLNamespace">
      <summary>
            	The Mathematical Markup Language (MathML) namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.w3.org/1999/xhtml</c>.</value>
      <remarks>
            	This namespace is the namespace for all elements in 
            	<see href="http://www.w3.org/TR/MathML/">Mathematical Markup Language (MathML) Version 3.0</see>.
            </remarks>
      <seealso href="http://www.w3.org/TR/MathML/">Mathematical Markup Language (MathML) Version 3.0 </seealso>
            .
        </member>
    <member name="F:XmlPrime.XmlNamespaces.OutputNamespace">
      <summary>
            	The XSLT and XQuery Serialization 3.0 namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.w3.org/2010/xslt-xquery-serialization/</c>.</value>
      <remarks>
            	The serialization namespace can be used along with the <c>declare option</c> syntax to set serialization
            	parameters from within a query.
            </remarks>
      <seealso href="http://www.w3.org/TR/xslt-xquery-serialization-30/#serparams-in-xdm-instance">[XSLT and XQuery Serialization 3.0] 3.1 Setting Serialization Parameters by Means of a Data Model Instance</seealso>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.ScriptErrorNamespace">
      <summary>
            	A namespace used for errors and warnings raised by an external compiler in <c>&lt;xmlprime:script&gt;</c> and <c>&lt;msxsl:script&gt;</c> elements.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.xmlprime.com/script/error</c></value>
      <remarks>
            	Note that this namespace is specific to XmlPrime.
            </remarks>
      <seealso href="xmlprime-script-element.htm"/>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.SerializationNamespace">
      <summary>
            	The XmlPrime serialization options namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.xmlprime.com/serialization</c>.</value>
      <remarks>
            	The serialization namespace can be used along with the <c>declare option</c> syntax to set serialization
            	parameters from within a query.  This is also the namespace of the implementation specific XmlPrime output 
            	methods and serialization parameters.  Note that this namespace is specific to XmlPrime.
            </remarks>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.SvgNamespace">
      <summary>
            calable Vector Graphics (SVG) namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.w3.org/1999/xhtml</c>.</value>
      <remarks>
            	This namespace is the namespace for all elements in 
            	<see href="http://www.w3.org/TR/SVG11/">calable Vector Graphics (SVG) 1.1 (Second Edition)</see>.
            </remarks>
      <seealso href="http://www.w3.org/TR/SVG11/">calable Vector Graphics (SVG) 1.1 (Second Edition)</seealso>
            .
        </member>
    <member name="F:XmlPrime.XmlNamespaces.XPathArrayFunctionsNamespace">
      <summary>
            	The XPath and XQuery array functions namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.w3.org/2005/xpath-functions/array</c>.</value>
      <remarks>
        <para>
            		This namespace is the namespace of the built in array functions in
            		<see href="http://www.w3.org/TR/xpath-functions-31/">XPath and XQuery Functions and Operators 3.1</see>.
            	</para>
        <para>
            		The <c>array</c> prefix is conventionally bound to this namespace. 
            	</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xpath-functions-31/">XPath and XQuery Functions and Operators 3.1</seealso>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.XPathErrorNamespace">
      <summary>
            	The XQuery 1.0 and XPath 2.0 error namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.w3.org/2005/xqt-errors</c>.</value>
      <remarks>
            	This is the namespace of all errors defined in
            	<see href="http://www.w3.org/TR/xpath-functions/">XQuery 1.0 and XPath 2.0 Functions and Operators</see>,
            	<see href="http://www.w3.org/TR/xpath20/">XML Path Language (XPath) 2.0</see>,
            	<see href="http://www.w3.org/TR/xquery/">XQuery 1.0: An XML Query Language</see>,
            	<see href="http://www.w3.org/TR/xslt20/">XSL Transformations (XSLT) Version 2.0</see> and
            	<see href="http://www.w3.org/TR/xslt-xquery-serialization/">XSLT 2.0 and XQuery 1.0 Serialization</see>.
            </remarks>
      <seealso href="http://www.w3.org/2005/xqt-errors/">XQuery 1.0 and XPath 2.0 Functions and Operators Error Codes Namespace</seealso>
      <seealso href="http://www.w3.org/TR/xpath-functions/">XQuery 1.0 and XPath 2.0 Functions and Operators</seealso>
      <seealso href="http://www.w3.org/TR/xpath20/">XML Path Language (XPath) 2.0</seealso>
      <seealso href="http://www.w3.org/TR/xquery/">XQuery 1.0: An XML Query Language</seealso>
      <seealso href="http://www.w3.org/TR/xslt20/">XSL Transformations (XSLT) Version 2.0</seealso>
      <seealso href="http://www.w3.org/TR/xslt-xquery-serialization/">XSLT 2.0 and XQuery 1.0 Serialization</seealso>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.XPathFunctionsNamespace">
      <summary>
            	The XQuery 1.0 and XPath 2.0 functions namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.w3.org/2005/xpath-functions</c>.</value>
      <remarks>
        <para>
            		This namespace is the namespace of the built in functions in
            		<see href="http://www.w3.org/TR/xpath-functions/">XQuery 1.0 and XPath 2.0 Functions and Operators</see>,
            		as well as the additional stylesheet functions defined in 
            		<see href="http://www.w3.org/TR/xslt20/">XSL Transformations (XSLT) Version 2.0</see>.
            	</para>
        <para>
            		This is the default function namespace in XQuery, XPath 2.0 and XSLT 2.0.  The <c>fn</c> prefix is 
            		conventionally bound to this namespace.  In XQuery the <c>fn</c> prefix is bound to this prefix by
            		default.
            	</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xpath-functions/">XQuery 1.0 and XPath 2.0 Functions and Operators</seealso>
      <seealso href="http://www.w3.org/TR/xslt20/#add-func">[XSL Transformations (XSLT) Version 2.0] 16 Additional Functions</seealso>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.XPathMapFunctionsNamespace">
      <summary>
            	The XPath and XQuery map functions namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.w3.org/2005/xpath-functions/map</c>.</value>
      <remarks>
        <para>
            		This namespace is the namespace of the built in map functions in
            		<see href="http://www.w3.org/TR/xpath-functions-31/">XPath and XQuery Functions and Operators 3.1</see>.
            	</para>
        <para>
            		The <c>map</c> prefix is conventionally bound to this namespace. 
            	</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xpath-functions-31/">XPath and XQuery Functions and Operators 3.1</seealso>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.XPathMathFunctionsNamespace">
      <summary>
            	The XPath and XQuery mathematical functions namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.w3.org/2005/xpath-functions/math</c>.</value>
      <remarks>
        <para>
            		This namespace is the namespace of the built in mathematical functions in
            		<see href="http://www.w3.org/TR/xpath-functions-39/">XPath and XQuery Functions and Operators 3.9</see>.
            	</para>
        <para>
            		The <c>math</c> prefix is conventionally bound to this namespace. 
            	</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xpath-functions30/">XPath and XQuery Functions and Operators 3.0</seealso>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.XProcErrorNamespace">
      <summary>
            	The XProc error namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.w3.org/ns/xproc-error</c></value>
      <remarks>
        <para>This is the namespace used for XProc errors.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xproc/#namespaces">XProc: An XML Pipeline Language</seealso>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.XProcNamespace">
      <summary>
            	The XProc namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.w3.org/ns/xproc</c></value>
      <remarks>
        <para>This is the namespace of the XProc XML vocabulary;</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xproc/#namespaces">XProc: An XML Pipeline Language</seealso>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.XProcStepNamespace">
      <summary>
            	The XProc step namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.w3.org/ns/xproc-step</c></value>
      <remarks>
        <para>This is the namespace used for documents that are inputs to and outputs from several standard and optional steps described in 
            		the XProc specification..</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xproc/#namespaces">XProc: An XML Pipeline Language</seealso>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.XQueryAnootationsNamespace">
      <summary>
            	The default namespace for XQuery annotations and annotation assertions.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.w3.org/2012/xquery</c>.</value>
      <remarks>
        <para>
            		This namespace is the default namespace for annotations and annotation assertions in  
            		<see href="http://www.w3.org/TR/xquery-30/">XQuery</see>.
            	</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xquery-30/">XQuery 3.0: An XML Query Language</seealso>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.XQueryOptionsNamespace">
      <summary>
            	The XQuery Options namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.w3.org/2012/xquery</c>.</value>
      <remarks>
            	The XQuery options namespace can be used along with the <c>declare option</c> syntax to required or prohibited features.
            </remarks>
      <seealso href="https://www.w3.org/XML/Group/qtspecs/specifications/xquery-30/html/xquery-30.html#id-option-declaration">[XQuery 3.0] 4.19 Option Declaration</seealso>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.XQueryXFullTextNamespace">
      <summary>
            	The XQueryX Full Text 1.0 namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.w3.org/2007/xpath-full-text</c>.</value>
      <remarks>
        <para>
            		This namespace is the namespace for all elements in the 
            		<see href="http://www.w3.org/TR/xpath-full-text-10/#id-xqft-xqueryx">XML Syntax (XQueryX) for XQuery and XPath Full Text 1.0</see>.
            	</para>
        <para>
            		The <c>xqxft</c> prefix is conventionally bound to this namespace.  
            	</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xpath-full-text-10/">XQuery and XPath Full Text 1.0</seealso>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.XQueryXNamespace">
      <summary>
            	The XQueryX namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.w3.org/2005/XQueryX</c>.</value>
      <remarks>
        <para>
            		This namespace is the namespace for all elements in the 
            		<see href="http://www.w3.org/TR/xqueryx/">XML Syntax for XQuery 1.0 (XQueryX)</see>.
            	</para>
        <para>
            		The <c>xqx</c> prefix is conventionally bound to this namespace.  
            	</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xqueryx/">XML Syntax for XQuery 1.0 (XQueryX)</seealso>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.XQueryXUpdateNamespace">
      <summary>
            	The XQueryX Update Facility 1.0 namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.w3.org/2007/xquery-update-10</c>.</value>
      <remarks>
        <para>
            		This namespace is the namespace for all elements in the 
            		<see href="http://www.w3.org/TR/xquery-update-10/#id-xquf-xqueryx">XML Syntax (XQueryX) for XQuery Update Facility 1.0</see>.
            	</para>
        <para>
            		The <c>xqxuf</c> prefix is conventionally bound to this namespace.  
            	</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xpath-full-text-10/">XQuery and XPath Full Text 1.0</seealso>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.XhtmlNamespace">
      <summary>
            	The XHTML namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.w3.org/1999/xhtml</c>.</value>
      <remarks>
            	This namespace is the namespace for all elements in 
            	<see href="http://www.w3.org/TR/xhtml1/">XHTML™ 1.0 The Extensible HyperText Markup Language (Second Edition)</see>.
            </remarks>
      <seealso href="http://www.w3.org/TR/xhtml1/">XHTML™ 1.0 The Extensible HyperText Markup Language (Second Edition)</seealso>
            .
        </member>
    <member name="F:XmlPrime.XmlNamespaces.XmlInclusionNamespace">
      <summary>
            	The XML Inclusion (XInclude) namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.w3.org/2001/XInclude"</c>.</value>
      <remarks>
        <para>
            		This namespace is the namespace for all elements in  
            		<see href="http://www.w3.org/TR/xinclude/">XML Inclusions (XInclude) Version 1.0</see>.
            	</para>
        <para>
            		The <c>xi</c> prefix is conventionally bound to this namespace.
            	</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xinclude/">XML Inclusions (XInclude) Version 1.0 (Second Edition)</seealso>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.XmlNamespace">
      <summary>
            	The XML namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.w3.org/XML/1998/namespace</c></value>
      <remarks>
        <para>
            		The prefix <c>xml</c> is always bound to this namespace, and no other prefix can be bound to this namespace.
            	</para>
        <para>
            		This namespace is used for the special attributes <c>xml:lang</c>, <c>xml:space</c> (as defined in
            		<see href="http://www.w3.org/TR/REC-xml/">Extensible Markup Language (XML) 1.0 (Fifth Edition)</see>),
            		<c>xml:base</c> (as defined in <see href="http://www.w3.org/TR/xmlbase/">Xml Base (Second Edition)</see>)
            		and <c>xml:id</c> (as defined in <see href="http://www.w3.org/TR/xml-id/">xml:id Version 1.0</see>).
            	</para>
      </remarks>
      <seealso href="http://www.w3.org/XML/1998/namespace">The "xml:" Namespace</seealso>
      <seealso href="http://www.w3.org/TR/REC-xml/#sec-white-space">[Extensible Markup Language (XML) 1.0 (Fifth Edition)] 2.10 White Space Handling</seealso>
      <seealso href="http://www.w3.org/TR/REC-xml/#sec-lang-tag">[Extensible Markup Language (XML) 1.0 (Fifth Edition)] 2.12 Language Identification</seealso>
      <seealso href="http://www.w3.org/TR/xmlbase/#syntax">[Xml Base (Second Edition)] 3 <c>xml:base</c> Attribute</seealso>
      <seealso href="http://www.w3.org/TR/xml-id/">xml:id Version 1.0</seealso>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.XmlNamespacesNamespace">
      <summary>
            	The XML Namespaces namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.w3.org/2000/xmlns/</c>.</value>
      <remarks>
        <para>
            		The prefix <c>xmlns</c> is always bound to this namespace, and no other prefix can be bound to this
            		namespace.
            	</para>
        <para>
            		It is impossible to construct an element or attribute in this namespace, although this is the namespace of
            		namespace nodes in a DOM representation.
            	</para>
      </remarks>
      <seealso href="http://www.w3.org/2000/xmlns/">A Namespace Name for xmlns Attributes</seealso>
      <seealso href="http://www.w3.org/TR/REC-xml-names/">Namespaces in XML 1.0 (Second Edition)</seealso>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.XmlPrimeErrorNamespace">
      <summary>
            	The XmlPrime error namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.xmlprime.com/errors</c>.</value>
      <remarks>
            	This is the namespace of all XmlPrime specific errors.
            </remarks>
      <seealso cref="T:XmlPrime.XdmException"/>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.XmlPrimeFunctionsNamespace">
      <summary>
            	The XmlPrime XPath functions namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.xmlprime.com/xpath-functions</c>.</value>
      <para>
            		This namespace is the namespace of the built-in XmlPrime extension functions.
            	</para>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.XmlPrimeNamespace">
      <summary>
            	The XmlPrime namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.xmlprime.com/</c>.</value>
      <remarks>
            	This namespace is used for XmlPrime extension functions, pragmas and instructions.  Note that this namespace is specific to XmlPrime.
            </remarks>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.XmlSchemaNamespace">
      <summary>
            	The XML Schema namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.w3.org/2001/XMLSchema</c></value>
      <remarks>
        <para>
            		This is the namespace used by <see href="http://www.w3.org/XML/Schema">XML Schema</see>, and for all the
            		built in types defined by the
            		<see href="http://www.w3.org/TR/xpath-datamodel/">XQuery 1.0 and XPath 2.0 Data Model</see>.
            	</para>
        <para>
            		The <c>xs</c> prefix is conventionally bound to this namespace.  In XQuery, the <c>xs</c> prefix is bound
            		to this namespace by default.
            	</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xmlschema-1/">XML Schema Part 1: Structures Second Edition</seealso>
      <seealso href="http://www.w3.org/TR/xmlschema-2/">XML Schema Part 2: Datatypes Second Edition</seealso>
      <seealso href="http://www.w3.org/TR/xpath-datamodel/#types-predefined">[XQuery 1.0 and XPath 2.0 Data Model] 2.6.2 Predefined Types</seealso>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.XsiNamespace">
      <summary>
            	The XML Schema Instance namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.w3.org/2001/XMLSchema-instance</c></value>
      <remarks>
        <para>
            		This namespace is defined by 
            		<see href="http://www.w3.org/TR/xmlschema-1/">XML Schema Part 1: Structures Second Edition</see> and is used
            		for the special attributes <c>xsi:type</c>, <c>xsi:nil</c>, <c>xsi:schemaLocation</c> and
            		<c>xsi:noNamespaceSchemaLocation</c>.
            	</para>
        <para>
            		The <c>xsi</c> prefix is conventionally bound to this namespace.  In XQuery, the <c>xsi</c> prefix is bound
            		to this namespace by default.
            	</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xmlschema-1/#Instance_Document_Constructions">[Xml Schema Part 1: Structures Second Edition] 2.6 Schema-Related Markup in Documents Being Validated</seealso>
    </member>
    <member name="F:XmlPrime.XmlNamespaces.XsltNamespace">
      <summary>
            	The XSL Transformations (XSLT) namespace.
            </summary>
      <value>The <see cref="T:System.String"/> value <c>http://www.w3.org/1999/XSL/Transform</c>.</value>
      <remarks>
        <para>
            		This namespace is the namespace for all elements in  
            		<see href="http://www.w3.org/TR/xslt10">XSL Transformations (XSLT) Version 1.0</see> and
            		<see href="http://www.w3.org/TR/xslt20/">XSL Transformations (XSLT) Version 2.0</see>.
            	</para>
        <para>
            		The <c>xsl</c> prefix is conventionally bound to this namespace.
            	</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt10">XSL Transformations (XSLT) Version 1.0</seealso>
      <seealso href="http://www.w3.org/TR/xslt20/">XSL Transformations (XSLT) Version 2.0</seealso>
    </member>
    <member name="M:XmlPrime.XmlNamespaces.IsForbiddenAnnotationNamespace(System.String)">
      <summary>
            Determines whether it is forbidden for an annotation to have the specified namespace URI.
            </summary>
      <param name="ns">A namespace URI.</param>
      <returns>
        <see langword="true"/> if it is forbidden for an annotation to have namespace URI <paramref name="ns"/>; 
              otherwise <see langword="false"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.XmlNamespaces.IsForbiddenFunctionNamespace(System.String)">
      <summary>
            Determines whether it is forbidden for a function to have the specified namespace URI.
            </summary>
      <param name="ns">A namespace URI.</param>
      <returns>
        <see langword="true"/> if it is forbidden for a function to have namespace URI <paramref name="ns"/>; 
              otherwise <see langword="false"/>.
            </returns>
    </member>
    <member name="T:XmlPrime.XmlResourceResolver">
      <summary>
            An implementation of the <see cref="T:XmlPrime.IResourceResolver"/> interface uses a specified 
            <see cref="T:System.Xml.XmlResolver"/> to retrieve resources.
            </summary>
      <seealso cref="T:XmlPrime.IResourceResolver"/>
    </member>
    <member name="M:XmlPrime.XmlResourceResolver.#ctor(System.Xml.XmlResolver)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.XmlResourceResolver"/> class.
            </summary>
      <param name="resolver">The resolver to wrap.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resolver"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.XmlResourceResolver.ResolveResource(XmlPrime.AnyUri)">
      <summary>
            Resolves a URI to retrieve a resource.
            </summary>
      <param name="uri">The absolute URI of the resource to resolve.</param>
      <returns>
            An <see cref="T:XmlPrime.ResolvedResource"/> instance containing the resource at the specified URI, or
            <see langword="null"/> if the URI can not be mapped to a resource.
            </returns>
      <remarks>
            A return value of <see langword="null"/> indicates that <paramref name="uri"/> is not supported by this
            resolver (for example an unsupported URI scheme).  If the URI does have meaning to this resolver but there
            was an error retrieving the document then an exception should be thrown.
            </remarks>
    </member>
    <member name="T:XmlPrime.XmlVersion">
      <summary>
             Enumerates XML standard versions.
            </summary>
    </member>
    <member name="F:XmlPrime.XmlVersion.Xml10">
      <summary>
            Extensible Markup Language (XML) 1.0 (Latest Edition) (http://www.w3.org/TR/xml/)
            </summary>
    </member>
    <member name="F:XmlPrime.XmlVersion.Xml11">
      <summary>
            Extensible Markup Language (XML) 1.1 (Latest Edition) (http://www.w3.org/TR/xml11/)
            </summary>
    </member>
    <member name="T:XmlPrime.XPathArray">
      <summary>
              Represents an map in the XQuery 3.0 and XPath 3.0 Data Model (XDM).
            </summary>
    </member>
    <member name="T:XmlPrime.XPathFunctionItem">
      <summary>
              Represents a function item in the XQuery 3.0 and XPath 3.0 Data Model (XDM).
            </summary>
    </member>
    <member name="M:XmlPrime.XPathFunctionItem.Equals(System.Object)">
      <summary>
              Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
      <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
      <returns>
        <see langword="true"/> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, <see langword="false"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.XPathFunctionItem.GetHashCode">
      <summary>
              Serves as a hash code for a particular type.
            </summary>
      <returns>A hash code.</returns>
    </member>
    <member name="M:XmlPrime.XPathFunctionItem.ToString">
      <summary>
              Returns a <see cref="T:System.String"/> that represents the current <see cref="T:XmlPrime.XPathAtomicValue"/>.
            </summary>
      <returns>
              A <see cref="T:System.String"/> that represents the current <see cref="T:XmlPrime.XPathAtomicValue"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.XPathFunctionItem.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <overloads>
              Returns the item's value as the specified type.
            </overloads>
      <summary>
              Returns the item's value as the type specified using the <see cref="T:System.Xml.IXmlNamespaceResolver"/>
              object specified to resolve namespace prefixes.
            </summary>
      <param name="returnType">The type to return the item value as.</param>
      <param name="nsResolver">The <see cref="T:System.Xml.IXmlNamespaceResolver"/> object used to resolve namespace
              prefixes.</param>
      <returns>
              The value of the item as the type requested.
            </returns>
      <exception cref="T:System.FormatException">
              The item's value is not in the correct format for the target type.
            </exception>
      <exception cref="T:System.InvalidCastException">
              The attempted cast is not valid.
            </exception>
      <exception cref="T:System.OverflowException">
              The attempted cast resulted in an overflow.
            </exception>
    </member>
    <member name="M:XmlPrime.XPathFunctionItem.DeepEquals(XmlPrime.XPathFunctionItem,XmlPrime.Collation,XmlPrime.TimeZone)">
      <summary>
            Tests if this <see cref="T:XmlPrime.XPathFunctionItem"/> is deep-equal to the specified <see cref="T:XmlPrime.XPathFunctionItem"/> under the specified collation and implicit time zone.
            </summary>
      <param name="other">The array to compare.</param>
      <param name="collation">The collation to use for the comparison.</param>
      <param name="implicitTimeZone">The implicit time zone.</param>
      <returns>
        <see langword="true"/> if this array is equal to <paramref name="other"/>;  <see langword="false"/> otherwise.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other"/> or <paramref name="collation"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.NotSupportedException">The values cannot be compared.</exception>
      <remarks>
            Comparison follows the rules of <c>fn:deep-equal</c>.
            </remarks>
      <seealso href="http://www.w3.org/TR/xpath-functions/#func-deep-equal">15.3.1 fn:deep-equal [XQuery 1.0 and XPath 2.0 Functions and Operators (Second Edition)]</seealso>
    </member>
    <member name="P:XmlPrime.XPathFunctionItem.Arity">
      <summary>
              Gets the arity of the function referenced by this funciton item.
            </summary>
    </member>
    <member name="P:XmlPrime.XPathFunctionItem.IsNode">
      <summary>
              Gets a value indicating whether the item represents a node or an atomic value.
            </summary>
      <value>
        <see langword="true"/> if the item is a node; otherwise <see langword="false"/>.</value>
    </member>
    <member name="P:XmlPrime.XPathFunctionItem.LocalName">
      <summary>
               Gets the local name of the function referenced by this funciton item.
            </summary>
      <value>
            A <see cref="T:System.String"/> representing the local name of the function, or <see cref="F:System.String.Empty"/>
            if the function is an anonymous function.
            </value>
    </member>
    <member name="P:XmlPrime.XPathFunctionItem.Name">
      <summary>
              Gets the name of the function, or <see langword="null"/> if it is anonymous.
            </summary>
      <value>
              The name of the function, or <see langword="null"/> if it is anonymous.
            </value>
    </member>
    <member name="P:XmlPrime.XPathFunctionItem.Namespace">
      <summary>
               Gets the namespace URI of the function referenced by this function item.
            </summary>
      <value>
            A <see cref="T:System.String"/> representing the namespace URI of the function, or <see cref="F:System.String.Empty"/>
            if the function is not in a namespace or is an anonymous function.
            </value>
    </member>
    <member name="P:XmlPrime.XPathFunctionItem.TypedValue">
      <summary>
              Gets the current item as a boxed object of the most appropriate .NET Framework version 2.0 type according to its schema type.
            </summary>
      <value>
              The current item as a boxed object of the most appropriate .NET Framework type.
            </value>
    </member>
    <member name="P:XmlPrime.XPathFunctionItem.Value">
      <summary>
              Gets the string value of the item.
            </summary>
      <value>The string value of the item</value>
    </member>
    <member name="P:XmlPrime.XPathFunctionItem.ValueAsBoolean">
      <summary>
              Gets the item's value as a <see cref="T:System.Boolean"/>.
            </summary>
      <value>
              The item's value as a <see cref="T:System.Boolean"/>.
            </value>
      <exception cref="T:System.FormatException">The value was not a valid lexical value for <c>xs:boolean</c>.</exception>
      <exception cref="T:System.InvalidCastException">The value cannot be cast to <c>xs:boolean</c>.</exception>
    </member>
    <member name="P:XmlPrime.XPathFunctionItem.ValueAsDateTime">
      <summary>
              When overridden in a derived class, gets the item's value as a <see cref="T:System.DateTime"/>.
            </summary>
      <value/>
      <returns>
              The item's value as a <see cref="T:System.DateTime"/>.
            </returns>
      <exception cref="T:System.FormatException">
              The item's value is not in the correct format for the <see cref="T:System.DateTime"/> type.
            </exception>
      <exception cref="T:System.InvalidCastException">
              The attempted cast to <see cref="T:System.DateTime"/> is not valid.
            </exception>
    </member>
    <member name="P:XmlPrime.XPathFunctionItem.ValueAsDouble">
      <summary>
              Gets the item's value as a <see cref="T:System.Decimal"/>.
            </summary>
      <value>
              The item's value as a <see cref="T:System.Decimal"/>.
            </value>
      <exception cref="T:System.OverflowException">The value was too large to be stored in a <see cref="T:System.Double"/></exception>
      <exception cref="T:System.FormatException">The value was not a valid lexical value for <c>xs:double</c>.</exception>
      <exception cref="T:System.InvalidCastException">The value cannot be cast to <c>xs:double</c>.</exception>
    </member>
    <member name="P:XmlPrime.XPathFunctionItem.ValueAsInt">
      <summary>
              Gets the item's value as an <see cref="T:System.Int32"/>.
            </summary>
      <value>The item's value as an <see cref="T:System.Int32"/>.</value>
      <exception cref="T:System.FormatException">
              The item's value is not in the correct format for the <see cref="T:System.Int32"/> type.
            </exception>
      <exception cref="T:System.InvalidCastException">
              The attempted cast to <see cref="T:System.Int32"/> is not valid.
            </exception>
      <exception cref="T:System.OverflowException">
              The attempted cast resulted in an overflow.
            </exception>
    </member>
    <member name="P:XmlPrime.XPathFunctionItem.ValueAsLong">
      <summary>
              When overridden in a derived class, gets the item's value as an <see cref="T:System.Int64"/>.
            </summary>
      <value/>
      <returns>
              The item's value as an <see cref="T:System.Int64"/>.
            </returns>
      <exception cref="T:System.FormatException">
              The item's value is not in the correct format for the <see cref="T:System.Int64"/> type.
            </exception>
      <exception cref="T:System.InvalidCastException">
              The attempted cast to <see cref="T:System.Int64"/> is not valid.
            </exception>
      <exception cref="T:System.OverflowException">
              The attempted cast resulted in an overflow.
            </exception>
    </member>
    <member name="P:XmlPrime.XPathFunctionItem.ValueType">
      <summary>
              Gets the .NET Framework version 2.0 type of the item.
            </summary>
      <value>
              The .NET Framework type of the item. The default value is <see cref="T:System.String"/>.
            </value>
    </member>
    <member name="P:XmlPrime.XPathFunctionItem.XmlType">
      <summary>
              Gets the <see cref="T:System.Xml.Schema.XmlSchemaType"/> for the item.
            </summary>
      <value>
        <see langword="null"/>.</value>
    </member>
    <member name="M:XmlPrime.XPathArray.DeepEquals(XmlPrime.XPathArray,XmlPrime.Collation,XmlPrime.TimeZone)">
      <summary>
            Tests if this <see cref="T:XmlPrime.XPathArray"/> is deep-equal to the specified <see cref="T:XmlPrime.XPathArray"/> under the specified collation and implicit time zone.
            </summary>
      <param name="other">The array to compare.</param>
      <param name="collation">The collation to use for the comparison.</param>
      <param name="implicitTimeZone">The implicit time zone.</param>
      <returns>
        <see langword="true"/> if this array is equal to <paramref name="other"/>;  <see langword="false"/> otherwise.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other"/> or <paramref name="collation"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.NotSupportedException">The values cannot be compared.</exception>
      <remarks>
            Comparison follows the rules of <c>fn:deep-equal</c>.
            </remarks>
      <seealso href="http://www.w3.org/TR/xpath-functions/#func-deep-equal">15.3.1 fn:deep-equal [XQuery 1.0 and XPath 2.0 Functions and Operators (Second Edition)]</seealso>
    </member>
    <member name="P:XmlPrime.XPathArray.Empty">
      <summary>
            Gets an empty array instance.
            </summary>
      <value>
            An empty <see cref="T:XmlPrime.XPathArray"/> instance.
            </value>
    </member>
    <member name="P:XmlPrime.XPathArray.Size">
      <summary>
            Gets the number of members in the array.
            </summary>
      <value>
            The number of members in the array.
            </value>
    </member>
    <member name="T:XmlPrime.XdmFunctionAttribute">
      <summary>
            	This attribute is used to export a function in an XDM module.
            </summary>
      <remarks>
        <para>
            		The <see cref="P:XmlPrime.XdmFunctionAttribute.LocalName"/> property can be used to specify the name of the exported function in XQuery.
            	</para>
        <para>
            		This attribute is ignored unless the containing object is marked with <see cref="T:XmlPrime.XdmModuleAttribute"/>.
            	</para>
        <para>
            		If the function does not satisfy the conditions specified for <see cref="M:XmlPrime.XdmModule.NativeModule``1"/>
            		then a <see cref="T:System.NotSupportedException"/> will be thrown when <see cref="M:XmlPrime.XdmModule.NativeModule``1"/>
            		is called for the containing type.
            	</para>
        <para>
            		The <see cref="T:XmlPrime.XdmTypeAttribute"/> can be used to specify the XDM types of the arguments and the return type
            		of the exported function.
            	</para>
      </remarks>
      <seealso cref="T:XmlPrime.XdmModuleAttribute"/>
      <seealso cref="T:XmlPrime.XdmTypeAttribute"/>
      <seealso cref="M:XmlPrime.XdmModule.NativeModule``1"/>
    </member>
    <member name="M:XmlPrime.XdmFunctionAttribute.#ctor">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XdmFunctionAttribute"/> class.
            </summary>
    </member>
    <member name="M:XmlPrime.XdmFunctionAttribute.#ctor(System.String)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XdmFunctionAttribute"/> class with the specified local name.
            </summary>
      <param name="localName">The local name of the exported function.</param>
    </member>
    <member name="P:XmlPrime.XdmFunctionAttribute.LocalName">
      <summary>
            	The local name of the exported function.
            </summary>
      <value>The local name of the exported function.</value>
      <remarks>
        <para>
            		The namespace of the function is specified by the <see cref="T:XmlPrime.XdmModuleAttribute"/> attribute on the
            		containing type.
            	</para>
        <para>
            		If this property is set to <see langword="null"/> then the name of the method is used.
            	</para>
        <para>
            		If this property is set to a value that is not a valid <code>xs:NCName</code>, or this property is set to
            		<see langword="null"/>, and the name of the exported method is not a valid <code>xs:NCName</code> then a
            		<see cref="T:System.InvalidOperationException"/> will be thrown when an attempt is made to load the containing module.
            	</para>
      </remarks>
    </member>
    <member name="T:XmlPrime.XdmModuleAttribute">
      <summary>
            	Indicates that a class implements an XDM module.
            </summary>
      <remarks>
        <para>
            		An XDM module exports a number of functions that can be called from an XPath expression, XQuery program, or
            		XSL transformation.  In order to use such a module, call the <see cref="M:XmlPrime.XdmModule.NativeModule``1"/>
            		method to obtain an <see cref="T:XmlPrime.XdmModule"/> object which can be added to the 
            		<see cref="P:XmlPrime.StaticContextSettings.Libraries"/> property.
            	</para>
        <para>
            		The <see cref="P:XmlPrime.XdmModuleAttribute.TargetNamespace"/> property can be set to define the target namespace of the module.
            	</para>
        <para>
            		Only public static functions with the <see cref="T:XmlPrime.XdmFunctionAttribute"/> attribute are exported.
            	</para>
      </remarks>
      <seealso cref="T:XmlPrime.XdmFunctionAttribute"/>
      <seealso cref="M:XmlPrime.XdmModule.NativeModule``1"/>
    </member>
    <member name="M:XmlPrime.XdmModuleAttribute.#ctor">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XdmModuleAttribute"/> class.
            </summary>
      <remarks>
        <para>
            		All exported functions in the module are in the target namespace.
            	</para>
        <para>
            		The target namespace will be set to a URI with scheme <c>clitype</c> and with the path equal to the
            		full CLR name of the type, URL encoded if necessary.
            	</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XdmModuleAttribute.#ctor(System.String)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XdmModuleAttribute"/> class.
            </summary>
      <param name="targetNamespace">The target namespace of the module.</param>
      <remarks>
        <para>
            		All exported functions in the module are in the target namespace.
            	</para>
        <para>
            		If <paramref name="targetNamespace"/> is set to <see langword="null"/> then the namespace is set to a URI
            		with scheme <c>clitype</c> and with the path equal to the full CLR name of the type, URL encoded if
            		necessary.
            	</para>
        <para>
            		If <paramref name="targetNamespace"/> is set to a value that is not a valid absolute <code>xs:anyURI</code> then a
            		<see cref="T:System.InvalidOperationException"/> will be thrown when an attempt is made to load the module.
            	</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.XdmModuleAttribute.TargetNamespace">
      <summary>
            	Gets or sets the target namespace of the module.
            </summary>
      <value>
            	The target namespace of the module, or <see langword="null"/> to use the default.
            </value>
      <summary>
            	The target namespace of the exported module.
            </summary>
      <value>The target namespace of the module.</value>
      <remarks>
        <para>
            		If this property is set to <see langword="null"/> then the target namespace of the module is set to a URI with scheme
            		<c>clitype</c> and with the path equal to the full CLR name of the type, URL encoded if necessary.
            	</para>
        <para>
            		If this property is set to a value that is not a valid absolute <code>xs:anyURI</code> then a
            		<see cref="T:System.InvalidOperationException"/> will be thrown when an attempt is made to load the module.
            	</para>
      </remarks>
    </member>
    <member name="T:XmlPrime.XPathOptionalFeatures">
      <summary>
        <para>Specifies optional XPath features which may be switched off.</para>
        <para>This enumeration has a <see cref="T:System.FlagsAttribute"/> attribute that allows a bitwise combination of its member
            values.</para>
      </summary>
      <remarks>
        <para>
            Use the <see cref="P:XmlPrime.XPathSettings.EnabledFeatures"/> property to enable or disable optional XPath features. 
            Disabling a feature causes an error to be raised during compilation of an expression if the feature is used in
            that query.</para>
        <para>Note that the Static Typing Feature may be enabled by setting the 
            <see cref="P:XmlPrime.XPathSettings.TypeCheckingMode"/> properties to <see cref="F:XmlPrime.TypeCheckingMode.Static"/> or <see cref="F:XmlPrime.TypeCheckingMode.Pedantic"/>.
            </para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xquery/#id-conform-optional-features">[XQuery 1.0: An XML Query Language] 5.2 Optional Features</seealso>
    </member>
    <member name="F:XmlPrime.XPathOptionalFeatures.None">
      <summary>
            Minimal conformance. No optional features are enabled.
            </summary>
    </member>
    <member name="F:XmlPrime.XPathOptionalFeatures.LoadXQueryModuleFunction">
      <summary>
            Enables use of the XPath and XQuery Functions and Operators 3.1 <c>fn:load-xquery-module</c> function.
            </summary>
    </member>
    <member name="F:XmlPrime.XPathOptionalFeatures.TransformFunction">
      <summary>
            Enables use of the XPath and XQuery Functions and Operators 3.1 <c>fn:transform</c> function.
            </summary>
    </member>
    <member name="F:XmlPrime.XPathOptionalFeatures.AllFeatures">
      <summary>
            All optional features are enabled.
            </summary>
    </member>
    <member name="T:XmlPrime.XPath2Functions">
      <summary>
            An XSLT extension object that provides implementations of some XPath 2.0 functions for use with
            <see cref="T:System.Xml.Xsl.XslCompiledTransform"/>.
            </summary>
    </member>
    <member name="M:XmlPrime.XPath2Functions.Abs(System.Decimal)">
      <summary>
            Implementation of the <c>fn:abs</c> function.
            </summary>
      <param name="argument">The argument.</param>
      <returns>The value of the function.</returns>
    </member>
    <member name="M:XmlPrime.XPath2Functions.BaseURI(System.Xml.XPath.XPathNavigator)">
      <summary>
            Implementation of the <c>fn:base-uri</c> function.
            </summary>
      <param name="argument">The argument.</param>
      <returns>The value of the function.</returns>
    </member>
    <member name="M:XmlPrime.XPath2Functions.DocumentURI(System.Xml.XPath.XPathNavigator)">
      <summary>
            Implementation of the <c>fn:document-uri</c> function.
            </summary>
      <param name="argument">The argument.</param>
      <returns>The value of the function.</returns>
    </member>
    <member name="M:XmlPrime.XPath2Functions.EncodeForUri(System.String)">
      <summary>
            Implementation of the <c>fn:encode-for-uri</c> function.
            </summary>
      <param name="argument">The value to encode.</param>
      <returns>The value of the function.</returns>
    </member>
    <member name="M:XmlPrime.XPath2Functions.EndsWith(System.String,System.String)">
      <summary>
            Implementation of the <c>fn:ends-with</c> function.
            </summary>
      <param name="argument1">The first argument.</param>
      <param name="argument2">The second argument.</param>
      <returns>The value of the function.</returns>
    </member>
    <member name="M:XmlPrime.XPath2Functions.EscapeHtmlUri(System.String)">
      <summary>
            Implementation of the <c>fn:encode-for-uri</c> function.
            </summary>
      <param name="argument">The value to encode.</param>
      <returns>The value of the function.</returns>
    </member>
    <member name="M:XmlPrime.XPath2Functions.IriToUri(System.String)">
      <summary>
            Implementation of the <c>fn:encode-for-uri</c> function.
            </summary>
      <param name="argument">The value to encode.</param>
      <returns>The value of the function.</returns>
    </member>
    <member name="M:XmlPrime.XPath2Functions.LowerCase(System.String)">
      <summary>
            Implementation of the <c>fn:upper-case</c> function.
            </summary>
      <param name="argument">The argument.</param>
      <returns>The value of the function.</returns>
    </member>
    <member name="M:XmlPrime.XPath2Functions.Matches(System.String,System.String,System.String)">
      <summary>
            Implementation of the <c>fn:matches</c> function.
            </summary>
      <param name="input">The input string.</param>
      <param name="pattern">The regular expression pattern to match.</param>
      <param name="flags">The flags influencing the match.</param>
      <returns>The value of the function.</returns>
    </member>
    <member name="M:XmlPrime.XPath2Functions.Matches(System.String,System.String)">
      <summary>
            Implementation of the <c>fn:matches</c> function.
            </summary>
      <param name="input">The input string.</param>
      <param name="pattern">The regular expression pattern to match.</param>
      <returns>The value of the function.</returns>
    </member>
    <member name="M:XmlPrime.XPath2Functions.NormalizeUnicode(System.String,System.String)">
      <summary>
            Implementation of the <c>fn:normalize-unicode</c> function.
            </summary>
      <param name="argument">The argument.</param>
      <param name="normalizationForm">The normalization form.</param>
      <returns>The value of the function.</returns>
      <exception cref="T:XmlPrime.XdmException">An <c>FOCH0003</c> error is raised if an invalid normalization form is requested.</exception>
    </member>
    <member name="M:XmlPrime.XPath2Functions.PopulateArgumentList(System.Xml.Xsl.XsltArgumentList)">
      <summary>
            Populates the supplied argument list with the <c>XPath 2.0</c> extension functions.
            </summary>
      <param name="argumentList">The argument list to populate.</param>
    </member>
    <member name="M:XmlPrime.XPath2Functions.Replace(System.String,System.String,System.String,System.String)">
      <summary>
            Implementation of the <c>fn:replace</c> function.
            </summary>
      <param name="input">The input string.</param>
      <param name="pattern">The regular expression pattern to match.</param>
      <param name="replacement">The replacement string.</param>
      <param name="flags">The flags influencing the match.</param>
      <returns>The value of the function.</returns>
    </member>
    <member name="M:XmlPrime.XPath2Functions.Replace(System.String,System.String,System.String)">
      <summary>
            Implementation of the <c>fn:replace</c> function.
            </summary>
      <param name="input">The input string.</param>
      <param name="pattern">The regular expression pattern to match.</param>
      <param name="replacement">The replacement string.</param>
      <returns>The value of the function.</returns>
    </member>
    <member name="M:XmlPrime.XPath2Functions.RoundHalfToEven(System.Decimal)">
      <summary>
            Implementation of the <c>fn:round-half-to-even</c> function.
            </summary>
      <param name="argument">The argument.</param>
      <returns>The value of the function.</returns>
    </member>
    <member name="M:XmlPrime.XPath2Functions.RoundHalfToEven(System.Decimal,System.Decimal)">
      <summary>
            Implementation of the <c>fn:round-half-to-even</c> function.
            </summary>
      <param name="argument">The argument.</param>
      <param name="precision">The precision.</param>
      <returns>The value of the function.</returns>
    </member>
    <member name="M:XmlPrime.XPath2Functions.UpperCase(System.String)">
      <summary>
            Implementation of the <c>fn:upper-case</c> function.
            </summary>
      <param name="argument">The argument.</param>
      <returns>The value of the function.</returns>
    </member>
    <member name="T:XmlPrime.TraceEventArgs">
      <summary>
            Provides data for the <see cref="E:XmlPrime.DynamicContextSettings.Trace"/> event. 
            </summary>
      <remarks>
        <para>The <see cref="E:XmlPrime.DynamicContextSettings.Trace"/> event occurs when an <c>fn:trace</c> function is evaluated
            during execution of an XQuery program, an XPath expression or an XSL transformation.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xpath-functions/#func-trace">[XQuery 1.0 and XPath 2.0 Functions and Operators] 4 The Trace Function</seealso>
    </member>
    <member name="P:XmlPrime.TraceEventArgs.Label">
      <summary>
            Gets the label associated with this event.
            </summary>
      <value>A <see cref="T:System.String"/> label associated with this event.</value>
      <remarks>
        <para>The label is the second argument to <c>fn:trace</c>.</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.TraceEventArgs.LineNumber">
      <summary>
            Gets the line number of the function call that raised the event.
            </summary>
      <value>
            An <see cref="T:System.Int32"/> line number of the function call, or <c>-1</c> if the line number is not known.
            </value>
      <remarks>
            The line number is 1-indexed, that is a value of <c>1</c> represents the first character in the document.
            </remarks>
    </member>
    <member name="P:XmlPrime.TraceEventArgs.LinePosition">
      <summary>
            Gets the character position within <see cref="P:XmlPrime.TraceEventArgs.LineNumber"/> of the function call that raised the event.
            </summary>
      <value>
            An <see cref="T:System.Int32"/> character position within <see cref="P:XmlPrime.TraceEventArgs.LineNumber"/> in the line of the function call, or <c>-1</c> if the line position is not known.
            </value>
      <remarks>
            The line character position is 1-indexed, that is a value of <c>1</c> represents the first character in a line.
            </remarks>
    </member>
    <member name="P:XmlPrime.TraceEventArgs.SourceUri">
      <summary>
            Gets the URI of the source file containing the function call that caused the event.
            </summary>
      <value>
            The source file in which the function call occurred, or <see cref="F:System.String.Empty"/> if the source file is not known.
            </value>
    </member>
    <member name="P:XmlPrime.TraceEventArgs.Value">
      <summary>
            Gets the value passed as the first argument to <c>fn:trace</c>.
            </summary>
      <value>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> object.</value>
    </member>
    <member name="T:XmlPrime.OptimizationLevel">
      <summary>
            Specifies the level of optimization to perform during query compilation.
            </summary>
      <remarks>
        <para>The optimization level controls the kinds of optimizations performed which will be performed
            during compilation of an XQuery program, and XPath expression or an XSL transformation.</para>
        <para>Higher levels of optimization may increase the time taken to compile a query, but typically improve the
            execution speed.  This is particularly noticeable when the query performs a significant amount of computation
            or is dealing with large input data.</para>
        <para>Use the <see cref="P:XmlPrime.StaticContextSettings.OptimizationLevel"/> property to set the level of optimization that
            will be performed during the compilation of an XQuery program, an XPath expression or an XSL transformation.</para>
      </remarks>
    </member>
    <member name="F:XmlPrime.OptimizationLevel.None">
      <summary>
            No query optimization is performed.
            </summary>
    </member>
    <member name="F:XmlPrime.OptimizationLevel.Local">
      <summary>
            Only localized query optimizations are performed.  In particular, common subexpression elimination is not
            applied.
            </summary>
    </member>
    <member name="F:XmlPrime.OptimizationLevel.Global">
      <summary>
            Localized and global query optimizations are performed, including those that significantly change the
            structure of the query.
            </summary>
    </member>
    <member name="F:XmlPrime.OptimizationLevel.Join">
      <summary>
            Join optimizations are performed, in addition to local and global optimizations.
            </summary>
    </member>
    <member name="F:XmlPrime.OptimizationLevel.Specialization">
      <summary>
            Function speciailzation is performed, in addition to join, local and global optimizations.
            </summary>
    </member>
    <member name="T:XmlPrime.ConstructionMode">
      <summary>
            Specifies the construction mode of an XQuery module.
            </summary>
      <remarks>
        <para>The construction mode governs the behaviour of element and document node constructors.</para>
        <para>Use the <see cref="P:XmlPrime.XQuerySettings.ConstructionMode"/> property to set the default construction mode.</para>
      </remarks>
      <seealso cref="P:XmlPrime.XQuerySettings.ConstructionMode"/>
      <seealso href="http://www.w3.org/TR/xquery/#id-content">[XQuery 1.0: An XML Query Language] 3.7.1.3 Content</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#id-construction-declaration">[XQuery 1.0: An XML Query Language] 4.6 Construction Declaration</seealso>
    </member>
    <member name="F:XmlPrime.ConstructionMode.Preserve">
      <summary>
            Indicates that the type of a constructed element node is <c>xs:anyType</c>, 
            and all attribute and element nodes copied during node construction retain their original types. 
            </summary>
    </member>
    <member name="F:XmlPrime.ConstructionMode.Strip">
      <summary>
            Indicates that the type of a constructed element node is
            <c>xs:untyped</c>; all element nodes copied during node construction receive the type <c>xs:untyped</c>, and all 
            attribute nodes copied during node construction receive the type <c>xs:untypedAtomic</c>.
            </summary>
    </member>
    <member name="T:XmlPrime.CopyNamespacesMode">
      <summary>
            Specifies the copy-namespaces mode of an XQuery module.
            </summary>
      <remarks>
        <para>The copy-namespaces mode controls the namespace bindings that are assigned when an existing element node is
            copied by an element constructor or document constructor.</para>
        <para>Use the <see cref="P:XmlPrime.XQuerySettings.CopyNamespacesMode"/> property to set the default copy-namespaces mode.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xquery/#id-content">[XQuery 1.0: An XML Query Language] 3.7.1.3 Content</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#id-copy-namespaces-decl">[XQuery 1.0: An XML Query Language] 4.9 Copy-Namespaces Declaration</seealso>
    </member>
    <member name="F:XmlPrime.CopyNamespacesMode.None">
      <summary>
            This is equivalent to <c>no-preserve, no-inherit</c>.  The in-scope namespaces of the copied element are
            only those used in the name of the element and its attributes.
            </summary>
    </member>
    <member name="F:XmlPrime.CopyNamespacesMode.Preserve">
      <summary>
            This is equivalent to <c>preserve, no-inherit</c>.  The in-scope namespaces of the copied element are the
            in-scope namespaces of the original element.
            </summary>
    </member>
    <member name="F:XmlPrime.CopyNamespacesMode.Inherit">
      <summary>
            This is equivalent to <c>no-preserve, inherit</c>.   The in-scope namespaces of the copied element are the 
            in-scope namespaces of the constructed node, along with the namespaces used in the name of the element and its 
            attributes.
            </summary>
    </member>
    <member name="F:XmlPrime.CopyNamespacesMode.PreserveInherit">
      <summary>
            The in-scope namespaces of the copied element are all the in-scope namespaces of the constructed node,
            augmented and overridden by all in-scope namespaces of the original element.
            </summary>
    </member>
    <member name="T:XmlPrime.TypeCheckingMode">
      <summary>
            Specifies the type checking mode.
            </summary>
      <remarks>
        <para>The <see cref="T:XmlPrime.TypeCheckingMode"/> enumeration is used by the 
            <see cref="P:XmlPrime.XPathSettings.TypeCheckingMode"/> and <see cref="P:XmlPrime.XQuerySettings.TypeCheckingMode"/> properties to set the 
            type checking mode used during during the compilation of an XQuery program or XPath expression.
            </para>
        <para>During compilation, type checking is always performed.  The type checking mode affects the behaviour 
            of the compiler when the static type of an argument to an expression does not match its expected type.</para>
        <para>Use the <see cref="P:XmlPrime.XPathSettings.TypeCheckingMode"/> and <see cref="P:XmlPrime.XQuerySettings.TypeCheckingMode"/> properties
             to set the type checking mode used during the compilation of an XQuery program, an XPath expression or an XSL transformation.</para>
      </remarks>
    </member>
    <member name="F:XmlPrime.TypeCheckingMode.Optimistic">
      <summary>
            Optimistic type checking is performed.  Errors are only reported in the case where the static type of an argument to an 
            expression can never match its expected type.  In all other cases run-time type checks are
            introduced by the compiler.
            </summary>
    </member>
    <member name="F:XmlPrime.TypeCheckingMode.Static">
      <summary>
            Static type checking using rules defined in <see href="http://www.w3.org/TR/xquery-semantics/">XQuery 1.0
            and XPath 2.0 Formal Semantics</see> augmented with many implementation-specific static typing rules.  No
            type checking is performed at runtime.
            </summary>
    </member>
    <member name="F:XmlPrime.TypeCheckingMode.Pedantic">
      <summary>
            Static type checking using only those rules defined in <see href="http://www.w3.org/TR/xquery-semantics/">XQuery
            1.0 and XPath 2.0 Formal Semantics</see>.  No type checking is performed at run time.
            </summary>
    </member>
    <member name="T:XmlPrime.UriType">
      <summary>
            Enumerates the specifications to which a URI may comply.
            </summary>
      <remarks>
        <para>All URIs conforming to RFC3986 also conform to RGC3987 and the LEIRI specifiation.</para>
        <para>All IRIs conforming to the LEIRI specifiation.</para>
      </remarks>
    </member>
    <member name="F:XmlPrime.UriType.LeIri">
      <summary>
            The URI conforms to <see href="http://www.w3.org/TR/leiri/">Legacy extended IRIs for XML resource identification</see>.
            </summary>
    </member>
    <member name="F:XmlPrime.UriType.Iri">
      <summary>
            The URI conforms to <see href="http://www.ietf.org/rfc/rfc3987.txt">RFC3987</see>.
            </summary>
    </member>
    <member name="F:XmlPrime.UriType.Uri">
      <summary>
            The URI conforms to <see href="http://www.ietf.org/rfc/rfc3986.txt">RFC3986</see>.
            </summary>
    </member>
    <member name="T:XmlPrime.AnyUri">
      <summary>
              Represents a Uniform Resource Locator.  The corresponding XML Schema type is <c>xs:anyURI</c>.
            </summary>
      <remarks>
        <para>
          <see cref="T:XmlPrime.AnyUri"/> represents a Uniform Resource Identifier (URI), 
                as specified in
                <see href="http://www.ietf.org/rfc/rfc3986.txt">RFC3986</see>,
                an Internationzied Resource Identifier (IRI), as specified in <see href="http://www.ietf.org/rfc/rfc3987.txt">RFC3987</see>, 
                or a Legacy extended IRI, as specified in
                <see href="http://www.w3.org/TR/leiri/">Legacy extended IRIs for XML resource identification</see>.
               .</para>
        <para>
          <see cref="T:XmlPrime.AnyUri"/> can represent relative URIs as well as absolute URIs.
              </para>
        <para>
                URIs in the <c>file:</c> scheme with no host also accept '\' characters as path separators.  This is a deviation from
                <see href="http://www.ietf.org/rfc/rfc3986.txt">RFC3986</see>, but is an often used convention.
              </para>
      </remarks>
      <threadsafety static="true" instance="true"/>
      <seealso href="http://www.w3.org/TR/xmlschema-2/#anyURI">[XML Schema Part 2: Datatypes Second Edition] 3.2.17 anyURI</seealso>
      <seealso href="http://www.ietf.org/rfc/rfc3986.txt">RFC3986 Uniform Resource Identifier (URI): Generic Syntax</seealso>
      <seealso href="http://www.ietf.org/rfc/rfc3987.txt">RFC3987 Internationalized Resource Identifiers (IRIs)</seealso>
      <seealso href="http://www.w3.org/TR/leiri/">Legacy extended IRIs for XML resource identification</seealso>
    </member>
    <member name="F:XmlPrime.AnyUri.Empty">
      <summary>
              Represents the empty <see cref="T:XmlPrime.AnyUri"/> value.  This field is read-only.
            </summary>
    </member>
    <member name="M:XmlPrime.AnyUri.TryCreate(System.String,XmlPrime.AnyUri@)">
      <overloads>
              Creates a new <see cref="T:XmlPrime.AnyUri"/> from its lexical value.  A return value indicates whether the conversion 
              succeeded or failed.  
            </overloads>
      <summary>
              Creates a new <see cref="T:XmlPrime.AnyUri"/> from its lexical value.  A return value indicates whether the conversion
              succeeded or failed.
            </summary>
      <param name="uriString">The lexical representation of the URI.</param>
      <param name="result">
              When this method returns, contains a <see cref="T:XmlPrime.AnyUri"/> constructed from <paramref name="uriString"/>, 
              or <see langword="null"/> if creation failed.
            </param>
      <returns>
        <see langword="true"/> if the <see cref="T:XmlPrime.AnyUri"/> was successfully created; otherwise 
              <see langword="false"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString"/> is <see langword="null"/></exception>
      <remarks>
        <para>
                If <paramref name="uriString"/> is not a valid URI, then the string is percent encoded and another attempt
                is made to parse it.
              </para>
      </remarks>
    </member>
    <member name="M:XmlPrime.AnyUri.TryCreate(XmlPrime.AnyUri,System.String,XmlPrime.AnyUri@)">
      <summary>
              Creates a new <see cref="T:XmlPrime.AnyUri"/> from its lexical value and resolves it against a base URI.  A return
              value indicates whether the conversion succeeded or failed.
            </summary>
      <param name="baseUri">The base URI.</param>
      <param name="relative">The lexical representation of the relative URI.</param>
      <param name="result">
              When this method returns, contains a <see cref="T:XmlPrime.AnyUri"/> constructed from <paramref name="baseUri"/> and 
              <paramref name="relative"/>.
            </param>
      <returns>
        <see langword="true"/> if the <see cref="T:XmlPrime.AnyUri"/> was successfully created; otherwise
              <see langword="false"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseUri"/> or <paramref name="relative"/> is <see langword="null"/>.
            </exception>
      <remarks>
        <para>
                If <paramref name="relative"/> is not a valid URI, then the string is percent encoded and another attempt
                is made to parse it.
              </para>
      </remarks>
    </member>
    <member name="M:XmlPrime.AnyUri.#ctor(System.String)">
      <overloads>Initializes a new instance of the <see cref="T:XmlPrime.AnyUri"/> class.</overloads>
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.AnyUri"/> class with the specified URI.
            </summary>
      <param name="uriString">The string representation of the URI.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="uriString"/> is not a valid URI.</exception>
      <remarks>
        <para>
                If <paramref name="uriString"/> is not a valid URI, then the string is percent encoded and another attempt
                is made to parse it.
              </para>
      </remarks>
    </member>
    <member name="M:XmlPrime.AnyUri.#ctor(System.Uri)">
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.AnyUri"/> class from a <see cref="T:System.Uri"/>.
            </summary>
      <param name="uri">The URI.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="uri"/> is not a valid URI.</exception>
      <remarks>
        <para>
                If <paramref name="uri"/> is not a valid URI, then the string is percent encoded and another attempt
                is made to parse it.
              </para>
      </remarks>
    </member>
    <member name="M:XmlPrime.AnyUri.#ctor(XmlPrime.AnyUri,System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.AnyUri"/> class from the specified base URI and relative URI 
              string.
            </summary>
      <param name="baseUri">The base URI.</param>
      <param name="relative">The string representation of the relative URI.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseUri"/> or <paramref name="relative"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="relative"/> is not a valid URI.</exception>
      <remarks>
              If <paramref name="relative"/> is not a valid URI, then the string is percent encoded and another attempt
              is made to parse it.
            </remarks>
    </member>
    <member name="M:XmlPrime.AnyUri.#ctor(System.String,System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.AnyUri"/> class from the specified base URI and relative URI 
              string.
            </summary>
      <param name="baseUri">The base URI.</param>
      <param name="relative">The string representation of the relative URI.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseUri"/> or <paramref name="relative"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="baseUri"/> or <paramref name="relative"/> is not a valid URI.</exception>
      <remarks>
              If <paramref name="relative"/> is not a valid URI, then the string is percent encoded and another attempt
              is made to parse it.
            </remarks>
    </member>
    <member name="M:XmlPrime.AnyUri.#ctor(XmlPrime.AnyUri,XmlPrime.AnyUri)">
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.AnyUri"/> class based on the combination of a specified 
              <see cref="T:XmlPrime.AnyUri"/> instance and a relative <see cref="T:XmlPrime.AnyUri"/> instance.
            </summary>
      <param name="baseUri">The base URI.</param>
      <param name="relative">The relative URI.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseUri"/> or <paramref name="relative"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.AnyUri.Equals(System.Object)">
      <overloads>
              Determines whether this instance is equal to a specified object.
            </overloads>
      <summary>
              Determines whether this instance is equal to a specified object.
            </summary>
      <param name="obj">An object to compare to this instance.</param>
      <returns>
        <see langword="true"/> if <paramref name="obj"/> is an instance of <see cref="T:XmlPrime.AnyUri"/>
              and equals the value of this instance; otherwise <see langword="false"/>.</returns>
      <remarks>
              Two <see cref="T:XmlPrime.AnyUri"/> values are considered equal if their unparsed string values are identical.  In 
              order to improve the comparison, you may consider comparing the <see cref="T:System.String"/> values returned by 
              the <see cref="M:XmlPrime.AnyUri.Normalize"/> method.
            </remarks>
    </member>
    <member name="M:XmlPrime.AnyUri.GetHashCode">
      <summary>
              Returns the hash code for this instance.
            </summary>
      <returns>
              A 32-bit signed integer that is the hash code for this instance.
            </returns>
    </member>
    <member name="M:XmlPrime.AnyUri.ToString">
      <summary>
              Returns the <see cref="T:System.String"/> that represents the current <see cref="T:XmlPrime.AnyUri"/>.
            </summary>
      <returns>The unparsed lexical representation of the URI.</returns>
    </member>
    <member name="M:XmlPrime.AnyUri.GetComponents(System.UriComponents,System.UriFormat)">
      <summary>
            Gets the specified components of the current instance, using the specified escaping.
            </summary>
      <param name="components">A bitwise combination of the <see cref="T:System.UriComponents"/> values that specifies which parts of the current
            instance to return.</param>
      <param name="format">One of the <see cref="T:System.UriFormat"/> values that controls how special characters are escaped.</param>
      <returns>
            A <see cref="T:System.String"/> value that contains the components.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="components"/> is not a combination of valid <see cref="T:System.UriComponents"/> values or
            <paramref name="format"/> is not one of the <see cref="T:System.UriFormat"/> values.  The
            <see cref="F:System.UriComponents.AbsoluteUri"/> value will not necessarily return an absolute URI, but will
            contain all the components that are present in the current instance.
            </exception>
      <remarks>
        <para>
            Unlike <see cref="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)"/>, relative URIs can be used with this method.  In this case only the
            components that are present in the URI are returned.  The <see cref="F:System.UriComponents.KeepDelimiter"/> and
            <see cref="F:System.UriComponents.SerializationInfoString"/> are ignored.
            </para>
        <para>The components returned are normalized as follows:</para>
        <list type="bullet">
          <item>
            <description>Case normalization of URI scheme, and percent-encoded values.</description>
          </item>
          <item>
            <description>Omission of default ports for some schemes (eg. port 21 for the <c>ftp:</c> scheme).</description>
          </item>
          <item>
            <description>Resolution of dot-segments (<c>..</c> and <c>.</c> path segments).</description>
          </item>
          <item>
            <description>Normalization of '/' and '\' characters in <c>file:</c> paths residing on <c>localhost</c>.</description>
          </item>
        </list>
        <para>
            Other than the set of characters that are escaped, this method behaves like the <see cref="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)"/> method with the
            </para>
      </remarks>
      <seealso cref="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)"/>
    </member>
    <member name="M:XmlPrime.AnyUri.MakeRelativeUri(XmlPrime.AnyUri)">
      <summary>
              Determines the difference between two <see cref="T:XmlPrime.AnyUri"/> instances.
            </summary>
      <param name="toUri">
              The <see cref="T:XmlPrime.AnyUri"/> to make relative to this <see cref="T:XmlPrime.AnyUri"/>.
            </param>
      <returns>
              An <see cref="T:XmlPrime.AnyUri"/> instance relative to this <see cref="T:XmlPrime.AnyUri"/> that resolves to 
              <paramref name="toUri"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="toUri"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.AnyUri.Normalize">
      <summary>
              Returns a normalized string representation of the current instance.
            </summary>
      <returns>A normalized string representation of the current instance.</returns>
      <remarks>
        <para>
                This is equivalent to calling the <see cref="M:XmlPrime.AnyUri.GetComponents(System.UriComponents,System.UriFormat)"/> method with the values <see cref="F:System.UriComponents.AbsoluteUri"/> and
                <see cref="F:System.UriFormat.UriEscaped"/>.
              </para>
        <para>
                This method can be used to compare URIs.  Normalizing two URIs before comparing them ensures that a larger range of URIs that
                correspond to the same resource are considered equal.
              </para>
        <para>The following techniques are used to normalize URIs:</para>
        <list type="bullet">
          <item>
            <description>Case normalization of URI scheme, and percent-encoded values.</description>
          </item>
          <item>
            <description>
                        Omission of default ports for some schemes (eg. port 21 for the <c>ftp:</c> scheme).  The <see cref="F:System.UriComponents.StrongPort"/>
                        value can be used to include the port if it is the default value.
                      </description>
          </item>
          <item>
            <description>Resolution of dot-segments (<c>..</c> and <c>.</c> path segments).</description>
          </item>
          <item>
            <description>Normalization of '/' and '\' characters in <c>file:</c> paths residing on <c>localhost</c>.</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="M:XmlPrime.AnyUri.Equals(XmlPrime.AnyUri)">
      <summary>
              Indicates whether this instance is equal to another <see cref="T:XmlPrime.AnyUri"/>.
            </summary>
      <param name="other">An <see cref="T:XmlPrime.AnyUri"/> to compare with this object.</param>
      <returns>
        <see langword="true"/> if <paramref name="other"/> equals the value of this instance; 
              otherwise, <see langword="false"/>.
            </returns>
      <remarks>
              Two <see cref="T:XmlPrime.AnyUri"/> values are considered equal if their unparsed string values are identical.  In 
              order to improve the comparison, you may consider comparing the <see cref="T:System.String"/> values returned by 
              the <see cref="M:XmlPrime.AnyUri.Normalize"/> method.
            </remarks>
    </member>
    <member name="M:XmlPrime.AnyUri.op_Equality(XmlPrime.AnyUri,XmlPrime.AnyUri)">
      <summary>
              Indicates whether two <see cref="T:XmlPrime.AnyUri"/> instances are equal.
            </summary>
      <param name="left">The first <see cref="T:XmlPrime.AnyUri"/> instance to compare.</param>
      <param name="right">The second <see cref="T:XmlPrime.AnyUri"/> instance to compare.</param>
      <returns>
        <see langword="true"/> if <paramref name="left"/> and <paramref name="right"/> are equal; otherwise
              <see langword="false"/>.
            </returns>
      <remarks>
              Two <see cref="T:XmlPrime.AnyUri"/> values are considered equal if their unparsed string values are identical.  In 
              order to improve the comparison, you may consider comparing the <see cref="T:System.String"/> values returned by 
              the <see cref="M:XmlPrime.AnyUri.Normalize"/> method.
            </remarks>
    </member>
    <member name="M:XmlPrime.AnyUri.op_Inequality(XmlPrime.AnyUri,XmlPrime.AnyUri)">
      <summary>
              Indicates whether two <see cref="T:XmlPrime.AnyUri"/> instances are equal.
            </summary>
      <param name="left">The first <see cref="T:XmlPrime.AnyUri"/> instance to compare.</param>
      <param name="right">The second <see cref="T:XmlPrime.AnyUri"/> instance to compare.</param>
      <returns>
        <see langword="true"/> if <paramref name="left"/> and <paramref name="right"/> are equal; otherwise
              <see langword="false"/>.
            </returns>
      <remarks>
              Two <see cref="T:XmlPrime.AnyUri"/> values are considered equal if their unparsed string values are identical.  In 
              order to improve the comparison, you may consider comparing the <see cref="T:System.String"/> values returned by 
              the <see cref="M:XmlPrime.AnyUri.Normalize"/> method.
            </remarks>
    </member>
    <member name="M:XmlPrime.AnyUri.op_Implicit(XmlPrime.AnyUri)~System.Uri">
      <summary>
              Performs an implicit conversion from <see cref="T:XmlPrime.AnyUri"/> to <see cref="T:System.Uri"/>.
            </summary>
      <param name="uri">The URI.</param>
      <returns>The result of the conversion.</returns>
    </member>
    <member name="P:XmlPrime.AnyUri.Authority">
      <summary>
              Gets the user info, Domain Name System (DNS) host name or IP address, and the port number for a server.
            </summary>
      <value>
              A <see cref="T:System.String"/> representing the authority component of the URI, or <see langword="null"/> if the 
              URI does not contain an authority component.
            </value>
      <remarks>
        <see cref="T:System.Uri"/> does not include the user info in the Authority property.
            </remarks>
    </member>
    <member name="P:XmlPrime.AnyUri.Fragment">
      <summary>
              Gets the fragment specified in this URI.
            </summary>
      <value>
              A <see cref="T:System.String"/> representing the fragment specified by this URI, or <see langword="null"/> if the 
              URI does not contain a fragment part.
            </value>
    </member>
    <member name="P:XmlPrime.AnyUri.Host">
      <summary>
              Gets the host component of this URI.
            </summary>
      <value>
              A <see cref="T:System.String"/> representing the host component of this URI, or <see langword="null"/> if the URI 
              does not specify a host.
            </value>
    </member>
    <member name="P:XmlPrime.AnyUri.HostNameType">
      <summary>
              Gets the type of the host name specified in the URI.
            </summary>
      <value>
              A member of the <see cref="T:System.UriHostNameType"/> enumeration, or <see cref="F:System.UriHostNameType.Unknown"/> if the
              URI does not specify a host.
            </value>
    </member>
    <member name="P:XmlPrime.AnyUri.IsAbsolute">
      <summary>
            Gets a value indicating whether this instance is an absolute URI.
            </summary>
      <value>
        <see langeword="true"/> if this instance is absolute; otherwise, <see langword="false"/>.
            </value>
    </member>
    <member name="P:XmlPrime.AnyUri.IsOpaque">
      <summary>
            Gets a value indicating whether this instance is an opaque.
            </summary>
      <value>
        <see langeword="true"/> if this instance is absolute; otherwise, <see langword="false"/>.
            </value>
      <remakrs>
        <para>An opaque URI is an absolute URI whose scheme-specific part does not begin with a slash character ('/').</para>
      </remakrs>
    </member>
    <member name="P:XmlPrime.AnyUri.Path">
      <summary>
              Gets the path specified in the URI.
            </summary>
      <value>
              A <see cref="T:System.String"/> containing the path specified in this URI, or <see langword="null"/> if the URI
              does not specify a path.
            </value>
      <remarks>
              The path may contain percent-encoded characters.  In order to retrieve the path without percent-encoded parameters
              then either use the <see cref="M:XmlPrime.AnyUri.GetComponents(System.UriComponents,System.UriFormat)"/> or <see cref="M:System.Uri.UnescapeDataString(System.String)"/> methods.
            </remarks>
    </member>
    <member name="P:XmlPrime.AnyUri.PathAndQuery">
      <summary>
              Gets the path and query information included in this URI.
            </summary>
      <value>
              A <see cref="T:System.String"/> containing the path and query information specified in this URI, or 
              <see cref="F:System.String.Empty"/> if no path and query information is included in this URI.
            </value>
      <remarks>
              The path may contain percent-encoded characters.  In order to retrieve the path without percent-encoded parameters
              then either use the <see cref="M:XmlPrime.AnyUri.GetComponents(System.UriComponents,System.UriFormat)"/> or <see cref="M:System.Uri.UnescapeDataString(System.String)"/> methods.
            </remarks>
    </member>
    <member name="P:XmlPrime.AnyUri.Port">
      <summary>
              Gets the port number from this URI.
            </summary>
      <value>
              An <see cref="T:System.Int32"/> representing the port number specified in this URI, or if the port is not specified in
              the URI, then the default port for the scheme, or <c>-1</c> if the scheme is not <c>ftp</c>, <c>http</c>, or 
              <c>https</c>.
            </value>
    </member>
    <member name="P:XmlPrime.AnyUri.Query">
      <summary>
              Gets the query information included in this URI.
            </summary>
      <value>
              A <see cref="T:System.String"/> containing the query information included in this URI, or <see langword="null"/> if 
              the URI does not include any query information.
            </value>
      <remarks>
              The path may contain percent-encoded characters.  In order to retrieve the path without percent-encoded parameters
              then either use the <see cref="M:XmlPrime.AnyUri.GetComponents(System.UriComponents,System.UriFormat)"/> or <see cref="M:System.Uri.UnescapeDataString(System.String)"/> methods.
            </remarks>
    </member>
    <member name="P:XmlPrime.AnyUri.Scheme">
      <summary>
              Gets the scheme specified in this URI.
            </summary>
      <value>
              A <see cref="T:System.String"/> containing the scheme name for this URI, or <see langword="null"/> if no scheme is
              specified.
            </value>
    </member>
    <member name="P:XmlPrime.AnyUri.UriKind">
      <summary>
              Gets a value indicating whether this URI is relative or absolute.
            </summary>
      <value>
        <see cref="F:System.UriKind.Absolute"/> if this is an absolute URI; otherwise 
              <see cref="F:System.UriKind.Relative"/>.
            </value>
    </member>
    <member name="P:XmlPrime.AnyUri.UriType">
      <summary>
              Gets a value indicating whether the specifications to which this URI conforms.
            </summary>
      <value>
             One of the <see cref="P:XmlPrime.AnyUri.UriType"/> values.
            </value>
    </member>
    <member name="P:XmlPrime.AnyUri.UserInfo">
      <summary>
              Gets the user name, password, or other user-specific information from this URI.
            </summary>
      <value>A <see cref="T:System.String"/> containing the user name, password, or other user-specific information for this 
              URI, or <see langword="null"/> if no user information was specified in the URI.</value>
    </member>
    <member name="P:XmlPrime.AnyUri.UserInfoItems">
      <summary>
              Gets the user name, password, or other user-specific information from this URI.
            </summary>
      <value>An array of <see cref="T:System.String"/> containing the user name, password, or other user-specific information for this 
              URI, or <see langword="null"/> if no user information was specified in the URI. Separates the user info on ':' and decodes the strings.</value>
    </member>
    <member name="T:XmlPrime.DateWithZone">
      <summary>
            Represents a Gregorian date.  The corresponding XML Schema type is <c>xs:date</c>.
            </summary>
      <para>
            Note that the order relation on <see cref="T:XmlPrime.DateWithZone"/> is a partial order.
            </para>
      <para>
            The year 1 B.C. is represented as -1, not 0.
            </para>
      <threadsafety static="true" instance="true"/>
      <seealso href="http://www.w3.org/TR/xmlschema-2/#date">[XML Schema Part 2: Datatypes Second Edition] 3.2.9 date</seealso>
    </member>
    <member name="F:XmlPrime.DateWithZone.MaxValue">
      <summary>
            Represents the maximum <see cref="T:XmlPrime.DateWithZone"/> value.  This field is read-only. 
            </summary>
      <value>
            The <see cref="T:XmlPrime.DateWithZone"/> value representing <c>25252734927766555-07-28-14:00</c></value>
    </member>
    <member name="F:XmlPrime.DateWithZone.MinValue">
      <summary>
            Represents the minimum <see cref="T:XmlPrime.DateWithZone"/> value.  This field is read-only. 
            </summary>
      <value>
            The <see cref="T:XmlPrime.DateWithZone"/> value representing <c>-25252734927766555-06-07+14:00</c></value>
    </member>
    <member name="M:XmlPrime.DateWithZone.Add(XmlPrime.DayTimeDuration,XmlPrime.DateWithZone)">
      <overloads>Adds a duration to a <see cref="T:XmlPrime.DateWithZone"/>.</overloads>
      <summary>
            Adds a <see cref="T:XmlPrime.DayTimeDuration"/> to a <see cref="T:XmlPrime.DateWithZone"/>.
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> to add.</param>
      <param name="date">The <see cref="T:XmlPrime.DateWithZone"/> to add to.</param>
      <returns>A <see cref="T:XmlPrime.DateWithZone"/> that is the sum of <paramref name="duration"/> and <paramref name="date"/>.</returns>
      <exception cref="T:System.OverflowException">The sum of <paramref name="duration"/> and <paramref name="date"/> is less
            than <see cref="F:XmlPrime.DateWithZone.MinValue"/> or greater than <see cref="F:XmlPrime.DateWithZone.MaxValue"/>. </exception>
    </member>
    <member name="M:XmlPrime.DateWithZone.Add(XmlPrime.YearMonthDuration,XmlPrime.DateWithZone)">
      <summary>
            Adds a <see cref="T:XmlPrime.YearMonthDuration"/> to a <see cref="T:XmlPrime.DateWithZone"/>.
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.YearMonthDuration"/> to add.</param>
      <param name="date">The <see cref="T:XmlPrime.DateWithZone"/> to add to.</param>
      <returns>A <see cref="T:XmlPrime.DateWithZone"/> that is the sum of <paramref name="duration"/> and <paramref name="date"/>.</returns>
      <exception cref="T:System.OverflowException">The sum of <paramref name="duration"/> and <paramref name="date"/> is less
            than <see cref="F:XmlPrime.DateWithZone.MinValue"/> or greater than <see cref="F:XmlPrime.DateWithZone.MaxValue"/>. </exception>
    </member>
    <member name="M:XmlPrime.DateWithZone.Add(XmlPrime.DateWithZone,XmlPrime.DayTimeDuration)">
      <summary>
            Adds a <see cref="T:XmlPrime.DayTimeDuration"/> to a <see cref="T:XmlPrime.DateWithZone"/>.
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> to add.</param>
      <param name="date">The <see cref="T:XmlPrime.DateWithZone"/> to add to.</param>
      <returns>A <see cref="T:XmlPrime.DateWithZone"/> that is the sum of <paramref name="duration"/> and <paramref name="date"/>.</returns>
      <exception cref="T:System.OverflowException">The sum of <paramref name="duration"/> and <paramref name="date"/> is less
            than <see cref="F:XmlPrime.DateWithZone.MinValue"/> or greater than <see cref="F:XmlPrime.DateWithZone.MaxValue"/>. </exception>
    </member>
    <member name="M:XmlPrime.DateWithZone.Add(XmlPrime.DateWithZone,XmlPrime.YearMonthDuration)">
      <summary>
            Adds a <see cref="T:XmlPrime.YearMonthDuration"/> to a <see cref="T:XmlPrime.DateWithZone"/>.
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.YearMonthDuration"/> to add.</param>
      <param name="date">The <see cref="T:XmlPrime.DateWithZone"/> to add to.</param>
      <returns>A <see cref="T:XmlPrime.DateWithZone"/> that is the sum of <paramref name="duration"/> and <paramref name="date"/>.</returns>
      <exception cref="T:System.OverflowException">The sum of <paramref name="duration"/> and <paramref name="date"/> is less
            than <see cref="F:XmlPrime.DateWithZone.MinValue"/> or greater than <see cref="F:XmlPrime.DateWithZone.MaxValue"/>. </exception>
    </member>
    <member name="M:XmlPrime.DateWithZone.Compare(XmlPrime.DateWithZone,XmlPrime.DateWithZone,XmlPrime.TimeZone)">
      <summary>
            Compares a <see cref="T:XmlPrime.DateWithZone"/> with another <see cref="T:XmlPrime.DateWithZone"/>.
            </summary>
      <param name="date1">The first <see cref="T:XmlPrime.DateWithZone"/> to compare.</param>
      <param name="date2">The second <see cref="T:XmlPrime.DateWithZone"/> to compare.</param>
      <param name="implicitTimeZone">The time zone to use if either dateTime <see cref="T:XmlPrime.DateWithZone"/> not have a time zone.</param>
      <returns>
        <para>A signed number that indicates the relative order of <paramref name="date1"/> and <paramref name="date2"/>.
            The return value has the following meanings.</para>
        <list type="bullet">
          <item>
            <description>Less than zero indicates that <paramref name="date1"/> is less than <paramref name="date2"/>.</description>
          </item>
          <item>
            <description>Zero indicates that <paramref name="date1"/> is equal to <paramref name="date2"/>.</description>
          </item>
          <item>
            <description>Greater than zero indicates that <paramref name="date1"/> is greater than <paramref name="date2"/>.</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:XmlPrime.DateWithZone.DaysInMonth(System.Int64,System.Int32)">
      <summary>
            Returns the number of days in the specified month of a specified year.
            </summary>
      <param name="year">The year.</param>
      <param name="month">The month.</param>
      <returns>The number of days in the given month.</returns>
    </member>
    <member name="M:XmlPrime.DateWithZone.Equals(XmlPrime.DateWithZone,XmlPrime.DateWithZone,XmlPrime.TimeZone)">
      <overloads>Determines whether two <see cref="T:XmlPrime.DateWithZone"/> instances have the same value.</overloads>
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.DateWithZone"/> is equal to another specified <see cref="T:XmlPrime.DateWithZone"/>
            given the supplied implicit time zone.
            </summary>
      <param name="date1">The first <see cref="T:XmlPrime.DateWithZone"/> to compare.</param>
      <param name="date2">The second <see cref="T:XmlPrime.DateWithZone"/> to compare.</param>
      <param name="implicitTimeZone">The <see cref="P:XmlPrime.DateWithZone.TimeZone"/> that is used in the case of a <see cref="T:XmlPrime.DateWithZone"/> with no time zone.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.DateWithZone"/> values are equal; otherwise <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.DateWithZone.IsLeapYear(System.Int64)">
      <summary>
            Determines whether the specified year is a leap year.
            </summary>
      <param name="year">The year to test.</param>
      <returns>
        <see langword="true"/> if <paramref name="year"/> is a leap year, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="M:XmlPrime.DateWithZone.Parse(System.String)">
      <summary>
            Converts a lexical representation of an <c>xs:date</c> to its <see cref="T:XmlPrime.DateWithZone"/> equivalent. 
            </summary>
      <param name="value">The lexical representation of an <c>xs:date</c> to convert.</param>
      <returns>
            The <see cref="T:XmlPrime.DateWithZone"/> equivalent to the <c>xs:date</c> represented by <paramref name="value"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value"/> is not a valid lexical value for an <c>xs:date</c>.</exception>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateWithZone.Subtract(XmlPrime.DateWithZone,XmlPrime.DateWithZone,XmlPrime.TimeZone)">
      <overloads>Subtracts a duration from a <see cref="T:XmlPrime.DateWithZone"/>.</overloads>
      <summary>
            Subtracts a <see cref="T:XmlPrime.DateTimeWithZone"/> value from a <see cref="T:XmlPrime.DateTimeWithZone"/> value in the given
            time zone. 
            </summary>
      <param name="date1">The <see cref="T:XmlPrime.DateWithZone"/> to subtract from.</param>
      <param name="date2">The <see cref="T:XmlPrime.DateWithZone"/> to subtract.</param>
      <param name="implicitTimeZone">The time zone to use if either date does not have a time zone.</param>
      <returns>
            The <see cref="T:XmlPrime.DayTimeDuration"/> that is the result of subtracting <paramref name="date2"/> from
            <paramref name="date1"/>.
            </returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateWithZone.Subtract(XmlPrime.DateWithZone,XmlPrime.DayTimeDuration)">
      <summary>
            Subtracts a <see cref="T:XmlPrime.DayTimeDuration"/> from a <see cref="T:XmlPrime.DateWithZone"/>.
            </summary>
      <param name="date">The <see cref="T:XmlPrime.DateWithZone"/> to subtract from.</param>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> to subtract.</param>
      <returns>
            The <see cref="T:XmlPrime.DateWithZone"/> that is the result of subtracting <paramref name="duration"/> from 
            <paramref name="date"/>.
            </returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateWithZone.Subtract(XmlPrime.DateWithZone,XmlPrime.YearMonthDuration)">
      <summary>
            Subtracts a <see cref="T:XmlPrime.YearMonthDuration"/> from a <see cref="T:XmlPrime.DateWithZone"/></summary>
      <param name="date">The <see cref="T:XmlPrime.DateWithZone"/> to subtract from.</param>
      <param name="duration">The <see cref="T:XmlPrime.YearMonthDuration"/> to subtract.</param>
      <returns>
            The <see cref="T:XmlPrime.DateWithZone"/> that is the result of subtracting <paramref name="duration"/> from 
            <paramref name="date"/>.
            </returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateWithZone.Subtract(XmlPrime.DateWithZone,XmlPrime.DateWithZone)">
      <summary>
            Subtracts a <see cref="T:XmlPrime.DateWithZone"/> from another <see cref="T:XmlPrime.DateWithZone"/>.
            </summary>
      <param name="date1">The <see cref="T:XmlPrime.DateWithZone"/> to subtract from.</param>
      <param name="date2">The <see cref="T:XmlPrime.DateWithZone"/> to subtract.</param>
      <returns>The duration from <paramref name="date2"/> to <paramref name="date1"/>.</returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
      <exception cref="T:System.ArgumentException">
            Exactly one of <paramref name="date1"/> and <paramref name="date2"/> has a time zone.
            </exception>
    </member>
    <member name="M:XmlPrime.DateWithZone.TryParse(System.String,XmlPrime.DateWithZone@)">
      <summary>
            Converts a lexical representation of an <c>xs:date</c> to its <see cref="T:XmlPrime.DateWithZone"/> equivalent. 
            A return value indicates whether the conversion succeeded or failed.		
            </summary>
      <param name="value">The lexical representation of an <c>xs:date</c> to convert.</param>
      <param name="result">When this method returns, contains the <see cref="T:XmlPrime.DateWithZone"/> value equivalent to
            the <c>xs:date</c> represented by <paramref name="value"/> if the conversion succeeded, or the epoch 
            (<c>0001-01-01Z</c>) if the conversion failed.
            </param>
      <returns>
        <see langword="value"/> if the conversion succeeded; otherwise <see langword="false"/>.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.DateWithZone.#ctor(System.Int64,System.Int32,System.Int32,System.Nullable{XmlPrime.TimeZone})">
      <overloads>Initializes a new instance of the <see cref="T:XmlPrime.DateWithZone"/> structure.</overloads>
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.DateWithZone"/> structure
            with the specified year, month, day and time zone components.
            </summary>
      <param name="year">The year component.</param>
      <param name="month">The month component. </param>
      <param name="day">The day component.</param>
      <param name="timeZone">The time zone (can be <see langword="null"/>).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year"/> is <c>0</c>,
            <paramref name="month"/> is not between 1 and 12 or
            <paramref name="day"/> does not correspond to a valid day in the specified month.
            </exception>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateWithZone.#ctor(System.Int64,System.Nullable{XmlPrime.TimeZone})">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.DateWithZone"/> structure which is a 
            specified number of days past the epoch (<c>0001-01-01T00:00</c>) in the specified
            time zone.
            </summary>
      <param name="daysPastEpoch">The number of days past the epoch.</param>
      <param name="timeZone">The time zone (can be <see langword="null"/>).</param>
    </member>
    <member name="M:XmlPrime.DateWithZone.Equals(System.Object)">
      <summary>
            Determines whether this instance is equal to a specified object.
            </summary>
      <param name="obj">An object to compare to this instance.</param>
      <returns>
        <see langword="true"/> if <paramref name="obj"/> is an instance of <see cref="T:XmlPrime.DateWithZone"/>
            and equals the value of this instance; otherwise <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.DateWithZone.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:XmlPrime.DateWithZone.ToString">
      <overloads>Converts this <see cref="T:XmlPrime.DateWithZone"/> to a string.</overloads>
      <summary>
            Returns the canonical lexical representation of this <see cref="T:XmlPrime.DateWithZone"/>.
            </summary>
      <returns>The canonical lexical representation of this <see cref="T:XmlPrime.DateWithZone"/>.</returns>
    </member>
    <member name="M:XmlPrime.DateWithZone.AdjustToTimeZone(System.Nullable{XmlPrime.TimeZone})">
      <summary>
            Adjusts a <see cref="T:XmlPrime.DateWithZone"/> structure to a specific time zone, or to no time zone.
            </summary>
      <param name="timeZone">
            The time zone that this instance should be adjusted to, or <see langword="null"/> if this instance is to be
            adjusted to no time zone.
            </param>
      <returns>
            The same point in time in the provided time zone, or with no time zone if <paramref name="timeZone"/> is
            <see langword="null"/>.
            </returns>
      <remarks>
            This function is analogous to the <c>fn:adjust-date-to-timezone</c> function.
            </remarks>
      <seealso href="http://www.w3.org/TR/xquery-operators/#func-adjust-date-to-timezone">
            [XQuery 1.0 and XPath 2.0 Functions and Operators] 10.7.2 fn:adjust-date-to-timezone
            </seealso>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateWithZone.ToString(System.String,System.Globalization.CultureInfo,System.TimeZoneInfo)">
      <summary>
            Converts the value of the current <see cref="T:XmlPrime.DateWithZone"/> object to its equivalent string representation
            using the specified format and culture-specific format information.
            </summary>
      <param name="format">A <see cref="T:System.String"/> containing the picture string which describes the format.</param>
      <param name="cultureInfo">A <see cref="T:System.Globalization.CultureInfo"/> object that supplies culture-specific formatting information.</param>
      <param name="timeZoneInfo">The time zone information.</param>
      <returns>
            A <see cref="T:System.String"/> representation of this <see cref="T:XmlPrime.DateWithZone"/>.
            </returns>
      <exception cref="T:System.ArgumentException">The syntax of the picture string in <paramref name="format"/> is invalid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format"/> or <paramref name="cultureInfo"/> is <see langword="null"/></exception>
      <exception cref="T:System.InvalidOperationException">A component specified within <paramref name="format"/> is not available (e.g. time components).</exception>
      <remarks>
            The <paramref name="format"/> must be a valid argument to the XSLT 2.0 <c>fn:format-date</c> function.
            </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#date-picture-string">[XSL Transformations (XSLT) Version 2.0] 16.5.1 The Picture String</seealso>
    </member>
    <member name="M:XmlPrime.DateWithZone.Equals(XmlPrime.DateWithZone)">
      <summary>
            Indicates whether this instance is equal to another <see cref="T:XmlPrime.DateWithZone"/>.
            </summary>
      <param name="other">A <see cref="T:XmlPrime.DateWithZone"/> to compare with this value.</param>
      <returns>
        <see langword="true"/> if <paramref name="other"/> equals the value of this instance; otherwise, <see langword="false"/>.
            </returns>
      <remarks>
        <para>Consider using <see cref="M:XmlPrime.DateWithZone.Equals(XmlPrime.DateWithZone,XmlPrime.DateWithZone,XmlPrime.TimeZone)"/> to compare <see cref="T:XmlPrime.DateWithZone"/> values with differing
            <see cref="P:XmlPrime.DateWithZone.TimeZone"/> properties.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.DateWithZone.op_Addition(XmlPrime.DateWithZone,XmlPrime.DayTimeDuration)">
      <overloads>Adds a duration to a <see cref="T:XmlPrime.DateWithZone"/>.</overloads>
      <summary>
            Adds a <see cref="T:XmlPrime.DayTimeDuration"/> to a <see cref="T:XmlPrime.DateWithZone"/></summary>
      <param name="date">The <see cref="T:XmlPrime.DateWithZone"/> to add to.</param>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> to add.</param>
      <returns>The result of adding <paramref name="duration"/> to <paramref name="date"/>.</returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateWithZone.op_Addition(XmlPrime.DayTimeDuration,XmlPrime.DateWithZone)">
      <summary>
            Adds a <see cref="T:XmlPrime.DayTimeDuration"/> to a <see cref="T:XmlPrime.DateWithZone"/></summary>
      <param name="date">The <see cref="T:XmlPrime.DateWithZone"/> to add to.</param>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> to add.</param>
      <returns>The result of adding <paramref name="duration"/> to <paramref name="date"/>.</returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateWithZone.op_Subtraction(XmlPrime.DateWithZone,XmlPrime.DayTimeDuration)">
      <summary>
            Subtracts a <see cref="T:XmlPrime.DayTimeDuration"/> from a <see cref="T:XmlPrime.DateWithZone"/>.
            </summary>
      <param name="date">The <see cref="T:XmlPrime.DateWithZone"/> to subtract from.</param>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> to subtract</param>
      <returns>The result of subtracting <paramref name="duration"/> from <paramref name="date"/>.</returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateWithZone.op_Addition(XmlPrime.DateWithZone,XmlPrime.YearMonthDuration)">
      <summary>
            Adds a <see cref="T:XmlPrime.YearMonthDuration"/> from a <see cref="T:XmlPrime.DateWithZone"/></summary>
      <param name="date">The <see cref="T:XmlPrime.DateWithZone"/> to add to.</param>
      <param name="duration">The <see cref="T:XmlPrime.YearMonthDuration"/> to add.</param>
      <returns>The result of adding <paramref name="duration"/> to <paramref name="date"/>.</returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateWithZone.op_Addition(XmlPrime.YearMonthDuration,XmlPrime.DateWithZone)">
      <summary>
            Adds a <see cref="T:XmlPrime.YearMonthDuration"/> from a <see cref="T:XmlPrime.DateWithZone"/></summary>
      <param name="date">The <see cref="T:XmlPrime.DateWithZone"/> to add to.</param>
      <param name="duration">The <see cref="T:XmlPrime.YearMonthDuration"/> to add.</param>
      <returns>The result of adding <paramref name="duration"/> to <paramref name="date"/>.</returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateWithZone.op_Subtraction(XmlPrime.DateWithZone,XmlPrime.YearMonthDuration)">
      <overloads>
            Subtracts a <see cref="T:XmlPrime.DateWithZone"/> or duration value from a <see cref="T:XmlPrime.DateWithZone"/>.
            </overloads>
      <summary>
            Subtracts a <see cref="T:XmlPrime.YearMonthDuration"/> from a <see cref="T:XmlPrime.DateWithZone"/></summary>
      <param name="date">The <see cref="T:XmlPrime.DateWithZone"/> to subtract from.</param>
      <param name="duration">The <see cref="T:XmlPrime.YearMonthDuration"/> to subtract.</param>
      <returns>The <see cref="T:XmlPrime.DayTimeDuration"/> which is the result of subtracting <paramref name="duration"/> from <paramref name="date"/>.</returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateWithZone.op_Subtraction(XmlPrime.DateWithZone,XmlPrime.DateWithZone)">
      <summary>
            Subtracts a <see cref="T:XmlPrime.DateWithZone"/> from a <see cref="T:XmlPrime.DateWithZone"/></summary>
      <param name="date1">The <see cref="T:XmlPrime.DateWithZone"/> to subtract from.</param>
      <param name="date2">The <see cref="T:XmlPrime.DateWithZone"/> to subtract.</param>
      <returns>The duration from <paramref name="date2"/> to <paramref name="date1"/>.</returns>
      <exception cref="T:System.ArgumentException">
            Exactly one of <paramref name="date1"/> and <paramref name="date2"/> has a time zone.
            </exception>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateWithZone.op_Equality(XmlPrime.DateWithZone,XmlPrime.DateWithZone)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.DateWithZone"/> is equal to another specified <see cref="T:XmlPrime.DateWithZone"/>.
            </summary>
      <param name="date1">The first <see cref="T:XmlPrime.DateWithZone"/> to compare.</param>
      <param name="date2">The second <see cref="T:XmlPrime.DateWithZone"/> to compare.</param>
      <returns>
        <see langword="true"/> if the two dates are equal, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="M:XmlPrime.DateWithZone.op_Inequality(XmlPrime.DateWithZone,XmlPrime.DateWithZone)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.DateWithZone"/> is not equal to another specified <see cref="T:XmlPrime.DateWithZone"/>.
            </summary>
      <param name="date1">The first <see cref="T:XmlPrime.DateWithZone"/> to compare.</param>
      <param name="date2">The second <see cref="T:XmlPrime.DateWithZone"/> to compare.</param>
      <returns>
        <see langword="true"/> if the two dates are not equal, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="P:XmlPrime.DateWithZone.Today">
      <summary>
            Gets a <see cref="T:XmlPrime.DateWithZone"/> object that is set to the current date on this computer expressed in the
            current time zone of this computer.
            </summary>
      <value>
            A <see cref="T:XmlPrime.DateWithZone"/> object that is set to the current date on this computer expressed in the
            current time zone of this computer.
            </value>
    </member>
    <member name="P:XmlPrime.DateWithZone.UtcToday">
      <summary>
            Gets a <see cref="T:XmlPrime.DateWithZone"/> object that is set to the current date on this computer expressed in
            Coordinated Universal Time (UTC).
            </summary>
      <value>
            A <see cref="T:XmlPrime.DateWithZone"/> object that is set to the current date on this computer expressed in
            Coordinated Universal Time (UTC).
            </value>
    </member>
    <member name="P:XmlPrime.DateWithZone.Day">
      <summary>
            Gets the day component of this <see cref="T:XmlPrime.DateWithZone"/>.
            </summary>
      <value>An <see cref="T:System.Int32"/> representing the day component of this <see cref="T:XmlPrime.DateWithZone"/>.</value>
    </member>
    <member name="P:XmlPrime.DateWithZone.DayOfWeek">
      <summary>
            Gets the day of the week.
            </summary>
      <value>
            An enumerated constant that indicates the day of the week of this DateTime value. 
            </value>
    </member>
    <member name="P:XmlPrime.DateWithZone.DayOfYear">
      <summary>
            Gets the day of the year.
            </summary>
      <value>
            The day of the year, expressed as a value between 1 and 366.
            </value>
    </member>
    <member name="P:XmlPrime.DateWithZone.DaysPastEpoch">
      <summary>
            Returns the number of complete days past the epoch (<c>0001-01-01T00:00:00</c>).
            </summary>
      <value>The number of complete days past the epoch (<c>0001-01-01T00:00:00</c>).</value>
    </member>
    <member name="P:XmlPrime.DateWithZone.GDay">
      <summary>
            Gets the day component of this <see cref="T:XmlPrime.DateWithZone"/> represented as a <see cref="T:XmlPrime.GDay"/>.
            </summary>
      <value>The day component as a <see cref="T:XmlPrime.GDay"/>.</value>
    </member>
    <member name="P:XmlPrime.DateWithZone.GMonth">
      <summary>
            Gets the month component of this <see cref="T:XmlPrime.DateWithZone"/> represented as a <see cref="T:XmlPrime.GMonth"/>.
            </summary>
      <value>The month component as a <see cref="T:XmlPrime.GMonth"/>.</value>
    </member>
    <member name="P:XmlPrime.DateWithZone.GMonthDay">
      <summary>
            Gets the month and day components of this <see cref="T:XmlPrime.DateWithZone"/> represented as a <see cref="T:XmlPrime.GMonthDay"/>.
            </summary>
      <value>The month and day components as a <see cref="T:XmlPrime.GMonthDay"/>.</value>
    </member>
    <member name="P:XmlPrime.DateWithZone.GYear">
      <summary>
            Gets the year component of this <see cref="T:XmlPrime.DateWithZone"/> represented as a <see cref="T:XmlPrime.GYear"/>.
            </summary>
      <value>The year component as a <see cref="T:XmlPrime.GYear"/>.</value>
    </member>
    <member name="P:XmlPrime.DateWithZone.GYearMonth">
      <summary>
            Gets the year and month components of this <see cref="T:XmlPrime.DateWithZone"/> as a <see cref="T:XmlPrime.GYearMonth"/>.
            </summary>
      <returns>The year and month components as a <see cref="T:XmlPrime.GYearMonth"/>.</returns>
    </member>
    <member name="P:XmlPrime.DateWithZone.Month">
      <summary>
            Returns the month component of this <see cref="T:XmlPrime.DateWithZone"/>.
            </summary>
      <value>An <see cref="T:System.Int32"/> representing the month component of this <see cref="T:XmlPrime.DateWithZone"/>.</value>
    </member>
    <member name="P:XmlPrime.DateWithZone.TimeZone">
      <summary>
            Gets the optional time zone component of this <see cref="T:XmlPrime.DateWithZone"/>.
            </summary>
      <value>The optional time zone component of this <see cref="T:XmlPrime.DateWithZone"/>.</value>
    </member>
    <member name="P:XmlPrime.DateWithZone.WeekInMonth">
      <summary>
            Gets the week in the month component of this <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <value>A <see cref="T:System.Int64"/> representing the year component of this <see cref="T:XmlPrime.DateTimeWithZone"/>.</value>
      <remarks>
            ISO 8601 does not define a numbering for weeks within a month. When the w component is used, the convention 
            to be adopted is that each Monday-to-Sunday week is considered to fall within a particular month if its 
            Thursday occurs in that month; the weeks that fall in a particular month under this definition are numbered 
            starting from 1. Thus, for example, 29 January 2013 falls in week 5 because the Thursday of the week 
            (31 January 2013) is the fifth Thursday in January, and 1 February 2013 is also in week 5 for the same reason.
            </remarks>
    </member>
    <member name="P:XmlPrime.DateWithZone.Year">
      <summary>
            Gets the year component of this <see cref="T:XmlPrime.DateWithZone"/>.
            </summary>
      <value>A <see cref="T:System.Int64"/> representing the year component of this <see cref="T:XmlPrime.DateWithZone"/>.</value>
    </member>
    <member name="T:XmlPrime.DateTimeWithZone">
      <summary>
            Represents a Gregorian date and time.  The corresponding XML Schema type is <c>xs:dateTime</c>.
            </summary>
      <remarks>
        <para>
            Unlike <see cref="T:System.DateTime"/>, a <see cref="T:XmlPrime.DateTimeWithZone"/> may include a time zone.
            </para>
        <para>
            Note that the order relation on <see cref="T:XmlPrime.DateTimeWithZone"/> is a partial order.
            </para>
        <para>
            The year 1 B.C. is represented as -1, not 0.
            </para>
      </remarks>
      <threadsafety static="true" instance="true"/>
      <seealso href="http://www.w3.org/TR/xmlschema-2/#dateTime">[XML Schema Part 2: Datatypes Second Edition] 3.2.7 dateTime</seealso>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.Add(XmlPrime.DateTimeWithZone,XmlPrime.DayTimeDuration)">
      <overloads>Adds a duration to a <see cref="T:XmlPrime.DateTimeWithZone"/>.</overloads>
      <summary>
            Adds a <see cref="T:XmlPrime.DayTimeDuration"/> to a <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <param name="dateTime">The <see cref="T:XmlPrime.DateTimeWithZone"/> to add to.</param>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> to add.</param>
      <returns>A <see cref="T:XmlPrime.DateTimeWithZone"/> that is the result of <paramref name="duration"/> added to <paramref name="dateTime"/>.</returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.Add(XmlPrime.DayTimeDuration,XmlPrime.DateTimeWithZone)">
      <summary>
            Adds a <see cref="T:XmlPrime.DayTimeDuration"/> to a <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <param name="dateTime">The <see cref="T:XmlPrime.DateTimeWithZone"/> to add to.</param>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> to add.</param>
      <returns>A <see cref="T:XmlPrime.DateTimeWithZone"/> that is the result of <paramref name="duration"/> added to <paramref name="dateTime"/>.</returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.Add(XmlPrime.DateTimeWithZone,XmlPrime.YearMonthDuration)">
      <summary>
            Adds a <see cref="T:XmlPrime.YearMonthDuration"/> to a <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <param name="dateTime">The <see cref="T:XmlPrime.DateTimeWithZone"/> to add to.</param>
      <param name="duration">The <see cref="T:XmlPrime.YearMonthDuration"/> to add.</param>
      <returns>A <see cref="T:XmlPrime.DateTimeWithZone"/> that is the result of <paramref name="duration"/> added to <paramref name="dateTime"/>.</returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.Add(XmlPrime.YearMonthDuration,XmlPrime.DateTimeWithZone)">
      <summary>
            Adds a <see cref="T:XmlPrime.YearMonthDuration"/> to a <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <param name="dateTime">The <see cref="T:XmlPrime.DateTimeWithZone"/> to add to.</param>
      <param name="duration">The <see cref="T:XmlPrime.YearMonthDuration"/> to add.</param>
      <returns>A <see cref="T:XmlPrime.DateTimeWithZone"/> that is the result of <paramref name="duration"/> added to <paramref name="dateTime"/>.</returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.Compare(XmlPrime.DateTimeWithZone,XmlPrime.DateTimeWithZone,XmlPrime.TimeZone)">
      <summary>
            Compares a <see cref="T:XmlPrime.DateTimeWithZone"/> with another <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <param name="dateTime1">The first <see cref="T:XmlPrime.DateTimeWithZone"/> to compare.</param>
      <param name="dateTime2">The second <see cref="T:XmlPrime.DateTimeWithZone"/> to compare.</param>
      <param name="implicitTimeZone">The time zone to use if either <see cref="T:XmlPrime.DateTimeWithZone"/> value does not have a time zone.</param>
      <returns>
        <para>A signed number that indicates the relative order of <paramref name="dateTime1"/> and <paramref name="dateTime2"/>.
            The return value has the following meanings:</para>
        <list type="bullet">
          <item>
            <description>Less than zero indicates that <paramref name="dateTime1"/> is less than <paramref name="dateTime2"/>.</description>
          </item>
          <item>
            <description>Zero indicates that <paramref name="dateTime1"/> is equal to <paramref name="dateTime2"/>.</description>
          </item>
          <item>
            <description>Greater than zero indicates that <paramref name="dateTime1"/> is greater than <paramref name="dateTime2"/>.</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.Equals(XmlPrime.DateTimeWithZone,XmlPrime.DateTimeWithZone,XmlPrime.TimeZone)">
      <overloads>Determines whether two <see cref="T:XmlPrime.DateTimeWithZone"/> instances have the same value.</overloads>
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.DateTimeWithZone"/> is equal to another specified <see cref="T:XmlPrime.DateTimeWithZone"/>
            given the supplied implicit time zone.
            </summary>
      <param name="dateTime1">The first <see cref="T:XmlPrime.DateTimeWithZone"/> to compare.</param>
      <param name="dateTime2">The second <see cref="T:XmlPrime.DateTimeWithZone"/> to compare.</param>
      <param name="implicitTimeZone">The <see cref="P:XmlPrime.DateTimeWithZone.TimeZone"/> that is used in the case of a <see cref="T:XmlPrime.DateTimeWithZone"/> with no time zone.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.DateTimeWithZone"/> values are equal; otherwise <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.Parse(System.String)">
      <summary>
            Converts a lexical representation of an <c>xs:dateTime</c> to its <see cref="T:XmlPrime.DateTimeWithZone"/> equivalent. 
            </summary>
      <param name="value">The lexical representation of an <c>xs:dateTime</c> to convert.</param>
      <returns>The <see cref="T:XmlPrime.DateTimeWithZone"/> equivalent to the <c>xs:dateTime</c> represented by <paramref name="value"/>.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value"/> is not a valid lexical value for an <c>xs:dateTime</c>.</exception>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
      <see href="http://www.w3.org/TR/xmlschema-2/#dateTime-lexical-representation">
            [XML Schema Part 2: Datatypes Second Edition] 3.2.7.1 Lexical representation.
            </see>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.Subtract(XmlPrime.DateTimeWithZone,XmlPrime.DateTimeWithZone,XmlPrime.TimeZone)">
      <overloads>
            Subtracts a <see cref="T:XmlPrime.DateTimeWithZone"/> or duration value from a <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </overloads>
      <summary>
            Subtracts a <see cref="T:XmlPrime.DateTimeWithZone"/> value from a <see cref="T:XmlPrime.DateTimeWithZone"/> value in the given time zone. 
            </summary>
      <param name="dateTime1">The <see cref="T:XmlPrime.DateTimeWithZone"/> to subtract from.</param>
      <param name="dateTime2">The <see cref="T:XmlPrime.DateTimeWithZone"/> to subtract.</param>
      <param name="implicitTimeZone">
            The time zone to use if either <see cref="T:XmlPrime.DateTimeWithZone"/> does not have a time zone.
            </param>
      <returns>The duration from <paramref name="dateTime2"/> to <paramref name="dateTime1"/>.</returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.Subtract(XmlPrime.DateTimeWithZone,XmlPrime.DayTimeDuration)">
      <summary>
            Subtracts a <see cref="T:XmlPrime.DayTimeDuration"/> from a <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <param name="dateTime">The <see cref="T:XmlPrime.DateTimeWithZone"/> to subtract from.</param>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> to subtract.</param>
      <returns>
            The <see cref="T:XmlPrime.DateTimeWithZone"/> that is the result of subtracting <paramref name="duration"/> from 
            <paramref name="dateTime"/>.
            </returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.Subtract(XmlPrime.DateTimeWithZone,XmlPrime.YearMonthDuration)">
      <summary>
            Subtracts a <see cref="T:XmlPrime.YearMonthDuration"/> from a <see cref="T:XmlPrime.DateTimeWithZone"/></summary>
      <param name="dateTime">The <see cref="T:XmlPrime.DateTimeWithZone"/> to subtract from.</param>
      <param name="duration">The <see cref="T:XmlPrime.YearMonthDuration"/> to subtract.</param>
      <returns>
            The <see cref="T:XmlPrime.DateTimeWithZone"/> that is the result of subtracting <paramref name="duration"/> from 
            <paramref name="dateTime"/>.
            </returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.Subtract(XmlPrime.DateTimeWithZone,XmlPrime.DateTimeWithZone)">
      <summary>
            Subtracts a <see cref="T:XmlPrime.DateTimeWithZone"/> from another <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <param name="dateTime1">The <see cref="T:XmlPrime.DateTimeWithZone"/> to subtract from.</param>
      <param name="dateTime2">The <see cref="T:XmlPrime.DateTimeWithZone"/> to subtract.</param>
      <returns>The duration from <paramref name="dateTime2"/> to <paramref name="dateTime1"/>.</returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
      <exception cref="T:System.ArgumentException">
            Exactly one of <paramref name="dateTime1"/> and <paramref name="dateTime2"/> has a time zone.
            </exception>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.TryParse(System.String,XmlPrime.DateTimeWithZone@)">
      <summary>
            Converts a lexical representation of an <c>xs:dateTime</c> to its <see cref="T:XmlPrime.DateTimeWithZone"/> 
            equivalent.  A return value indicates whether the conversion succeeded or failed.		
            </summary>
      <param name="value">The string representation of an <c>xs:dateTime</c> to convert.</param>
      <param name="result">
            When this method returns, contains the <see cref="T:XmlPrime.DateTimeWithZone"/> value equivalent to the 
            <c>xs:dateTime</c> represented by <paramref name="value"/> if the conversion succeeded, or the epoch 
            (<c>0001-01-01T00:00:00</c>) if the conversion failed.
            </param>
      <returns>
        <see langword="true"/> if the conversion succeeded; otherwise <see langword="false"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
      <see href="http://www.w3.org/TR/xmlschema-2/#dateTime-lexical-representation">
            [XML Schema Part 2: Datatypes Second Edition] 3.2.7.1 Lexical representation.
            </see>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Decimal,System.Nullable{XmlPrime.TimeZone})">
      <overloads>Initializes a new instance of the <see cref="T:XmlPrime.DateTimeWithZone"/> structure.</overloads>
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.DateTimeWithZone"/> structure
            with the specified year, month, day, hour, minute, second and time zone components.
            </summary>
      <param name="year">The year component.</param>
      <param name="month">The month component. </param>
      <param name="day">The day component.</param>
      <param name="hour">The hour component.</param>
      <param name="minute">The minute component.</param>
      <param name="second">The second component.</param>
      <param name="timeZone">The time zone component (can be <see langword="null"/>).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year"/>, <paramref name="month"/> and <paramref name="day"/> do not correspond to a valid
            date or <paramref name="hour"/>, <paramref name="minute"/> and <paramref name="day"/> do not correspond to a
            valid time.
            </exception>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.#ctor(System.Int64,System.Decimal,System.Nullable{XmlPrime.TimeZone})">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.DateTimeWithZone"/> structure from the specified number of days past
            the epoch (<c>0001-01-01</c>) and the specified number of seconds past midnight.
            </summary>
      <param name="daysPastEpoch">The number of days past the epoch (<c>0001-01-01</c>).</param>
      <param name="secondsPastMidnight">The number of seconds past midnight.</param>
      <param name="timeZone">The time zone (can be <see langword="null"/>).</param>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.#ctor(System.DateTime,System.Nullable{System.TimeSpan})">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.DateTimeWithZone"/> structure
            from the specified <see cref="T:System.DateTime"/> and <see cref="T:System.TimeSpan"/> time zone.
            </summary>
      <param name="dateTime">The date and time.</param>
      <param name="timeZone">The time zone (can be <see langword="null"/>).</param>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.#ctor(System.DateTime,System.TimeZone)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.DateTimeWithZone"/> structure
            with the specified <see cref="T:System.DateTime"/> and <see cref="T:System.TimeZone"/>.
            </summary>
      <param name="dateTime">The date and time.</param>
      <param name="timeZone">The time zone.</param>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.#ctor(XmlPrime.DateWithZone,XmlPrime.TimeWithZone)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.DateTimeWithZone"/> structure
            with the specified <see cref="T:XmlPrime.DateWithZone"/> and <see cref="T:XmlPrime.TimeWithZone"/>.
            </summary>
      <param name="date">The date component of the <see cref="T:XmlPrime.DateTimeWithZone"/>.</param>
      <param name="time">The time component of the <see cref="T:XmlPrime.DateTimeWithZone"/>.</param>
      <exception cref="T:System.ArgumentException">The time zones of <paramref name="date"/> and <paramref name="time"/>
            do not match.</exception>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.Equals(System.Object)">
      <summary>
            Determines whether this instance is equal to a specified object.
            </summary>
      <param name="obj">An object to compare to this instance.</param>
      <returns>
        <see langword="true"/> if <paramref name="obj"/> is an instance of <see cref="T:XmlPrime.DateTimeWithZone"/>
            and equals the value of this instance; otherwise <see langword="false"/>.</returns>
      <para>
            Two <see cref="T:XmlPrime.DateTimeWithZone"/> values are considered equal if they have they have equal
            values for their <see cref="P:XmlPrime.DateTimeWithZone.DaysPastEpoch"/>, <see cref="P:XmlPrime.DateTimeWithZone.SecondsPastMidnight"/> and <see cref="P:XmlPrime.DateTimeWithZone.TimeZone"/> properties.
            </para>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.ToString">
      <overloads>Converts this <see cref="T:XmlPrime.DateTimeWithZone"/> to a string.</overloads>
      <summary>
            Returns the canonical lexical representation of this <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <returns>The canonical lexical representation of this <see cref="T:XmlPrime.DateTimeWithZone"/>.</returns>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.AdjustToTimeZone(System.Nullable{XmlPrime.TimeZone})">
      <summary>
            Adjusts a <see cref="T:XmlPrime.DateTimeWithZone"/> structure to a specific time zone, or to no time zone.
            </summary>
      <param name="timeZone">
            The time zone that this instance should be adjusted to, or <see langword="null"/> if this instance is to be
            adjusted to no time zone.
            </param>
      <returns>
            The same point in time in the provided time zone, or with no time zone if <paramref name="timeZone"/> is
            <see langword="null"/>.
            </returns>
      <remarks>
            This function is analogous to the <c>fn:adjust-dateTime-to-timezone</c> function.
            </remarks>
      <seealso href="http://www.w3.org/TR/xquery-operators/#func-adjust-dateTime-to-timezone">
            [XQuery 1.0 and XPath 2.0 Functions and Operators] 10.7.1 fn:adjust-dateTime-to-timezone
            </seealso>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.ToDateTime">
      <summary>
            Returns the value as a <see cref="T:System.DateTime"/> instance.
            </summary>
      <returns>The value as a <see cref="T:System.DateTime"/> instance.</returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
      <remarks>
            The value returned is with the time zone stripped.  To obtain the value in a specific time zone, then first
            use the <see cref="M:XmlPrime.DateTimeWithZone.AdjustToTimeZone(System.Nullable{XmlPrime.TimeZone})"/> function.
            </remarks>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.ToString(System.String,System.Globalization.CultureInfo,System.TimeZoneInfo)">
      <summary>
            Converts the value of the current <see cref="T:XmlPrime.DateTimeWithZone"/> object to its equivalent string representation
            using the specified format and culture-specific format information.
            </summary>
      <param name="format">A <see cref="T:System.String"/> describing the format.</param>
      <param name="cultureInfo">A <see cref="T:System.Globalization.CultureInfo"/> object that supplies culture-specific formatting information.</param>
      <param name="timeZoneInfo">The time zone information.</param>
      <returns>
            A <see cref="T:System.String"/> representation of this <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </returns>
      <exception cref="T:System.ArgumentException">The syntax of the picture string in <paramref name="format"/> is invalid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format"/> or <paramref name="cultureInfo"/> is <see langword="null"/></exception>
      <remarks>
            The <paramref name="format"/> must be a valid argument to the XSLT 2.0 <c>fn:format-dateTime</c> function.
            </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#date-picture-string">[XSL Transformations (XSLT) Version 2.0] 16.5.1 The Picture String</seealso>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.Equals(XmlPrime.DateTimeWithZone)">
      <summary>
            Indicates whether this instance is equal to another <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <param name="other">A <see cref="T:XmlPrime.DateTimeWithZone"/> to compare with this value.</param>
      <returns>
        <see langword="true"/> if <paramref name="other"/> equals the value of this instance; otherwise, <see langword="false"/>.
            </returns>
      <remarks>
        <para>
            Two <see cref="T:XmlPrime.DateTimeWithZone"/> values are considered equal if they have they have equal
            values for their <see cref="P:XmlPrime.DateTimeWithZone.DaysPastEpoch"/>, <see cref="P:XmlPrime.DateTimeWithZone.SecondsPastMidnight"/> and <see cref="P:XmlPrime.DateTimeWithZone.TimeZone"/> properties.
            </para>
        <para>Consider using <see cref="M:XmlPrime.DateTimeWithZone.Equals(XmlPrime.DateTimeWithZone,XmlPrime.DateTimeWithZone,XmlPrime.TimeZone)"/> to compare <see cref="T:XmlPrime.DateTimeWithZone"/> values with differing
            <see cref="P:XmlPrime.DateTimeWithZone.TimeZone"/> properties.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.op_Addition(XmlPrime.DateTimeWithZone,XmlPrime.DayTimeDuration)">
      <overloads>Adds a duration to a <see cref="T:XmlPrime.DateTimeWithZone"/>.</overloads>
      <summary>
            Adds a <see cref="T:XmlPrime.DayTimeDuration"/> to a <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <param name="dateTime">The <see cref="T:XmlPrime.DateTimeWithZone"/> to add to.</param>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> to add.</param>
      <returns>A <see cref="T:XmlPrime.DateTimeWithZone"/> that is the sum of <paramref name="dateTime"/> and <paramref name="duration"/>.</returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.op_Addition(XmlPrime.DayTimeDuration,XmlPrime.DateTimeWithZone)">
      <summary>
            Adds a <see cref="T:XmlPrime.DayTimeDuration"/> to a <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> to add.</param>
      <param name="dateTime">The <see cref="T:XmlPrime.DateTimeWithZone"/> to add to.</param>
      <returns>A <see cref="T:XmlPrime.DateTimeWithZone"/> that is the sum of <paramref name="dateTime"/> and <paramref name="duration"/>.</returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.op_Subtraction(XmlPrime.DateTimeWithZone,XmlPrime.DayTimeDuration)">
      <overloads>
            Subtracts a <see cref="T:XmlPrime.DateTimeWithZone"/> or duration value from a <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </overloads>
      <summary>
            Subtracts a <see cref="T:XmlPrime.DayTimeDuration"/> from a <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <param name="dateTime">The <see cref="T:XmlPrime.DateTimeWithZone"/> to subtract from.</param>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> to subtract.</param>
      <returns>A <see cref="T:XmlPrime.DateTimeWithZone"/> that is the result of subtracting <paramref name="duration"/> from <paramref name="dateTime"/>.</returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.op_Addition(XmlPrime.DateTimeWithZone,XmlPrime.YearMonthDuration)">
      <summary>
            Adds a <see cref="T:XmlPrime.YearMonthDuration"/> to a <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <param name="dateTime">The <see cref="T:XmlPrime.DateTimeWithZone"/> to add to.</param>
      <param name="duration">The <see cref="T:XmlPrime.YearMonthDuration"/> to add.</param>
      <returns>A <see cref="T:XmlPrime.DateTimeWithZone"/> that is the sum of <paramref name="dateTime"/> and <paramref name="duration"/>.</returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.op_Addition(XmlPrime.YearMonthDuration,XmlPrime.DateTimeWithZone)">
      <summary>
            Adds a <see cref="T:XmlPrime.YearMonthDuration"/> to a <see cref="T:XmlPrime.DateTimeWithZone"/></summary>
      <param name="duration">The <see cref="T:XmlPrime.YearMonthDuration"/> to add.</param>
      <param name="dateTime">The <see cref="T:XmlPrime.DateTimeWithZone"/> to add to.</param>
      <returns>A <see cref="T:XmlPrime.DateTimeWithZone"/> that is the sum of <paramref name="duration"/> and <paramref name="dateTime"/>.</returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.op_Subtraction(XmlPrime.DateTimeWithZone,XmlPrime.YearMonthDuration)">
      <summary>
            Subtracts a <see cref="T:XmlPrime.YearMonthDuration"/> from a <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <param name="dateTime">The <see cref="T:XmlPrime.DateTimeWithZone"/> to subtract from.</param>
      <param name="duration">The <see cref="T:XmlPrime.YearMonthDuration"/> to subtract.</param>
      <returns>A <see cref="T:XmlPrime.DateTimeWithZone"/> that is the result of subtracting <paramref name="duration"/> from <paramref name="dateTime"/>.</returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.op_Subtraction(XmlPrime.DateTimeWithZone,XmlPrime.DateTimeWithZone)">
      <summary>
            Subtracts a <see cref="T:XmlPrime.DateTimeWithZone"/> from another <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <param name="dateTime1">The <see cref="T:XmlPrime.DateTimeWithZone"/> to subtract from.</param>
      <param name="dateTime2">The <see cref="T:XmlPrime.DateTimeWithZone"/> to subtract.</param>
      <returns>The duration from <paramref name="dateTime2"/> to <paramref name="dateTime1"/>.</returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
      <exception cref="T:System.ArgumentException">
            Exactly one of <paramref name="dateTime1"/> and <paramref name="dateTime2"/> has a time zone.
            </exception>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.op_Equality(XmlPrime.DateTimeWithZone,XmlPrime.DateTimeWithZone)">
      <summary>
            Returns a value indicating whether two instances of <see cref="T:XmlPrime.DateTimeWithZone"/> are equal.
            </summary>
      <param name="dateTime1">The first <see cref="T:XmlPrime.DateTimeWithZone"/> to compare.</param>
      <param name="dateTime2">The second <see cref="T:XmlPrime.DateTimeWithZone"/> to compare.</param>
      <returns>
        <see langword="true"/> if the <paramref name="dateTime1"/> and <paramref name="dateTime2"/> are equal; otherwise, <see langword="false"/>.</returns>
      <remarks>
        <para>
            Two <see cref="T:XmlPrime.DateTimeWithZone"/> values are considered equal if they have they have equal
            values for their <see cref="P:XmlPrime.DateTimeWithZone.DaysPastEpoch"/>, <see cref="P:XmlPrime.DateTimeWithZone.SecondsPastMidnight"/> and <see cref="P:XmlPrime.DateTimeWithZone.TimeZone"/> properties.
            </para>
        <para>Consider using <see cref="M:XmlPrime.DateTimeWithZone.Equals(XmlPrime.DateTimeWithZone,XmlPrime.DateTimeWithZone,XmlPrime.TimeZone)"/> to compare <see cref="T:XmlPrime.DateTimeWithZone"/> values with differing
            <see cref="P:XmlPrime.DateTimeWithZone.TimeZone"/> properties.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.DateTimeWithZone.op_Inequality(XmlPrime.DateTimeWithZone,XmlPrime.DateTimeWithZone)">
      <summary>
            Returns a value indicating whether two instances of <see cref="T:XmlPrime.DateTimeWithZone"/> are not equal.
            </summary>
      <param name="dateTime1">The first <see cref="T:XmlPrime.DateTimeWithZone"/> to compare.</param>
      <param name="dateTime2">The second <see cref="T:XmlPrime.DateTimeWithZone"/> to compare.</param>
      <returns>
        <see langword="true"/> if the <paramref name="dateTime1"/> and <paramref name="dateTime2"/> are not equal; otherwise, <see langword="false"/>.</returns>
      <remarks>
        <para>
            Two <see cref="T:XmlPrime.DateTimeWithZone"/> values are considered equal if they have they have equal
            values for their <see cref="P:XmlPrime.DateTimeWithZone.DaysPastEpoch"/>, <see cref="P:XmlPrime.DateTimeWithZone.SecondsPastMidnight"/> and <see cref="P:XmlPrime.DateTimeWithZone.TimeZone"/> properties.
            </para>
        <para>Consider using <see cref="M:XmlPrime.DateTimeWithZone.Equals(XmlPrime.DateTimeWithZone,XmlPrime.DateTimeWithZone,XmlPrime.TimeZone)"/> to compare <see cref="T:XmlPrime.DateTimeWithZone"/> values with differing
            <see cref="P:XmlPrime.DateTimeWithZone.TimeZone"/> properties.</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.DateTimeWithZone.Now">
      <summary>
            Gets a <see cref="T:XmlPrime.DateTimeWithZone"/> object that is set to the current date and time on this
            computer expressed in the current time zone of this computer.
            </summary>
      <value>
            A <see cref="T:XmlPrime.DateTimeWithZone"/> object that is set to the current date and time on this
            computer expressed in the current time zone of this computer.
            </value>
    </member>
    <member name="P:XmlPrime.DateTimeWithZone.UtcNow">
      <summary>
            Gets a <see cref="T:XmlPrime.DateTimeWithZone"/> object that is set to the current date and time on this
            computer expressed in Coordinated Universal Time (UTC).
            </summary>
      <value>
            A <see cref="T:XmlPrime.DateTimeWithZone"/> object that is set to the current date and time on this
            computer expressed in Coordinated Universal Time (UTC).
            </value>
    </member>
    <member name="P:XmlPrime.DateTimeWithZone.Date">
      <summary>
            Gets the date component of this <see cref="T:XmlPrime.DateTimeWithZone"/> represented as a <see cref="T:XmlPrime.DateWithZone"/>.
            </summary>
      <value>A <see cref="T:XmlPrime.DateWithZone"/> representing the date component of this <see cref="T:XmlPrime.DateTimeWithZone"/>.</value>
    </member>
    <member name="P:XmlPrime.DateTimeWithZone.Day">
      <summary>
            Gets the day component of this <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <value>An <see cref="T:System.Int32"/> representing the day component of this <see cref="T:XmlPrime.DateTimeWithZone"/>.</value>
    </member>
    <member name="P:XmlPrime.DateTimeWithZone.DayOfWeek">
      <summary>
            Gets the day of the week.
            </summary>
      <value>
            An enumerated constant that indicates the day of the week of this DateTime value. 
            </value>
    </member>
    <member name="P:XmlPrime.DateTimeWithZone.DayOfYear">
      <summary>
            Gets the day of the year.
            </summary>
      <value>
            The day of the year, expressed as a value between 1 and 366.
            </value>
    </member>
    <member name="P:XmlPrime.DateTimeWithZone.DaysPastEpoch">
      <summary>
            Gets the number of complete days past the epoch (<c>0001-01-01T00:00:00</c>).
            </summary>
      <value>The number of complete days past the epoch (<c>0001-01-01T00:00:00</c>).</value>
    </member>
    <member name="P:XmlPrime.DateTimeWithZone.GDay">
      <summary>
            Gets the day component of this <see cref="T:XmlPrime.DateTimeWithZone"/> represented as a <see cref="T:XmlPrime.GDay"/>.
            </summary>
      <value>The day component as a <see cref="T:XmlPrime.GDay"/>.</value>
    </member>
    <member name="P:XmlPrime.DateTimeWithZone.GMonth">
      <summary>
            Gets the month component of this <see cref="T:XmlPrime.DateTimeWithZone"/> represented as a <see cref="T:XmlPrime.GMonth"/>.
            </summary>
      <value>The month component as a <see cref="T:XmlPrime.GMonth"/>.</value>
    </member>
    <member name="P:XmlPrime.DateTimeWithZone.GMonthDay">
      <summary>
            Gets the month and day components of this <see cref="T:XmlPrime.DateTimeWithZone"/> represented as a <see cref="T:XmlPrime.GMonthDay"/>.
            </summary>
      <value>The month and day components as a <see cref="T:XmlPrime.GMonthDay"/>.</value>
    </member>
    <member name="P:XmlPrime.DateTimeWithZone.GYear">
      <summary>
            Gets the year component of this <see cref="T:XmlPrime.DateTimeWithZone"/> represented as a <see cref="T:XmlPrime.GYear"/>.
            </summary>
      <value>The year component as a <see cref="T:XmlPrime.GYear"/>.</value>
    </member>
    <member name="P:XmlPrime.DateTimeWithZone.GYearMonth">
      <summary>
            Gets the year and month components of this <see cref="T:XmlPrime.DateTimeWithZone"/> represented as a <see cref="T:XmlPrime.GYearMonth"/>.
            </summary>
      <value>The year and month components as a <see cref="T:XmlPrime.GYearMonth"/>.</value>
    </member>
    <member name="P:XmlPrime.DateTimeWithZone.Hour">
      <summary>
            Gets the hour component of this <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <value>An <see cref="T:System.Int32"/> representing the hour component of this <see cref="T:XmlPrime.DateTimeWithZone"/>.</value>
    </member>
    <member name="P:XmlPrime.DateTimeWithZone.Minute">
      <summary>
            Gets the minute component of this <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <value>An <see cref="T:System.Int32"/> representing the minute component of this <see cref="T:XmlPrime.DateTimeWithZone"/>.</value>
    </member>
    <member name="P:XmlPrime.DateTimeWithZone.Month">
      <summary>
            Gets the month component of this <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <value>An <see cref="T:System.Int32"/> representing the month component of this <see cref="T:XmlPrime.DateTimeWithZone"/>.</value>
    </member>
    <member name="P:XmlPrime.DateTimeWithZone.Second">
      <summary>
            Gets the second component of this <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <value>A <see cref="T:System.Decimal"/> representing the second component of this <see cref="T:XmlPrime.DateTimeWithZone"/>.</value>
    </member>
    <member name="P:XmlPrime.DateTimeWithZone.SecondsPastMidnight">
      <summary>
            Gets the number of whole and partial seconds from midnight on this day.
            </summary>
      <value>A <see cref="T:System.Decimal"/> value which is the number of whole and partial seconds from midnight on this day.</value>
    </member>
    <member name="P:XmlPrime.DateTimeWithZone.Time">
      <summary>
            Gets the time component of this <see cref="T:XmlPrime.DateTimeWithZone"/> represented as a <see cref="T:XmlPrime.TimeWithZone"/>.
            </summary>
      <value>A <see cref="T:XmlPrime.TimeWithZone"/> representing the time component of this <see cref="T:XmlPrime.DateTimeWithZone"/>.</value>
    </member>
    <member name="P:XmlPrime.DateTimeWithZone.TimeZone">
      <summary>
            Gets the optional time zone component of this <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <value>The optional time zone component of this <see cref="T:XmlPrime.DateTimeWithZone"/>.</value>
    </member>
    <member name="P:XmlPrime.DateTimeWithZone.WeekInMonth">
      <summary>
            Gets the week in the month component of this <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <value>A <see cref="T:System.Int64"/> representing the year component of this <see cref="T:XmlPrime.DateTimeWithZone"/>.</value>
      <remarks>
            ISO 8601 does not define a numbering for weeks within a month. When the w component is used, the convention 
            to be adopted is that each Monday-to-Sunday week is considered to fall within a particular month if its 
            Thursday occurs in that month; the weeks that fall in a particular month under this definition are numbered 
            starting from 1. Thus, for example, 29 January 2013 falls in week 5 because the Thursday of the week 
            (31 January 2013) is the fifth Thursday in January, and 1 February 2013 is also in week 5 for the same reason.
            </remarks>
    </member>
    <member name="P:XmlPrime.DateTimeWithZone.Year">
      <summary>
            Gets the year component of this <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </summary>
      <value>A <see cref="T:System.Int64"/> representing the year component of this <see cref="T:XmlPrime.DateTimeWithZone"/>.</value>
    </member>
    <member name="T:XmlPrime.DayTimeDuration">
      <summary>
            Represents a duration of time that is expressed by the Gregorian day, hour, minute and second components.
            The corresponding XML Schema type is <c>xs:dayTimeDuration</c>.
            </summary>
      <remarks>
        <para>A <see cref="T:XmlPrime.DayTimeDuration"/> is a duration of time that is expressed by the Gregorian days, hours,
            minutes and seconds components. 
            It can be used to represent a period of months, regardless of the number of days in a month.
            To say, for example, that a journey took 2 days and 14 hours.</para>
        <para>Unlike <see cref="T:XmlPrime.Duration"/> values, <see cref="T:XmlPrime.DayTimeDuration"/> values
            can be totally ordered.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xpath-functions/#dt-dayTimeDuration">[XQuery 1.0 and XPath 2.0 Functions and Operators] 10.3.2 xs:dayTimeDuration</seealso>
    </member>
    <member name="F:XmlPrime.DayTimeDuration.MaxValue">
      <summary>
            Represents the maximum <see cref="T:XmlPrime.DayTimeDuration"/> value.  This field is read-only. 
            </summary>
      <value>
            The <see cref="T:XmlPrime.DayTimeDuration"/> value representing <c>P9223372036854775807DT23H59M60.0S</c>.
            </value>
    </member>
    <member name="F:XmlPrime.DayTimeDuration.MinValue">
      <summary>
            Represents the minimum <see cref="T:XmlPrime.DayTimeDuration"/> value.  This field is read-only. 
            </summary>
      <value>
            The <see cref="T:XmlPrime.DayTimeDuration"/> value representing <c>-P9223372036854775808DT23H59M60.0S</c>.
            </value>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.Add(XmlPrime.DayTimeDuration,XmlPrime.DayTimeDuration)">
      <summary>
            Adds a specified <see cref="T:XmlPrime.DayTimeDuration"/> value to another <see cref="T:XmlPrime.DayTimeDuration"/> value.
            </summary>
      <param name="duration1">The first <see cref="T:XmlPrime.DayTimeDuration"/> to add.</param>
      <param name="duration2">The second <see cref="T:XmlPrime.DayTimeDuration"/> to add.</param>
      <returns>
            A <see cref="T:XmlPrime.DayTimeDuration"/> that is the sum of <paramref name="duration1"/> and 
            <paramref name="duration2"/>.</returns>
      <exception cref="T:System.OverflowException">
            The sum of <paramref name="duration1"/> and <paramref name="duration2"/> is less than 
            <see cref="F:XmlPrime.DayTimeDuration.MinValue"/> or greater than <see cref="F:XmlPrime.DayTimeDuration.MaxValue"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.Compare(XmlPrime.DayTimeDuration,XmlPrime.DayTimeDuration)">
      <summary>
            Compares two specified <see cref="T:XmlPrime.DayTimeDuration"/> values. 
            </summary>
      <param name="duration1">The first <see cref="T:XmlPrime.DayTimeDuration"/> to compare.</param>
      <param name="duration2">The second <see cref="T:XmlPrime.DayTimeDuration"/> to compare.</param>
      <returns>
        <para>
            A signed number that indicates the relative order of  <paramref name="duration1"/> and 
            <paramref name="duration2"/>. The return value has the following meanings.
            </para>
        <list type="bullet">
          <item>
            <description>Less than zero indicates that <paramref name="duration1"/> is less than <paramref name="duration2"/>.</description>
          </item>
          <item>
            <description>Zero indicates that <paramref name="duration1"/> is equal to <paramref name="duration2"/>.</description>
          </item>
          <item>
            <description>Greater than zero indicates that <paramref name="duration1"/> is greater than <paramref name="duration2"/>.</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.Divide(XmlPrime.DayTimeDuration,System.Double)">
      <overloads>
            Divides the specified <see cref="T:XmlPrime.DayTimeDuration"/> value with <see cref="T:XmlPrime.DayTimeDuration"/> or 
            <see cref="T:System.Double"/> value.
            </overloads>
      <summary>
            Divides the specified <see cref="T:XmlPrime.DayTimeDuration"/> value by a <see cref="T:System.Double"/> value.
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> to divide. </param>
      <param name="value">The <see cref="T:System.Double"/> to divide by. </param>
      <returns>The <see cref="T:XmlPrime.DayTimeDuration"/> result of dividing <paramref name="duration"/> by <paramref name="value"/>.</returns>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="value"/> is zero.</exception>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.DayTimeDuration.MinValue"/> or greater than <see cref="F:XmlPrime.DayTimeDuration.MaxValue"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.Divide(XmlPrime.DayTimeDuration,XmlPrime.DayTimeDuration)">
      <summary>
            Divides the specified <see cref="T:XmlPrime.DayTimeDuration"/> value by another <see cref="T:XmlPrime.DayTimeDuration"/>  value.
            </summary>
      <param name="duration1">The <see cref="T:XmlPrime.DayTimeDuration"/> to divide.</param>
      <param name="duration2">The <see cref="T:XmlPrime.DayTimeDuration"/> to divide by. </param>
      <returns>The <see cref="T:System.Decimal"/> result of dividing <paramref name="duration1"/> by <paramref name="duration2"/>.</returns>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="duration2"/> is zero (<c>PT0S</c>).</exception>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.DayTimeDuration.MinValue"/> or greater than <see cref="F:XmlPrime.DayTimeDuration.MaxValue"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.Multiply(XmlPrime.DayTimeDuration,System.Double)">
      <overloads>Multiplies a <see cref="T:XmlPrime.DayTimeDuration"/> value by a <see cref="T:System.Double"/> value.</overloads>
      <summary>
            Multiplies the specified <see cref="T:XmlPrime.DayTimeDuration"/> value by a <see cref="T:System.Double"/> value.
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> value to multiply.</param>
      <param name="value">The <see cref="T:System.Double"/> value to multiply by.</param>
      <returns>
            The <see cref="T:XmlPrime.DayTimeDuration"/> result of multiplying <paramref name="duration"/> by 
            <paramref name="value"/>.
            </returns>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.DayTimeDuration.MinValue"/> or greater than <see cref="F:XmlPrime.DayTimeDuration.MaxValue"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.Multiply(System.Double,XmlPrime.DayTimeDuration)">
      <summary>
            Multiplies the specified <see cref="T:XmlPrime.DayTimeDuration"/> value by a <see cref="T:System.Double"/> value.
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> value to multiply.</param>
      <param name="value">The <see cref="T:System.Double"/> value to multiply by.</param>
      <returns>
            The <see cref="T:XmlPrime.DayTimeDuration"/> result of multiplying <paramref name="duration"/> by 
            <paramref name="value"/>.
            </returns>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.DayTimeDuration.MinValue"/> or greater than <see cref="F:XmlPrime.DayTimeDuration.MaxValue"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.Negate(XmlPrime.DayTimeDuration)">
      <summary>
            Negates the value of the specified <see cref="T:XmlPrime.DayTimeDuration"/> operand. 
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> operand.</param>
      <returns>The additive inverse of <see cref="T:XmlPrime.DayTimeDuration"/>.</returns>
      <exception cref="T:System.OverflowException">The return value is less
            than <see cref="F:XmlPrime.DayTimeDuration.MinValue"/> or greater than <see cref="F:XmlPrime.DayTimeDuration.MaxValue"/>.</exception>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.Parse(System.String)">
      <summary>
            Converts a lexical representation of an <c>xs:dayTimeDuration</c> to its <see cref="T:XmlPrime.DayTimeDuration"/> 
            equivalent. 
            </summary>
      <param name="value">The lexical representation of an <c>xs:dayTimeDuration</c> to convert.</param>
      <returns>
            The <see cref="T:XmlPrime.DayTimeDuration"/> equivalent to the <c>xs:dayTimeDuration</c> represented by 
            <paramref name="value"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value"/> is not a valid lexical value of an <c>xs:dayTimeDuration</c>.
            </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value"/> represents a duration less than <see cref="F:XmlPrime.DayTimeDuration.MinValue"/> or greater than
            <see cref="F:XmlPrime.DayTimeDuration.MaxValue"/>. 
            </exception>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.Plus(XmlPrime.DayTimeDuration)">
      <summary>
            Returns the value of the <see cref="T:XmlPrime.DayTimeDuration"/> operand (the sign of the operand is unchanged). 
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> operand.</param>
      <returns>The value of the operand, <paramref name="duration"/>.</returns>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.Subtract(XmlPrime.DayTimeDuration,XmlPrime.DayTimeDuration)">
      <summary>
            Subtracts a <see cref="T:XmlPrime.DayTimeDuration"/> value from another <see cref="T:XmlPrime.DayTimeDuration"/> value. 
            </summary>
      <param name="duration1">The <see cref="T:XmlPrime.DayTimeDuration"/> to subtract from.</param>
      <param name="duration2">The <see cref="T:XmlPrime.DayTimeDuration"/> to subtract.</param>
      <returns>
            A <see cref="T:XmlPrime.DayTimeDuration"/> that is the result of subtracting <paramref name="duration2"/> from
            <paramref name="duration1"/>.
            </returns>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.DayTimeDuration.MinValue"/> or greater than <see cref="F:XmlPrime.DayTimeDuration.MaxValue"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.TryParse(System.String,XmlPrime.DayTimeDuration@)">
      <summary>
            Converts a lexical representation of an <c>xs:dayTimeDuration</c> to its <see cref="T:XmlPrime.DayTimeDuration"/>
            equivalent.  A return value indicates whether the conversion succeeded or failed.		
            </summary>
      <param name="value">The lexical representation of an <c>xs:dayTimeDuration</c> to convert.</param>
      <param name="result">
            When this method returns, contains the <see cref="T:XmlPrime.DayTimeDuration"/> value equivalent to the
            <c>xs:dayTimeDuration</c> represented by <paramref name="value"/> if the conversion succeeded, or zero (<c>PT0S</c>) if
            the conversion failed.
            </param>
      <returns>
        <see langword="true"/> if the conversion succeeded; otherwise <see langword="false"/>.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.#ctor(System.Int64,System.Int32,System.Int32,System.Decimal)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.DayTimeDuration"/> structure with the specified duration in 
            days, hours, minutes and seconds.
            </summary>
      <param name="days">The number of days.</param>
      <param name="hours">The number of hours.</param>
      <param name="minutes">The number of minutes.</param>
      <param name="seconds">The number of seconds.</param>
      <exception cref="T:System.OverflowException">
            The duration components represent a duration less than <see cref="F:XmlPrime.DayTimeDuration.MinValue"/> or greater than 
            <see cref="F:XmlPrime.DayTimeDuration.MaxValue"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.#ctor(System.Int64,System.Decimal)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.DayTimeDuration"/> class
            with the specified duration in days and seconds.
            </summary>
      <param name="days">The number of days.</param>
      <param name="seconds">The number of seconds.</param>
      <exception cref="T:System.OverflowException">
            The components represent a duration less than <see cref="F:XmlPrime.DayTimeDuration.MinValue"/> or greater than <see cref="F:XmlPrime.DayTimeDuration.MaxValue"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.Equals(System.Object)">
      <overloads>
            Determines whether two <see cref="T:XmlPrime.DayTimeDuration"/> instances have the same value.
            </overloads>
      <summary>
            Determines whether this instance is equal to a specified object.
            </summary>
      <param name="obj">An object to compare to this instance.</param>
      <returns>
        <see langword="true"/> if <paramref name="obj"/> is an instance of <see cref="T:XmlPrime.DayTimeDuration"/>
            and equals the value of this instance; otherwise <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.ToString">
      <summary>
            Returns the canonical lexical representation of this <see cref="T:XmlPrime.DayTimeDuration"/></summary>
      <returns>The canonical lexical representation of this <see cref="T:XmlPrime.DayTimeDuration"/>.</returns>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.ToTimeSpan">
      <summary>
            Returns the value as a <see cref="T:System.TimeSpan"/> instance.
            </summary>
      <returns>The value as a <see cref="T:System.TimeSpan"/> instance.</returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.CompareTo(XmlPrime.DayTimeDuration)">
      <summary>
            Compares this instance to a specified <see cref="T:XmlPrime.DayTimeDuration"/> and returns an integer that 
            indicates whether the value of this instance is less than, equal to, or greater than the value of the 
            specified <see cref="T:XmlPrime.DayTimeDuration"/>.
            </summary>
      <param name="other">A <see cref="T:XmlPrime.DayTimeDuration"/> to compare.</param>
      <returns>
        <para>A signed number that indicates the relative order of this instance and <paramref name="other"/>.
            The return value has the following meanings.</para>
        <list type="bullet">
          <item>
            <description>Less than zero indicates that this instance is less than <paramref name="other"/>.</description>
          </item>
          <item>
            <description>Zero indicates that this instance is equal to <paramref name="other"/>.</description>
          </item>
          <item>
            <description>Greater than zero  indicates that this instance is greater than <paramref name="other"/>.</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.Equals(XmlPrime.DayTimeDuration)">
      <summary>
            Indicates whether this instance is equal to another <see cref="T:XmlPrime.DayTimeDuration"/>.
            </summary>
      <param name="other">A <see cref="T:XmlPrime.DayTimeDuration"/> to compare with this object.</param>
      <returns>
        <see langword="true"/> if <paramref name="other"/> equals the value of this instance; otherwise, <see langword="false"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.op_Addition(XmlPrime.DayTimeDuration,XmlPrime.DayTimeDuration)">
      <summary>
            Adds a specified <see cref="T:XmlPrime.DayTimeDuration"/> value to another <see cref="T:XmlPrime.DayTimeDuration"/> value.
            </summary>
      <param name="duration1">The first <see cref="T:XmlPrime.DayTimeDuration"/> to add.</param>
      <param name="duration2">The second <see cref="T:XmlPrime.DayTimeDuration"/> to add.</param>
      <returns>
            A <see cref="T:XmlPrime.DayTimeDuration"/> that is the sum of <paramref name="duration1"/> and 
            <paramref name="duration2"/>.</returns>
      <exception cref="T:System.OverflowException">
            The sum of <paramref name="duration1"/> and <paramref name="duration2"/> is less than 
            <see cref="F:XmlPrime.DayTimeDuration.MinValue"/> or greater than <see cref="F:XmlPrime.DayTimeDuration.MaxValue"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.op_Subtraction(XmlPrime.DayTimeDuration,XmlPrime.DayTimeDuration)">
      <summary>
            Subtracts a <see cref="T:XmlPrime.DayTimeDuration"/> value from another <see cref="T:XmlPrime.DayTimeDuration"/> value. 
            </summary>
      <param name="duration1">The <see cref="T:XmlPrime.DayTimeDuration"/> to subtract from.</param>
      <param name="duration2">The <see cref="T:XmlPrime.DayTimeDuration"/> to subtract.</param>
      <returns>
            A <see cref="T:XmlPrime.DayTimeDuration"/> that is the result of subtracting <paramref name="duration2"/> from
            <paramref name="duration1"/>.
            </returns>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.DayTimeDuration.MinValue"/> or greater than <see cref="F:XmlPrime.DayTimeDuration.MaxValue"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.op_UnaryPlus(XmlPrime.DayTimeDuration)">
      <summary>
            Returns the value of the <see cref="T:XmlPrime.DayTimeDuration"/> operand (the sign of the operand is unchanged). 
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> operand.</param>
      <returns>The value of the operand, <paramref name="duration"/>.</returns>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.op_UnaryNegation(XmlPrime.DayTimeDuration)">
      <summary>
            Negates the value of the specified <see cref="T:XmlPrime.DayTimeDuration"/> operand. 
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> operand.</param>
      <returns>The additive inverse of <see cref="T:XmlPrime.DayTimeDuration"/>.</returns>
      <exception cref="T:System.OverflowException">The return value would be less
            than <see cref="F:XmlPrime.DayTimeDuration.MinValue"/> or greater than <see cref="F:XmlPrime.DayTimeDuration.MaxValue"/>.</exception>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.op_Multiply(XmlPrime.DayTimeDuration,System.Double)">
      <overloads>Multiplies a <see cref="T:XmlPrime.DayTimeDuration"/> value by a <see cref="T:System.Double"/> value.</overloads>
      <summary>
            Multiplies the specified <see cref="T:XmlPrime.DayTimeDuration"/> value by a <see cref="T:System.Double"/> value.
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> value to multiply.</param>
      <param name="value">The <see cref="T:System.Double"/> value to multiply by.</param>
      <returns>
            The <see cref="T:XmlPrime.DayTimeDuration"/> result of multiplying <paramref name="duration"/> by 
            <paramref name="value"/>.
            </returns>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.DayTimeDuration.MinValue"/> or greater than <see cref="F:XmlPrime.DayTimeDuration.MaxValue"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
            The value of <paramref name="value"/> was <see cref="F:System.Double.NaN"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.op_Multiply(System.Double,XmlPrime.DayTimeDuration)">
      <summary>
            Multiplies the specified <see cref="T:XmlPrime.DayTimeDuration"/> value by a <see cref="T:System.Double"/> value.
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> value to multiply.</param>
      <param name="value">The <see cref="T:System.Double"/> value to multiply by.</param>
      <returns>
            The <see cref="T:XmlPrime.DayTimeDuration"/> result of multiplying <paramref name="duration"/> by 
            <paramref name="value"/>.
            </returns>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.DayTimeDuration.MinValue"/> or greater than <see cref="F:XmlPrime.DayTimeDuration.MaxValue"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
            The value of <paramref name="value"/> was <see cref="F:System.Double.NaN"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.op_Division(XmlPrime.DayTimeDuration,System.Double)">
      <overloads>
            Divides the specified <see cref="T:XmlPrime.DayTimeDuration"/> value with <see cref="T:XmlPrime.DayTimeDuration"/> or 
            <see cref="T:System.Double"/> value.
            </overloads>
      <summary>
            Divides the specified <see cref="T:XmlPrime.DayTimeDuration"/> value by a <see cref="T:System.Double"/> value.
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> to divide. </param>
      <param name="value">The <see cref="T:System.Double"/> to divide by. </param>
      <returns>The <see cref="T:XmlPrime.DayTimeDuration"/> result of dividing <paramref name="duration"/> by <paramref name="value"/>.</returns>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="value"/> is zero.</exception>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.DayTimeDuration.MinValue"/> or greater than <see cref="F:XmlPrime.DayTimeDuration.MaxValue"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
            The value of <paramref name="value"/> was <see cref="F:System.Double.NaN"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.op_Division(XmlPrime.DayTimeDuration,XmlPrime.DayTimeDuration)">
      <summary>
            Divides the specified <see cref="T:XmlPrime.DayTimeDuration"/> value by another <see cref="T:XmlPrime.DayTimeDuration"/>  value.
            </summary>
      <param name="duration1">The <see cref="T:XmlPrime.DayTimeDuration"/> to divide.</param>
      <param name="duration2">The <see cref="T:XmlPrime.DayTimeDuration"/> to divide by. </param>
      <returns>The <see cref="T:System.Decimal"/> result of dividing <paramref name="duration1"/> by <paramref name="duration2"/>.</returns>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="duration2"/> is zero (<c>PT0S</c>).</exception>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.DayTimeDuration.MinValue"/> or greater than <see cref="F:XmlPrime.DayTimeDuration.MaxValue"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.op_Equality(XmlPrime.DayTimeDuration,XmlPrime.DayTimeDuration)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.DayTimeDuration"/> is equal to another specified <see cref="T:XmlPrime.DayTimeDuration"/>.
            </summary>
      <param name="duration1">The first <see cref="T:XmlPrime.DayTimeDuration"/> to compare.</param>
      <param name="duration2">The second <see cref="T:XmlPrime.DayTimeDuration"/> to compare.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.DayTimeDuration"/> values are equal, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.op_Inequality(XmlPrime.DayTimeDuration,XmlPrime.DayTimeDuration)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.DayTimeDuration"/> is not equal to another specified <see cref="T:XmlPrime.DayTimeDuration"/>.
            </summary>
      <param name="duration1">The first <see cref="T:XmlPrime.DayTimeDuration"/> to compare.</param>
      <param name="duration2">The second <see cref="T:XmlPrime.DayTimeDuration"/> to compare.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.DayTimeDuration"/> values are not equal, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.op_LessThan(XmlPrime.DayTimeDuration,XmlPrime.DayTimeDuration)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.DayTimeDuration"/> is less than another specified <see cref="T:XmlPrime.DayTimeDuration"/>.
            </summary>
      <param name="duration1">The first <see cref="T:XmlPrime.DayTimeDuration"/> to compare.</param>
      <param name="duration2">The second <see cref="T:XmlPrime.DayTimeDuration"/> to compare.</param>
      <returns>
        <see langword="true"/> if the value of <paramref name="duration1"/> is less than the value of <paramref name="duration2"/>, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.op_LessThanOrEqual(XmlPrime.DayTimeDuration,XmlPrime.DayTimeDuration)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.DayTimeDuration"/> is less than or equal to another specified <see cref="T:XmlPrime.DayTimeDuration"/>.
            </summary>
      <param name="duration1">The first <see cref="T:XmlPrime.DayTimeDuration"/> to compare.</param>
      <param name="duration2">The second <see cref="T:XmlPrime.DayTimeDuration"/> to compare.</param>
      <returns>
        <see langword="true"/> if the value of <paramref name="duration1"/> is less than or equal to the value of <paramref name="duration2"/>, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.op_GreaterThan(XmlPrime.DayTimeDuration,XmlPrime.DayTimeDuration)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.DayTimeDuration"/> is greater than another specified <see cref="T:XmlPrime.DayTimeDuration"/>.
            </summary>
      <param name="duration1">The first <see cref="T:XmlPrime.DayTimeDuration"/> to compare.</param>
      <param name="duration2">The second <see cref="T:XmlPrime.DayTimeDuration"/> to compare.</param>
      <returns>
        <see langword="true"/> if the value of <paramref name="duration1"/> is greater than the value of <paramref name="duration2"/>, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="M:XmlPrime.DayTimeDuration.op_GreaterThanOrEqual(XmlPrime.DayTimeDuration,XmlPrime.DayTimeDuration)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.DayTimeDuration"/> is greater than or equal to another specified <see cref="T:XmlPrime.DayTimeDuration"/>.
            </summary>
      <param name="duration1">The first <see cref="T:XmlPrime.DayTimeDuration"/> to compare.</param>
      <param name="duration2">The second <see cref="T:XmlPrime.DayTimeDuration"/> to compare.</param>
      <returns>
        <see langword="true"/> if the value of <paramref name="duration1"/> is greater than or equal to the value of <paramref name="duration2"/>, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="P:XmlPrime.DayTimeDuration.Days">
      <summary>
            Gets the days component of the current <see cref="T:XmlPrime.DayTimeDuration"/>. 
            </summary>
      <value>The days component of this instance. The return value can be positive or negative.</value>
    </member>
    <member name="P:XmlPrime.DayTimeDuration.Hours">
      <summary>
            Gets the hours component of the current <see cref="T:XmlPrime.DayTimeDuration"/>. 
            </summary>
      <value>The hours component of this instance.  The values range between -23 and 23.</value>
    </member>
    <member name="P:XmlPrime.DayTimeDuration.IsValidTimezone">
      <summary>
            Gets a value indicating whether this instance is valid timezone.
            </summary>
      <value>
        <see langword="true"/> if this instance is valid timezone; otherwise, <see langword="false"/>.
            </value>
      <remarks>A valid timezone is a duration between -PT14H and PT14H with an integral number of minutes.
            </remarks>
    </member>
    <member name="P:XmlPrime.DayTimeDuration.Minutes">
      <summary>
            Gets the minutes component of the current <see cref="T:XmlPrime.DayTimeDuration"/>. 
            </summary>
      <value>The minutes component of this instance.  The values range between -59 and 59.</value>
    </member>
    <member name="P:XmlPrime.DayTimeDuration.Seconds">
      <summary>
            Gets the seconds component of the current  <see cref="T:XmlPrime.DayTimeDuration"/>.
            </summary>
      <value>The number of whole and partial seconds in this instance.  The values range between -60 and 60 exclusive.</value>
    </member>
    <member name="P:XmlPrime.DayTimeDuration.SecondsInDay">
      <summary>
            Gets the number of seconds past the number of whole days in this duration.
            </summary>
      <value>The number of seconds past the number of whole days in this duration.</value>
    </member>
    <member name="P:XmlPrime.DayTimeDuration.TotalSeconds">
      <summary>
            Gets the value of the current <see cref="T:XmlPrime.DayTimeDuration"/> expressed as a number of seconds.
            </summary>
      <value>The total number of complete and partial seconds represented by this duration.</value>
    </member>
    <member name="T:XmlPrime.Duration">
      <summary>
            Represents a duration of time that is expressed by the Gregorian year, month, day, hour, minute and second 
            components.  The corresponding XML Schema type is <c>xs:duration</c>.
            </summary>
      <remarks>
        <para>A <see cref="T:XmlPrime.Duration"/> is a duration of time that is expressed by the Gregorian year, month, day, hour,
            minute and second components.  Note that the order relation on <see cref="T:XmlPrime.Duration"/> is a partial order
            For example, the order of the durations one month (<c>P1M</c>) and 30 days (<c>P30D</c>) cannot be determined.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xmlschema-2/#duration">[XML Schema Part 2: Datatypes Second Edition] 3.2.6 duration</seealso>
    </member>
    <member name="F:XmlPrime.Duration.MinValue">
      <summary>
            Represents the minimum <see cref="T:XmlPrime.Duration"/> value.  This field is read-only. 
            </summary>
      <remarks>
        <para>The string representation of this value is <c>-P768614336404564650Y8M9223372036854775808DT23H59M60.0S</c>.</para>
      </remarks>
    </member>
    <member name="F:XmlPrime.Duration.MaxValue">
      <summary>
            Represents the maximum <see cref="T:XmlPrime.Duration"/> value.  This field is read-only. 
            </summary>
      <remarks>
        <para>The string representation of this value is <c>P768614336404564650Y7M9223372036854775807DT23H59M60.0S</c>.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.Duration.Add(XmlPrime.Duration,XmlPrime.Duration)">
      <summary>
            Adds two specified <see cref="T:XmlPrime.Duration"/> values.
            </summary>
      <param name="duration1">The first <see cref="T:XmlPrime.Duration"/> to add.</param>
      <param name="duration2">The second <see cref="T:XmlPrime.Duration"/> to add.</param>
      <returns>
            A <see cref="T:XmlPrime.Duration"/> that is the sum of <paramref name="duration1"/> and <paramref name="duration2"/>.
            </returns>
      <exception cref="T:System.OverflowException">
            The sum of <paramref name="duration1"/> and <paramref name="duration2"/> is less than 
            <see cref="F:XmlPrime.Duration.MinValue"/> or greater than <see cref="F:XmlPrime.Duration.MaxValue"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.Duration.Divide(XmlPrime.Duration,System.Double)">
      <summary>
            Divides the specified <see cref="T:XmlPrime.Duration"/> value by a <see cref="T:System.Double"/> value.
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.Duration"/> to divide.</param>
      <param name="value">The <see cref="T:System.Double"/> to divide by. </param>
      <returns>The <see cref="T:XmlPrime.Duration"/> result of dividing <paramref name="duration"/> by <paramref name="value"/>.</returns>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="value"/> is zero.</exception>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.Duration.MinValue"/> or greater than <see cref="F:XmlPrime.Duration.MaxValue"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.Duration.Multiply(XmlPrime.Duration,System.Double)">
      <overloads>Multiplies a <see cref="T:XmlPrime.Duration"/> value by a <see cref="T:System.Double"/> value.</overloads>
      <summary>
            Multiplies the specified <see cref="T:XmlPrime.Duration"/> value by a <see cref="T:System.Double"/> value.
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.Duration"/> value to multiply.</param>
      <param name="value">The <see cref="T:System.Double"/> value to multiply by.</param>
      <returns>
            The <see cref="T:XmlPrime.Duration"/> result of multiplying <paramref name="duration"/> by 
            <paramref name="value"/>.
            </returns>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.Duration.MinValue"/> or greater than <see cref="F:XmlPrime.Duration.MaxValue"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.Duration.Multiply(System.Double,XmlPrime.Duration)">
      <summary>
            Multiplies the specified <see cref="T:XmlPrime.Duration"/> value by a <see cref="T:System.Double"/> value.
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.Duration"/> value to multiply.</param>
      <param name="value">The <see cref="T:System.Double"/> value to multiply by.</param>
      <returns>
            The <see cref="T:XmlPrime.Duration"/> result of multiplying <paramref name="duration"/> by 
            <paramref name="value"/>.
            </returns>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.Duration.MinValue"/> or greater than <see cref="F:XmlPrime.Duration.MaxValue"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.Duration.Negate(XmlPrime.Duration)">
      <summary>
            Negates the value of the specified <see cref="T:XmlPrime.Duration"/> operand. 
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.Duration"/> operand.</param>
      <returns>The additive inverse of <see cref="T:XmlPrime.Duration"/>.</returns>
      <exception cref="T:System.OverflowException">The return value is less
            than <see cref="F:XmlPrime.Duration.MinValue"/> or greater than <see cref="F:XmlPrime.Duration.MaxValue"/>.</exception>
    </member>
    <member name="M:XmlPrime.Duration.Parse(System.String)">
      <summary>
            Converts a lexical representation of an <c>xs:duration</c> to its <see cref="T:XmlPrime.Duration"/> 
            equivalent. 
            </summary>
      <param name="value">The lexical representation of an <c>xs:duration</c> to convert.</param>
      <returns>
            The <see cref="T:XmlPrime.Duration"/> equivalent to the <c>xs:duration</c> represented by 
            <paramref name="value"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value"/> is not a valid lexical value of an <c>xs:duration</c>.
            </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value"/> represents a duration less than <see cref="F:XmlPrime.Duration.MinValue"/> or greater than
            <see cref="F:XmlPrime.Duration.MaxValue"/>. 
            </exception>
    </member>
    <member name="M:XmlPrime.Duration.Plus(XmlPrime.Duration)">
      <summary>
            Returns the value of the <see cref="T:XmlPrime.Duration"/> operand (the sign of the operand is unchanged). 
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.Duration"/> operand.</param>
      <returns>The value of the operand, <paramref name="duration"/>.</returns>
    </member>
    <member name="M:XmlPrime.Duration.Subtract(XmlPrime.Duration,XmlPrime.Duration)">
      <summary>
            Subtracts a <see cref="T:XmlPrime.Duration"/> value from another <see cref="T:XmlPrime.Duration"/> value. 
            </summary>
      <param name="duration1">The <see cref="T:XmlPrime.Duration"/> to subtract from.</param>
      <param name="duration2">The <see cref="T:XmlPrime.Duration"/> to subtract.</param>
      <returns>
            A <see cref="T:XmlPrime.Duration"/> that is the result of subtracting <paramref name="duration2"/> from
            <paramref name="duration1"/>.
            </returns>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.Duration.MinValue"/> or greater than <see cref="F:XmlPrime.Duration.MaxValue"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.Duration.TryParse(System.String,XmlPrime.Duration@)">
      <summary>
            Converts a lexical representation of an <c>xs:duration</c> to its <see cref="T:XmlPrime.Duration"/>
            equivalent.  A return value indicates whether the conversion succeeded or failed.		
            </summary>
      <param name="value">The lexical representation of an <c>xs:duration</c> to convert.</param>
      <param name="result">
            When this method returns, contains the <see cref="T:XmlPrime.Duration"/> value equivalent to the
            <c>xs:duration</c> represented by <paramref name="value"/> if the conversion succeeded, or zero (<c>PT0S</c>) if
            the conversion failed.
            </param>
      <returns>
        <see langword="true"/> if the conversion succeeded; otherwise <see langword="false"/>.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.Duration.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Decimal)">
      <overloads>Initializes a new instance of the <see cref="T:XmlPrime.Duration"/> structure.</overloads>
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.Duration"/> structure with the
            specified year, month, day, hour, minute and second components.
            </summary>
      <param name="year">The number of years.</param>
      <param name="month">The number of months.</param>
      <param name="day">The number of days.</param>
      <param name="hour">The number of hours.</param>
      <param name="minute">The number of minutes.</param>
      <param name="second">The number of seconds.</param>
      <exception cref="T:System.OverflowException">The duration components represent a duration less than <see cref="F:XmlPrime.Duration.MinValue"/> or greater than <see cref="F:XmlPrime.Duration.MaxValue"/>.</exception>
    </member>
    <member name="M:XmlPrime.Duration.#ctor(XmlPrime.YearMonthDuration,XmlPrime.DayTimeDuration)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.Duration"/> structure
            with the specified <see cref="P:XmlPrime.Duration.YearMonthDuration"/> and <see cref="P:XmlPrime.Duration.DayTimeDuration"/>.
            </summary>
      <param name="yearMonth">The year and month components of the duration.</param>
      <param name="dayTime">The day time components of the duration.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="yearMonth"/> and <paramref name="dayTime"/> have different signs.
            </exception>
    </member>
    <member name="M:XmlPrime.Duration.#ctor(XmlPrime.YearMonthDuration)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.Duration"/> structure
            from a <see cref="P:XmlPrime.Duration.YearMonthDuration"/>.
            </summary>
      <param name="yearMonth">The year and month components of the duration.</param>
    </member>
    <member name="M:XmlPrime.Duration.#ctor(XmlPrime.DayTimeDuration)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.Duration"/> structure
            from a <see cref="P:XmlPrime.Duration.DayTimeDuration"/>.
            </summary>
      <param name="dayTime">The day time components of the duration.</param>
    </member>
    <member name="M:XmlPrime.Duration.Equals(System.Object)">
      <overloads>
            Determines whether two <see cref="T:XmlPrime.Duration"/> instances have the same value.
            </overloads>
      <summary>
            Determines whether this instance is equal to a specified object.
            </summary>
      <param name="obj">An object to compare to this instance.</param>
      <returns>
        <see langword="true"/> if <paramref name="obj"/> is an instance of <see cref="T:XmlPrime.Duration"/>
            and equals the value of this instance; otherwise <see langword="false"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.Duration.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
    </member>
    <member name="M:XmlPrime.Duration.ToString">
      <summary>
            Returns the canonical lexical representation of this <see cref="T:XmlPrime.Duration"/>.
            </summary>
      <returns>The canonical lexical representation of this <see cref="T:XmlPrime.Duration"/>.</returns>
    </member>
    <member name="M:XmlPrime.Duration.Equals(XmlPrime.Duration)">
      <summary>
            Indicates whether this instance is equal to another <see cref="T:XmlPrime.Duration"/>.
            </summary>
      <param name="other">A <see cref="T:XmlPrime.Duration"/> to compare with this object.</param>
      <returns>
        <see langword="true"/> if <paramref name="other"/> equals the value of this instance; otherwise, <see langword="false"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.Duration.op_Addition(XmlPrime.Duration,XmlPrime.Duration)">
      <summary>
            Adds two specified <see cref="T:XmlPrime.Duration"/> values.
            </summary>
      <param name="duration1">A <see cref="T:XmlPrime.Duration"/>.</param>
      <param name="duration2">A <see cref="T:XmlPrime.Duration"/>.</param>
      <returns>A <see cref="T:XmlPrime.Duration"/> that is the sum of <paramref name="duration1"/> and <paramref name="duration2"/>.</returns>
      <exception cref="T:System.OverflowException">The sum of <paramref name="duration1"/> and <paramref name="duration2"/> is less
            than <see cref="F:XmlPrime.Duration.MinValue"/> or greater than <see cref="F:XmlPrime.Duration.MaxValue"/>. </exception>
    </member>
    <member name="M:XmlPrime.Duration.op_Subtraction(XmlPrime.Duration,XmlPrime.Duration)">
      <summary>
            Subtracts a <see cref="T:XmlPrime.Duration"/> value from another <see cref="T:XmlPrime.Duration"/> value. 
            </summary>
      <param name="duration1">The <see cref="T:XmlPrime.Duration"/> to subtract from.</param>
      <param name="duration2">The <see cref="T:XmlPrime.Duration"/> to subtract.</param>
      <returns>
            A <see cref="T:XmlPrime.Duration"/> that is the result of subtracting <paramref name="duration2"/> from
            <paramref name="duration1"/>.
            </returns>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.Duration.MinValue"/> or greater than <see cref="F:XmlPrime.Duration.MaxValue"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.Duration.op_UnaryPlus(XmlPrime.Duration)">
      <summary>
            Returns the value of the <see cref="T:XmlPrime.Duration"/> operand (the sign of the operand is unchanged). 
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.Duration"/> operand.</param>
      <returns>The value of the operand, <paramref name="duration"/>.</returns>
    </member>
    <member name="M:XmlPrime.Duration.op_UnaryNegation(XmlPrime.Duration)">
      <summary>
            Negates the value of the specified <see cref="T:XmlPrime.Duration"/> operand. 
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.Duration"/> operand.</param>
      <returns>The additive inverse of <see cref="T:XmlPrime.Duration"/>.</returns>
      <exception cref="T:System.OverflowException">The return value is less
            than <see cref="F:XmlPrime.Duration.MinValue"/> or greater than <see cref="F:XmlPrime.Duration.MaxValue"/>.</exception>
    </member>
    <member name="M:XmlPrime.Duration.op_Multiply(XmlPrime.Duration,System.Double)">
      <overloads>Multiplies a <see cref="T:XmlPrime.Duration"/> value by a <see cref="T:System.Double"/> value.</overloads>
      <summary>
            Multiplies the specified <see cref="T:XmlPrime.Duration"/> value by a <see cref="T:System.Double"/> value.
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.Duration"/> value to multiply.</param>
      <param name="value">The <see cref="T:System.Double"/> value to multiply by.</param>
      <returns>
            The <see cref="T:XmlPrime.Duration"/> result of multiplying <paramref name="duration"/> by 
            <paramref name="value"/>.
            </returns>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.Duration.MinValue"/> or greater than <see cref="F:XmlPrime.Duration.MaxValue"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.Duration.op_Multiply(System.Double,XmlPrime.Duration)">
      <summary>
            Multiplies the specified <see cref="T:XmlPrime.Duration"/> value by a <see cref="T:System.Double"/> value.
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.Duration"/> value to multiply.</param>
      <param name="value">The <see cref="T:System.Double"/> value to multiply by.</param>
      <returns>
            The <see cref="T:XmlPrime.Duration"/> result of multiplying <paramref name="duration"/> by 
            <paramref name="value"/>.
            </returns>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.Duration.MinValue"/> or greater than <see cref="F:XmlPrime.Duration.MaxValue"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.Duration.op_Division(XmlPrime.Duration,System.Double)">
      <summary>
            Divides the specified <see cref="T:XmlPrime.Duration"/> value by a <see cref="T:System.Double"/> value.
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.Duration"/> to divide.</param>
      <param name="value">The <see cref="T:System.Double"/> to divide by.</param>
      <returns>The <see cref="T:XmlPrime.Duration"/> result of dividing <paramref name="duration"/> by <paramref name="value"/>.</returns>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="value"/> is zero.</exception>
      <exception cref="T:System.OverflowException">The return value is less
            than <see cref="F:XmlPrime.Duration.MinValue"/> or greater than <see cref="F:XmlPrime.Duration.MaxValue"/>.</exception>
    </member>
    <member name="M:XmlPrime.Duration.op_Equality(XmlPrime.Duration,XmlPrime.Duration)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.Duration"/> is equal to another specified <see cref="T:XmlPrime.Duration"/>.
            </summary>
      <param name="duration1">The first <see cref="T:XmlPrime.Duration"/> to compare.</param>
      <param name="duration2">The second <see cref="T:XmlPrime.Duration"/> to compare.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.Duration"/> values are equal, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="M:XmlPrime.Duration.op_Inequality(XmlPrime.Duration,XmlPrime.Duration)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.Duration"/> is not equal to another specified <see cref="T:XmlPrime.Duration"/>.
            </summary>
      <param name="duration1">The first <see cref="T:XmlPrime.Duration"/> to compare.</param>
      <param name="duration2">The second <see cref="T:XmlPrime.Duration"/> to compare.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.Duration"/> values are not equal, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="P:XmlPrime.Duration.Days">
      <summary>
            Gets the days component of the current <see cref="T:XmlPrime.Duration"/>. 
            </summary>
      <value>The days component of this instance. The return value can be positive or negative.</value>
    </member>
    <member name="P:XmlPrime.Duration.DayTimeDuration">
      <summary>
            Returns a <see cref="P:XmlPrime.Duration.DayTimeDuration"/> representing the days, hours, minutes and seconds in this duration
            </summary>
      <value>A <see cref="P:XmlPrime.Duration.DayTimeDuration"/>  value representing the days, hours, minutes and seconds components of this instance.</value>
    </member>
    <member name="P:XmlPrime.Duration.Hours">
      <summary>
            Gets the hours component of the current <see cref="T:XmlPrime.Duration"/>. 
            </summary>
      <value>The hours component of this instance.  The values range between -23 and 23.</value>
    </member>
    <member name="P:XmlPrime.Duration.Minutes">
      <summary>
             Gets the minutes component of the current <see cref="T:XmlPrime.Duration"/>. 
            </summary>
      <value>The minutes component of this instance.  The values range between -59 and 59.</value>
    </member>
    <member name="P:XmlPrime.Duration.Months">
      <summary>
            Gets the months component of the current <see cref="T:XmlPrime.Duration"/>. 
            </summary>
      <value>The months component of this instance.  The values range between -11 and 11.</value>
    </member>
    <member name="P:XmlPrime.Duration.Seconds">
      <summary>
            Gets the seconds component of the current <see cref="T:XmlPrime.Duration"/>. 
            </summary>
      <value>The number of whole and partial seconds in this instance.  The values range between -60 and 60 exclusive.</value>
    </member>
    <member name="P:XmlPrime.Duration.YearMonthDuration">
      <summary>
            Returns a <see cref="P:XmlPrime.Duration.YearMonthDuration"/> representing the years and months in this duration
            </summary>
      <value>A <see cref="P:XmlPrime.Duration.YearMonthDuration"/> value representing the years and months components of this instance.</value>
    </member>
    <member name="P:XmlPrime.Duration.Years">
      <summary>
             Gets the years component of the current <see cref="T:XmlPrime.Duration"/>. 
            </summary>
      <value>The years component of this instance. The return value can be positive or negative.</value>
    </member>
    <member name="T:XmlPrime.GDay">
      <summary>
            Represents a Gregorian day.  The corresponding XML Schema type is <c>xs:gDay</c>.
            </summary>
      <remarks>
        <para>A <see cref="T:XmlPrime.GDay"/> is a Gregorian day that recurs, specifically a day of the month such as the 5th 
            of the month.  It can be used to represent a specific day of the month.  To say, for example, that I get paid 
            on the 15th of each month.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xmlschema-2/#gDay">[XML Schema Part 2: Datatypes Second Edition] 3.2.13 gDay</seealso>
    </member>
    <member name="M:XmlPrime.GDay.Equals(XmlPrime.GDay,XmlPrime.GDay,XmlPrime.TimeZone)">
      <overloads>Determines whether two <see cref="T:XmlPrime.GDay"/> instances have the same value.</overloads>
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.GDay"/> is equal to another specified <see cref="T:XmlPrime.GDay"/>
            given the supplied implicit time zone.
            </summary>
      <param name="day1">The first <see cref="T:XmlPrime.GDay"/> to compare.</param>
      <param name="day2">The second <see cref="T:XmlPrime.GDay"/> to compare.</param>
      <param name="implicitTimeZone">The <see cref="P:XmlPrime.GDay.TimeZone"/> that is used in the case of a <see cref="T:XmlPrime.GDay"/> with no time zone.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.GDay"/> values are equal; otherwise <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.GDay.Parse(System.String)">
      <summary>
            Converts the lexical representation of an <c>xs:gDay</c> to its <see cref="T:XmlPrime.GDay"/> equivalent. 
            </summary>
      <param name="value">The lexical representation of the <c>xs:gDay</c> to convert.</param>
      <returns>The <see cref="T:XmlPrime.GDay"/> value equivalent to the <c>xs:gDay</c> represented by <paramref name="value"/>.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value"/> is not a valid lexical representation of an <c>xs:gDay</c>.</exception>
    </member>
    <member name="M:XmlPrime.GDay.TryParse(System.String,XmlPrime.GDay@)">
      <summary>
            Converts a lexical representation of an <c>xs:gDay</c> to its <see cref="T:XmlPrime.GDay"/> equivalent. 
            A return value indicates whether the conversion succeeded or failed.
            </summary>
      <param name="value">The lexical representation of an <c>xs:gDay</c> to convert.</param>
      <param name="result">When this method returns, contains the <see cref="T:XmlPrime.GDay"/> value equivalent to
            the representation represented by <paramref name="value"/> if parsing succeeded.  Otherwise the value is undefined.</param>
      <returns>
        <see langword="true"/> if the conversion succeeded; otherwise <see langword="false"/>.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.GDay.#ctor(System.Int32,System.Nullable{XmlPrime.TimeZone})">
      <overloads>Initializes a new instance of the <see cref="T:XmlPrime.GDay"/> structure.</overloads>
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.GDay"/> structure with the specified day of the month and 
            optional time zone.
            </summary>
      <param name="day">The day of the month.</param>
      <param name="timeZone">The optional time zone.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="day"/> is outside the range 1 to 31.
            </exception>
    </member>
    <member name="M:XmlPrime.GDay.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.GDay"/> class with the specified day of the month, but without
            a time zone.
            </summary>
      <param name="day">The day of the month.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="day"/> is outside the range 1 to 31.
            </exception>
    </member>
    <member name="M:XmlPrime.GDay.Equals(System.Object)">
      <summary>
            Determines whether this instance is equal to a specified object.
            </summary>
      <param name="obj">An object to compare to this instance.</param>
      <returns>
        <see langword="true"/> if <paramref name="obj"/> is an instance of <see cref="T:XmlPrime.GDay"/>
            and equals the value of this instance; otherwise <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.GDay.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
    </member>
    <member name="M:XmlPrime.GDay.ToString">
      <summary>
            Returns the canonical lexical representation of this <see cref="T:XmlPrime.GDay"/>.
            </summary>
      <returns>The canonical lexical representation of this <see cref="T:XmlPrime.GDay"/>.</returns>
    </member>
    <member name="M:XmlPrime.GDay.Equals(XmlPrime.GDay)">
      <summary>
            Determines whether this instance is equal to another <see cref="T:XmlPrime.GDay"/>.
            </summary>
      <param name="other">A <see cref="T:XmlPrime.GDay"/> to compare with this object.</param>
      <returns>
        <see langword="true"/> if <paramref name="other"/> equals the value of this instance; otherwise, <see langword="false"/>.
            </returns>
      <remarks>
        <para>
            Two <see cref="T:XmlPrime.GDay"/> values are considered equal if they have they have equal values for their
            <see cref="P:XmlPrime.GDay.Day"/> and <see cref="P:XmlPrime.GDay.TimeZone"/> properties. 
            </para>
        <para>Consider using <see cref="M:XmlPrime.GDay.Equals(XmlPrime.GDay,XmlPrime.GDay,XmlPrime.TimeZone)"/> to compare <see cref="T:XmlPrime.GDay"/> values with differing
            <see cref="P:XmlPrime.GDay.TimeZone"/> properties.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.GDay.op_Equality(XmlPrime.GDay,XmlPrime.GDay)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.GDay"/> is equal to another specified <see cref="T:XmlPrime.GDay"/>.
            </summary>
      <param name="day1">The first <see cref="T:XmlPrime.GDay"/> to compare.</param>
      <param name="day2">The second <see cref="T:XmlPrime.GDay"/> to compare.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.GDay"/> values are equal, <see langword="false"/> otherwise.</returns>
      <remarks>
        <para>
            Two <see cref="T:XmlPrime.GDay"/> values are considered equal if they have they have equal values for their
            <see cref="P:XmlPrime.GDay.Day"/> and <see cref="P:XmlPrime.GDay.TimeZone"/> properties. 
            </para>
        <para>Consider using <see cref="M:XmlPrime.GDay.Equals(XmlPrime.GDay,XmlPrime.GDay,XmlPrime.TimeZone)"/> to compare <see cref="T:XmlPrime.GDay"/> values with differing
            <see cref="P:XmlPrime.GDay.TimeZone"/> properties.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.GDay.op_Inequality(XmlPrime.GDay,XmlPrime.GDay)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.GDay"/> is not equal to another specified <see cref="T:XmlPrime.GDay"/>.
            </summary>
      <param name="day1">The first <see cref="T:XmlPrime.GDay"/> to compare.</param>
      <param name="day2">The second <see cref="T:XmlPrime.GDay"/> to compare.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.GDay"/> values are not equal, <see langword="false"/> otherwise.</returns>
      <remarks>
        <para>
            Two <see cref="T:XmlPrime.GDay"/> values are considered equal if they have they have equal values for their
            <see cref="P:XmlPrime.GDay.Day"/> and <see cref="P:XmlPrime.GDay.TimeZone"/> properties. 
            </para>
        <para>Consider using <see cref="M:XmlPrime.GDay.Equals(XmlPrime.GDay,XmlPrime.GDay,XmlPrime.TimeZone)"/> to compare <see cref="T:XmlPrime.GDay"/> values with differing
            <see cref="P:XmlPrime.GDay.TimeZone"/> properties.</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.GDay.Day">
      <summary>
            Gets the day of the month.
            </summary>
      <value>The day component of this <see cref="T:XmlPrime.GDay"/>. The values range from 1 to 31 inclusive.</value>
    </member>
    <member name="P:XmlPrime.GDay.TimeZone">
      <summary>
            Gets the optional time zone component of this <see cref="T:XmlPrime.GDay"/>.
            </summary>
      <value>The optional time zone component of this <see cref="T:XmlPrime.GDay"/>.</value>
    </member>
    <member name="T:XmlPrime.GMonth">
      <summary>
            Represents a Gregorian month.  The corresponding XML Schema type is <c>xs:gMonth</c>.
            </summary>
      <remarks>
        <para>A <see cref="T:XmlPrime.GMonth"/> is a Gregorian month that recurs every year.
            It can be used to represent a specific month of the year.  To say, for example, that Christmas falls in the
            month of December.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xmlschema-2/#gMonth">[XML Schema Part 2: Datatypes Second Edition] 3.2.14 gMonth</seealso>
    </member>
    <member name="M:XmlPrime.GMonth.Equals(XmlPrime.GMonth,XmlPrime.GMonth,XmlPrime.TimeZone)">
      <overloads>Determines whether two <see cref="T:XmlPrime.GMonth"/> instances have the same value.</overloads>
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.GMonth"/> is equal to another specified <see cref="T:XmlPrime.GMonth"/>
            given the supplied implicit time zone.
            </summary>
      <param name="month1">The first <see cref="T:XmlPrime.GMonth"/> to compare.</param>
      <param name="month2">The second <see cref="T:XmlPrime.GMonth"/> to compare.</param>
      <param name="implicitTimeZone">The <see cref="P:XmlPrime.GMonth.TimeZone"/> that is used in the case of a <see cref="T:XmlPrime.GMonth"/> with no time zone.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.GMonth"/> are equal; otherwise <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.GMonth.Parse(System.String)">
      <summary>
            Converts the lexical representation of an <c>xs:gMonth</c> to its <see cref="T:XmlPrime.GMonth"/> equivalent. 
            </summary>
      <param name="value">The lexical representation of the <c>xs:gMonth</c> to convert.</param>
      <returns>The <see cref="T:XmlPrime.GMonth"/> value equivalent to the <c>xs:gMonth</c> represented by <paramref name="value"/>.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value"/> is not a valid lexical representation of an <c>xs:gMonth</c>.</exception>
    </member>
    <member name="M:XmlPrime.GMonth.TryParse(System.String,XmlPrime.GMonth@)">
      <summary>
            Converts a lexical representation of an <c>xs:gMonth</c> to its <see cref="T:XmlPrime.GMonth"/> equivalent. 
            A return value indicates whether the conversion succeeded or failed.
            </summary>
      <param name="value">The lexical representation of an <c>xs:gMonth</c> to convert.</param>
      <param name="result">When this method returns, contains the <see cref="T:XmlPrime.GMonth"/> value equivalent to
            the <c>xs:gMonth</c> represented by <paramref name="value"/> if parsing succeeded.  Otherwise the value is undefined.</param>
      <returns>
        <see langword="true"/> if the conversion succeeded; otherwise <see langword="false"/>.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.GMonth.#ctor(System.Int32,System.Nullable{XmlPrime.TimeZone})">
      <overloads>Initializes a new instance of the <see cref="T:XmlPrime.GMonth"/> structure.</overloads>
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.GMonth"/> structure with the specified month of the year and
            optional time zone.
            </summary>
      <param name="month">The month of the year.</param>
      <param name="timeZone">The optional time zone.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="month"/> is outside the range 1 to 12.
            </exception>
    </member>
    <member name="M:XmlPrime.GMonth.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.GMonth"/> structure with the specified month, but without a 
            time zone.
            </summary>
      <param name="month">The month of the year.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="month"/> is outside the range 1 to 12.
            </exception>
    </member>
    <member name="M:XmlPrime.GMonth.Equals(System.Object)">
      <summary>
            Determines whether this instance is equal to a specified object.
            </summary>
      <param name="obj">An object to compare to this instance.</param>
      <returns>
        <see langword="true"/> if <paramref name="obj"/> is an instance of <see cref="T:XmlPrime.GMonth"/>
            and equals the value of this instance; otherwise <see langword="false"/>.</returns>
      <remarks>
        <para>Consider using <see cref="M:XmlPrime.GMonth.Equals(XmlPrime.GMonth,XmlPrime.GMonth,XmlPrime.TimeZone)"/> to compare <see cref="T:XmlPrime.GMonth"/> values with differing
            <see cref="P:XmlPrime.GMonth.TimeZone"/> properties.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.GMonth.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
    </member>
    <member name="M:XmlPrime.GMonth.ToString">
      <summary>
            Returns the canonical lexical representation of this <see cref="T:XmlPrime.GMonth"/></summary>
      <returns>The canonical lexical representation of this <see cref="T:XmlPrime.GMonth"/></returns>
    </member>
    <member name="M:XmlPrime.GMonth.Equals(XmlPrime.GMonth)">
      <summary>
            Determines whether this instance is equal to another <see cref="T:XmlPrime.GMonth"/>.
            </summary>
      <param name="other">A <see cref="T:XmlPrime.GMonth"/> to compare with this object.</param>
      <returns>
        <see langword="true"/> if <paramref name="other"/> equals the value of this instance; otherwise, <see langword="false"/>.
            </returns>
      <remarks>
        <para>
            Two <see cref="T:XmlPrime.GMonth"/> values are considered equal if they have they have equal values for their
            <see cref="P:XmlPrime.GMonth.Month"/> and <see cref="P:XmlPrime.GMonth.TimeZone"/> properties. 
            </para>
        <para>Consider using <see cref="M:XmlPrime.GMonth.Equals(XmlPrime.GMonth,XmlPrime.GMonth,XmlPrime.TimeZone)"/> to compare <see cref="T:XmlPrime.GMonth"/> values with differing
            <see cref="P:XmlPrime.GMonth.TimeZone"/> properties.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.GMonth.op_Equality(XmlPrime.GMonth,XmlPrime.GMonth)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.GMonth"/> is equal to another specified <see cref="T:XmlPrime.GMonth"/>.
            </summary>
      <param name="month1">The first <see cref="T:XmlPrime.GMonth"/> to compare.</param>
      <param name="month2">The second <see cref="T:XmlPrime.GMonth"/> to compare.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.GMonth"/> values are equal, <see langword="false"/> otherwise.</returns>
      <remarks>
        <para>
            Two <see cref="T:XmlPrime.GMonth"/> values are considered equal if they have they have equal values for their
            <see cref="P:XmlPrime.GMonth.Month"/> and <see cref="P:XmlPrime.GMonth.TimeZone"/> properties. 
            </para>
        <para>Consider using <see cref="M:XmlPrime.GMonth.Equals(XmlPrime.GMonth,XmlPrime.GMonth,XmlPrime.TimeZone)"/> to compare <see cref="T:XmlPrime.GMonth"/> values with differing
            <see cref="P:XmlPrime.GMonth.TimeZone"/> properties.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.GMonth.op_Inequality(XmlPrime.GMonth,XmlPrime.GMonth)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.GMonth"/> is not equal to another specified <see cref="T:XmlPrime.GMonth"/>.
            </summary>
      <param name="month1">The first <see cref="T:XmlPrime.GMonth"/> to compare.</param>
      <param name="month2">The second <see cref="T:XmlPrime.GMonth"/> to compare.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.GMonth"/> values are not equal, <see langword="false"/> otherwise.</returns>
      <remarks>
        <para>
            Two <see cref="T:XmlPrime.GMonth"/> values are considered equal if they have they have equal values for their
            <see cref="P:XmlPrime.GMonth.Month"/> and <see cref="P:XmlPrime.GMonth.TimeZone"/> properties. 
            </para>
        <para>Consider using <see cref="M:XmlPrime.GMonth.Equals(XmlPrime.GMonth,XmlPrime.GMonth,XmlPrime.TimeZone)"/> to compare <see cref="T:XmlPrime.GMonth"/> values with differing
            <see cref="P:XmlPrime.GMonth.TimeZone"/> properties.</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.GMonth.Month">
      <summary>
            Gets the month of the year.
            </summary>
      <value>The month component of this <see cref="T:XmlPrime.GMonth"/>. The values range from 1 to 12 inclusive.</value>
    </member>
    <member name="P:XmlPrime.GMonth.TimeZone">
      <summary>
            Gets the optional time zone component of this <see cref="T:XmlPrime.GMonth"/>.
            </summary>
      <value>The optional time zone component of this <see cref="T:XmlPrime.GMonth"/>.</value>
    </member>
    <member name="T:XmlPrime.GMonthDay">
      <summary>
            Represents a Gregorian date that recurs.  The corresponding XML Schema type is <c>xs:gMonthDay</c>.
            </summary>
      <remarks>
        <para>A <see cref="T:XmlPrime.GMonthDay"/> is a Gregorian date that recurs, specifically a day of the year.
            To say, for example, that Christmas Day is the 25th of December.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xmlschema-2/#gMonthDay">[XML Schema Part 2: Datatypes Second Edition] 3.2.12 gMonthDay</seealso>
    </member>
    <member name="M:XmlPrime.GMonthDay.Equals(XmlPrime.GMonthDay,XmlPrime.GMonthDay,XmlPrime.TimeZone)">
      <overloads>Determines whether two <see cref="T:XmlPrime.GMonth"/> instances have the same value.</overloads>
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.GMonthDay"/> is equal to another specified <see cref="T:XmlPrime.GMonthDay"/>
            given the supplied implicit time zone.
            </summary>
      <param name="monthDay1">The first <see cref="T:XmlPrime.GMonthDay"/> to compare.</param>
      <param name="monthDay2">The second <see cref="T:XmlPrime.GMonthDay"/> to compare.</param>
      <param name="implicitTimeZone">The <see cref="P:XmlPrime.GMonthDay.TimeZone"/> that is used in the case of a <see cref="T:XmlPrime.GMonthDay"/> with no time zone.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.GMonthDay"/> values are equal; otherwise <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.GMonthDay.Parse(System.String)">
      <summary>
            Converts the lexical representation of an <c>xs:gMonthDay</c> to its <see cref="T:XmlPrime.GMonthDay"/> equivalent. 
            </summary>
      <param name="value">The lexical representation of the <c>xs:gMonthDay</c> to convert.</param>
      <returns>The <see cref="T:XmlPrime.GMonthDay"/> value equivalent to the <c>xs:gMonthDay</c> represented by <paramref name="value"/>.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value"/> is not a valid lexical representation of an <c>xs:gMonthDay</c>.</exception>
    </member>
    <member name="M:XmlPrime.GMonthDay.TryParse(System.String,XmlPrime.GMonthDay@)">
      <summary>
            Converts a lexical representation of an <c>xs:gMonthDay</c> to its <see cref="T:XmlPrime.GMonthDay"/> equivalent. 
            A return value indicates whether the conversion succeeded or failed.
            </summary>
      <param name="value">The lexical representation of an <c>xs:gMonthDay</c> to convert.</param>
      <param name="result">When this method returns, contains the <see cref="T:XmlPrime.GMonthDay"/> value equivalent to
            the <c>xs:gMonthDay</c> represented by <paramref name="value"/> if parsing succeeded.  Otherwise the value is undefined.</param>
      <returns>
        <see langword="true"/> if the conversion succeeded; otherwise <see langword="false"/>.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.GMonthDay.#ctor(System.Int32,System.Int32,System.Nullable{XmlPrime.TimeZone})">
      <overloads>Initializes a new instance of the <see cref="T:XmlPrime.GMonthDay"/> structure.</overloads>
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.GMonthDay"/> structure with the specified month, day and
            optional time zone.
            </summary>
      <param name="month">The month of the year.</param>
      <param name="day">The day of the month.</param>
      <param name="timeZone">The optional time zone.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="month"/> is outside the range 1 to 12, or <paramref name="day"/> is not a valid day in the
            specified month.
            </exception>
    </member>
    <member name="M:XmlPrime.GMonthDay.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.GMonthDay"/> structure with the specified month and day, but 
            without a time zone.
            </summary>
      <param name="month">The month of the year.</param>
      <param name="day">The day of the month.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="month"/> is outside the range 1 to 12, or <paramref name="day"/> is not a valid day in the
            specified month.
            </exception>
    </member>
    <member name="M:XmlPrime.GMonthDay.Equals(System.Object)">
      <summary>
            Determines whether this instance is equal to a specified object.
            </summary>
      <param name="obj">An object to compare to this instance.</param>
      <returns>
        <see langword="true"/> if <paramref name="obj"/> is an instance of <see cref="T:XmlPrime.GMonthDay"/>
            and equals the value of this instance; otherwise <see langword="false"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.GMonthDay.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
    </member>
    <member name="M:XmlPrime.GMonthDay.ToString">
      <summary>
            Returns the canonical lexical representation of this <see cref="T:XmlPrime.GMonthDay"/>.
            </summary>
      <returns>The canonical lexical representation of this <see cref="T:XmlPrime.GMonthDay"/>.</returns>
    </member>
    <member name="M:XmlPrime.GMonthDay.Equals(XmlPrime.GMonthDay)">
      <summary>
            Indicates whether this instance is equal to another <see cref="T:XmlPrime.GMonthDay"/>.
            </summary>
      <param name="other">A <see cref="T:XmlPrime.GMonthDay"/> to compare with this object.</param>
      <returns>
        <see langword="true"/> if <paramref name="other"/> equals the value of this instance; otherwise, <see langword="false"/>.
            </returns>
      <remarks>
        <para>
            Two <see cref="T:XmlPrime.GMonthDay"/> values are considered equal if they have they have equal values for their
            <see cref="P:XmlPrime.GMonthDay.Month"/>, <see cref="P:XmlPrime.GMonthDay.Day"/> and <see cref="P:XmlPrime.GMonthDay.TimeZone"/> properties. 
            </para>
        <para>Consider using <see cref="M:XmlPrime.GMonthDay.Equals(XmlPrime.GMonthDay,XmlPrime.GMonthDay,XmlPrime.TimeZone)"/> to compare <see cref="T:XmlPrime.GMonthDay"/> values with differing
            <see cref="P:XmlPrime.GMonthDay.TimeZone"/> properties.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.GMonthDay.op_Equality(XmlPrime.GMonthDay,XmlPrime.GMonthDay)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.GMonthDay"/> is equal to another specified <see cref="T:XmlPrime.GMonthDay"/>.
            </summary>
      <param name="monthDay1">The first <see cref="T:XmlPrime.GMonthDay"/> to compare.</param>
      <param name="monthDay2">The second <see cref="T:XmlPrime.GMonthDay"/> to compare.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.GMonthDay"/> values are equal, <see langword="false"/> otherwise.</returns>
      <remarks>
        <para>
            Two <see cref="T:XmlPrime.GMonthDay"/> values are considered equal if they have they have equal values for their
            <see cref="P:XmlPrime.GMonthDay.Month"/>, <see cref="P:XmlPrime.GMonthDay.Day"/> and <see cref="P:XmlPrime.GMonthDay.TimeZone"/> properties. 
            </para>
        <para>Consider using <see cref="M:XmlPrime.GMonthDay.Equals(XmlPrime.GMonthDay,XmlPrime.GMonthDay,XmlPrime.TimeZone)"/> to compare <see cref="T:XmlPrime.GMonthDay"/> values with differing
            <see cref="P:XmlPrime.GMonthDay.TimeZone"/> properties.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.GMonthDay.op_Inequality(XmlPrime.GMonthDay,XmlPrime.GMonthDay)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.GMonthDay"/> is not equal to another specified <see cref="T:XmlPrime.GMonthDay"/>.
            </summary>
      <param name="monthDay1">The first <see cref="T:XmlPrime.GMonthDay"/> to compare.</param>
      <param name="monthDay2">The second <see cref="T:XmlPrime.GMonthDay"/> to compare.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.GMonthDay"/> values are not equal, <see langword="false"/> otherwise.</returns>
      <remarks>
        <para>
            Two <see cref="T:XmlPrime.GMonthDay"/> values are considered equal if they have they have equal values for their
            <see cref="P:XmlPrime.GMonthDay.Month"/>, <see cref="P:XmlPrime.GMonthDay.Day"/> and <see cref="P:XmlPrime.GMonthDay.TimeZone"/> properties. 
            </para>
        <para>Consider using <see cref="M:XmlPrime.GMonthDay.Equals(XmlPrime.GMonthDay,XmlPrime.GMonthDay,XmlPrime.TimeZone)"/> to compare <see cref="T:XmlPrime.GMonthDay"/> values with differing
            <see cref="P:XmlPrime.GMonthDay.TimeZone"/> properties.</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.GMonthDay.Day">
      <summary>
            Gets the day of the month.
            </summary>
      <value>The day component of this <see cref="T:XmlPrime.GMonthDay"/>. The values range from 1 to 31 inclusive.</value>
    </member>
    <member name="P:XmlPrime.GMonthDay.Month">
      <summary>
            Gets the month of the year.
            </summary>
      <value>The month component of this <see cref="T:XmlPrime.GMonthDay"/>. The values range from 1 to 12 inclusive.</value>
    </member>
    <member name="P:XmlPrime.GMonthDay.TimeZone">
      <summary>
            Gets the optional time zone component of this <see cref="T:XmlPrime.GMonthDay"/>.
            </summary>
      <value>The optional time zone component of this <see cref="T:XmlPrime.GMonthDay"/>.</value>
    </member>
    <member name="T:XmlPrime.GYear">
      <summary>
            Represents a Gregorian year.  The corresponding XML Schema type is <c>xs:gYear</c>.
            </summary>
      <remarks>
        <para>A <see cref="T:XmlPrime.GYear"/> represents a Gregorian calendar year.</para>
        <para>Note that the year 1 B.C. is represented by -1, and so 0 is not a valid year.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xmlschema-2/#gYear">[XML Schema Part 2: Datatypes Second Edition] 3.2.11 gYear</seealso>
    </member>
    <member name="F:XmlPrime.GYear.MaxYear">
      <summary>
            The maximum year representable in a <see cref="T:XmlPrime.GYear"/>.
            </summary>
      <value>
            The <see cref="T:System.Int64"/> value <c>25252734927766555</c>.
            </value>
      <remarks>
        <para>
            This value corresponds to the year component in <see cref="F:XmlPrime.DateWithZone.MaxValue"/>.
            </para>
      </remarks>
    </member>
    <member name="F:XmlPrime.GYear.MinYear">
      <summary>
            The maximum year representable in a <see cref="T:XmlPrime.GYear"/>.
            </summary>
      <value>
            The <see cref="T:System.Int64"/> value <c>-25252734927766555</c>.
            </value>
      <remarks>
        <para>
            This value corresponds to the year component in <see cref="F:XmlPrime.DateWithZone.MinValue"/>.
            </para>
      </remarks>
    </member>
    <member name="F:XmlPrime.GYear.Invalid">
      <summary>
            The invalid <see cref="T:XmlPrime.GYear"/> value.
            </summary>
    </member>
    <member name="M:XmlPrime.GYear.Equals(XmlPrime.GYear,XmlPrime.GYear,XmlPrime.TimeZone)">
      <overloads>Determines whether two <see cref="T:XmlPrime.GYear"/> instances have the same value.</overloads>
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.GYear"/> is equal to another specified <see cref="T:XmlPrime.GYear"/>
            given the supplied implicit time zone.
            </summary>
      <param name="year1">The first <see cref="T:XmlPrime.GYear"/> to compare.</param>
      <param name="year2">The second <see cref="T:XmlPrime.GYear"/> to compare.</param>
      <param name="implicitTimeZone">The <see cref="P:XmlPrime.GYear.TimeZone"/> that is used in the case of a <see cref="T:XmlPrime.GYear"/> with no time zone.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.GYear"/> values are equal; otherwise <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.GYear.Parse(System.String)">
      <summary>
            Converts the lexical representation of an <c>xs:gYear</c> to its <see cref="T:XmlPrime.GYear"/> equivalent. 
            </summary>
      <param name="value">The lexical representation of the <c>xs:gYear</c> to convert.</param>
      <returns>The <see cref="T:XmlPrime.GYear"/> value equivalent to the <c>xs:gYear</c> represented by <paramref name="value"/>.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value"/> is not a valid lexical representation of an <c>xs:gYear</c>.</exception>
      <exception cref="T:System.OverflowException">The year is outside the range <see cref="F:XmlPrime.GYear.MinYear"/> to <see cref="F:XmlPrime.GYear.MaxYear"/></exception>
    </member>
    <member name="M:XmlPrime.GYear.TryParse(System.String,XmlPrime.GYear@)">
      <summary>
            Converts a lexical representation of an <c>xs:gYear</c> to its <see cref="T:XmlPrime.GYear"/> equivalent. 
            A return value indicates whether the conversion succeeded or failed.
            </summary>
      <param name="value">The lexical representation of an <c>xs:gYear</c> to convert.</param>
      <param name="result">When this method returns, contains the <see cref="T:XmlPrime.GYear"/> value equivalent to
            the <c>xs:gYear</c> represented by <paramref name="value"/> if parsing succeeded.  Otherwise the value is undefined.</param>
      <returns>
        <see langword="true"/> if the conversion succeeded; otherwise <see langword="false"/>.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.GYear.#ctor(System.Int64,System.Nullable{XmlPrime.TimeZone})">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.GYear"/> structure with the specified calendar year and 
            optional time zone.
            </summary>
      <param name="year">The calendar year.</param>
      <param name="timeZone">The optional time zone.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year"/> is outside the range <see cref="F:XmlPrime.GYear.MinYear"/> to <see cref="F:XmlPrime.GYear.MaxYear"/> or
            is zero.
            </exception>
    </member>
    <member name="M:XmlPrime.GYear.#ctor(System.Int64)">
      <overloads>Initializes a new instance of the <see cref="T:XmlPrime.GYear"/> structure.</overloads>
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.GYear"/> structure with the specified calendar year, but 
            without a time zone.
            </summary>
      <param name="year">The calendar year.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year"/> is outside the range <see cref="F:XmlPrime.GYear.MinYear"/> to <see cref="F:XmlPrime.GYear.MaxYear"/> or
            is zero.
            </exception>
    </member>
    <member name="M:XmlPrime.GYear.Equals(System.Object)">
      <summary>
            Determines whether this instance is equal to a specified object.
            </summary>
      <param name="obj">An object to compare to this instance.</param>
      <returns>
        <see langword="true"/> if <paramref name="obj"/> is an instance of <see cref="T:XmlPrime.GYear"/>
            and equals the value of this instance; otherwise <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.GYear.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
    </member>
    <member name="M:XmlPrime.GYear.ToString">
      <summary>
            Returns the canonical lexical representation of this <see cref="T:XmlPrime.GYear"/>.
            </summary>
      <returns>The canonical lexical representation of this <see cref="T:XmlPrime.GYear"/>.</returns>
    </member>
    <member name="M:XmlPrime.GYear.Equals(XmlPrime.GYear)">
      <summary>
            Determines whether this instance is equal to another <see cref="T:XmlPrime.GYear"/>.
            </summary>
      <param name="other">A <see cref="T:XmlPrime.GYear"/> to compare with this object.</param>
      <returns>
        <see langword="true"/> if <paramref name="other"/> equals the value of this instance; otherwise, <see langword="false"/>.
            </returns>
      <remarks>
        <para>
            Two <see cref="T:XmlPrime.GYear"/> values are considered equal if they have they have equal values for their
            <see cref="P:XmlPrime.GYear.Year"/> and <see cref="P:XmlPrime.GYear.TimeZone"/> properties. 
            </para>
        <para>Consider using <see cref="M:XmlPrime.GYear.Equals(XmlPrime.GYear,XmlPrime.GYear,XmlPrime.TimeZone)"/> to compare <see cref="T:XmlPrime.GYear"/> values with differing
            <see cref="P:XmlPrime.GYear.TimeZone"/> properties.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.GYear.op_Equality(XmlPrime.GYear,XmlPrime.GYear)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.GYear"/> is equal to another specified <see cref="T:XmlPrime.GYear"/>.
            </summary>
      <param name="year1">The first <see cref="T:XmlPrime.GYear"/> to compare.</param>
      <param name="year2">The second <see cref="T:XmlPrime.GYear"/> to compare.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.GYear"/> values are equal, <see langword="false"/> otherwise.</returns>
      <remarks>
        <para>
            Two <see cref="T:XmlPrime.GYear"/> values are considered equal if they have they have equal values for their
            <see cref="P:XmlPrime.GYear.Year"/> and <see cref="P:XmlPrime.GYear.TimeZone"/> properties. 
            </para>
        <para>Consider using <see cref="M:XmlPrime.GYear.Equals(XmlPrime.GYear,XmlPrime.GYear,XmlPrime.TimeZone)"/> to compare <see cref="T:XmlPrime.GYear"/> values with differing
            <see cref="P:XmlPrime.GYear.TimeZone"/> properties.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.GYear.op_Inequality(XmlPrime.GYear,XmlPrime.GYear)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.GYear"/> is not equal to another specified <see cref="T:XmlPrime.GYear"/>.
            </summary>
      <param name="year1">The first <see cref="T:XmlPrime.GYear"/> to compare.</param>
      <param name="year2">The second <see cref="T:XmlPrime.GYear"/> to compare.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.GYear"/> values are not equal, <see langword="false"/> otherwise.</returns>
      <remarks>
        <para>
            Two <see cref="T:XmlPrime.GYear"/> values are considered equal if they have they have equal values for their
            <see cref="P:XmlPrime.GYear.Year"/> and <see cref="P:XmlPrime.GYear.TimeZone"/> properties. 
            </para>
        <para>Consider using <see cref="M:XmlPrime.GYear.Equals(XmlPrime.GYear,XmlPrime.GYear,XmlPrime.TimeZone)"/> to compare <see cref="T:XmlPrime.GYear"/> values with differing
            <see cref="P:XmlPrime.GYear.TimeZone"/> properties.</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.GYear.TimeZone">
      <summary>
            Gets the optional time zone component of this <see cref="T:XmlPrime.GYear"/>.
            </summary>
      <value>The optional time zone component of this <see cref="T:XmlPrime.GYear"/>.</value>
    </member>
    <member name="P:XmlPrime.GYear.Year">
      <summary>
            Gets the calendar year.
            </summary>
      <value>The year component of this <see cref="T:XmlPrime.GYear"/>. The values range from <see cref="F:XmlPrime.GYear.MinYear"/> to <see cref="F:XmlPrime.GYear.MaxYear"/> inclusive and will not be 0.</value>
    </member>
    <member name="T:XmlPrime.GYearMonth">
      <summary>
            Represents a Gregorian year and month.  The corresponding XML Schema type is <c>xs:gYearMonth</c>.
            </summary>
      <remarks>
        <para>A <see cref="T:XmlPrime.GYearMonth"/> represents a Gregorian calendar year and month.</para>
        <para>Note that the year 1 B.C. is represented by -1, and so 0 is not a valid year.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xmlschema-2/#gYearMonth">[XML Schema Part 2: Datatypes Second Edition] 3.2.10 gYearMonth</seealso>
    </member>
    <member name="M:XmlPrime.GYearMonth.Equals(XmlPrime.GYearMonth,XmlPrime.GYearMonth,XmlPrime.TimeZone)">
      <overloads>Determines whether two <see cref="T:XmlPrime.GYearMonth"/> instances have the same value.</overloads>
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.GYearMonth"/> is equal to another specified <see cref="T:XmlPrime.GYearMonth"/>
            given the supplied implicit time zone.
            </summary>
      <param name="yearMonth1">The first <see cref="T:XmlPrime.GYearMonth"/> to compare.</param>
      <param name="yearMonth2">The second <see cref="T:XmlPrime.GYearMonth"/> to compare.</param>
      <param name="implicitTimeZone">The <see cref="P:XmlPrime.GYearMonth.TimeZone"/> that is used in the case of a <see cref="T:XmlPrime.GYearMonth"/> with no time zone.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.GYearMonth"/> values are equal; otherwise <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.GYearMonth.Parse(System.String)">
      <summary>
            Converts the lexical representation of an <c>xs:gYearMonth</c> to its <see cref="T:XmlPrime.GYearMonth"/> equivalent. 
            </summary>
      <param name="value">The lexical representation of the <c>xs:gYearMonth</c> to convert.</param>
      <returns>The <see cref="T:XmlPrime.GYearMonth"/> value equivalent to the <c>xs:gYearMonth</c> represented by <paramref name="value"/>.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value"/> is not a valid lexical representation of an <c>xs:gYearMonth</c>.</exception>
      <exception cref="T:System.OverflowException">The year is outside the range <see cref="F:XmlPrime.GYear.MinYear"/> to <see cref="F:XmlPrime.GYear.MaxYear"/></exception>
    </member>
    <member name="M:XmlPrime.GYearMonth.TryParse(System.String,XmlPrime.GYearMonth@)">
      <summary>
            Converts a lexical representation of an <c>xs:gYearMonth</c> to its <see cref="T:XmlPrime.GYearMonth"/> equivalent. 
            A return value indicates whether the conversion succeeded or failed.
            </summary>
      <param name="value">The lexical representation of an <c>xs:gYearMonth</c> to convert.</param>
      <param name="result">When this method returns, contains the <see cref="T:XmlPrime.GYearMonth"/> value equivalent to
            the <c>xs:gYearMonth</c> represented by <paramref name="value"/> if parsing succeeded.  Otherwise the value is undefined.</param>
      <returns>
        <see langword="true"/> if the conversion succeeded; otherwise <see langword="false"/>.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.GYearMonth.#ctor(System.Int64,System.Int32,System.Nullable{XmlPrime.TimeZone})">
      <overloads>Initializes a new instance of the <see cref="T:XmlPrime.GYearMonth"/> structure.</overloads>
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.GYearMonth"/> structure with the specified year, month and 
            optional time zone.
            </summary>
      <param name="year">The calendar year.</param>
      <param name="month">The month of the year.</param>
      <param name="timeZone">The optional time zone.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="month"/> is outside the range 1 to 12, or <paramref name="year"/> is outside the range 
            <see cref="F:XmlPrime.GYear.MinYear"/> to <see cref="F:XmlPrime.GYear.MaxYear"/> or is zero.
            </exception>
    </member>
    <member name="M:XmlPrime.GYearMonth.#ctor(System.Int64,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.GYearMonth"/> structure with the specified year and month, but
            without a specified time zone.
            </summary>
      <param name="year">The calendar year.</param>
      <param name="month">The month of the year.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="month"/> is outside the range 1 to 12, or <paramref name="year"/> is outside the range 
            <see cref="F:XmlPrime.GYear.MinYear"/> to <see cref="F:XmlPrime.GYear.MaxYear"/> or is zero.
            </exception>
    </member>
    <member name="M:XmlPrime.GYearMonth.Equals(System.Object)">
      <summary>
            Determines whether this instance is equal to a specified object.
            </summary>
      <param name="obj">An object to compare to this instance.</param>
      <returns>
        <see langword="true"/> if <paramref name="obj"/> is an instance of <see cref="T:XmlPrime.GYearMonth"/>
            and equals the value of this instance; otherwise <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.GYearMonth.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
    </member>
    <member name="M:XmlPrime.GYearMonth.ToString">
      <summary>
            Returns the canonical lexical representation of this <see cref="T:XmlPrime.GYearMonth"/></summary>
      <returns>The canonical lexical representation of this <see cref="T:XmlPrime.GYearMonth"/></returns>
    </member>
    <member name="M:XmlPrime.GYearMonth.Equals(XmlPrime.GYearMonth)">
      <summary>
            Indicates whether this instance is equal to another <see cref="T:XmlPrime.GYearMonth"/>.
            </summary>
      <param name="other">A <see cref="T:XmlPrime.GYearMonth"/> to compare with this object.</param>
      <returns>
        <see langword="true"/> if <paramref name="other"/> equals the value of this instance; otherwise, <see langword="false"/>.
            </returns>
      <remarks>
        <para>
            Two <see cref="T:XmlPrime.GYearMonth"/> values are considered equal if they have they have equal values for their
            <see cref="P:XmlPrime.GYearMonth.Year"/>, <see cref="P:XmlPrime.GYearMonth.Month"/> and <see cref="P:XmlPrime.GYearMonth.TimeZone"/> properties. 
            </para>
        <para>Consider using <see cref="M:XmlPrime.GYearMonth.Equals(XmlPrime.GYearMonth,XmlPrime.GYearMonth,XmlPrime.TimeZone)"/> to compare <see cref="T:XmlPrime.GYearMonth"/> values with differing
            <see cref="P:XmlPrime.GYearMonth.TimeZone"/> properties.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.GYearMonth.op_Equality(XmlPrime.GYearMonth,XmlPrime.GYearMonth)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.GYearMonth"/> is equal to another specified <see cref="T:XmlPrime.GYearMonth"/>.
            </summary>
      <param name="yearMonth1">The first <see cref="T:XmlPrime.GYearMonth"/> to compare.</param>
      <param name="yearMonth2">The second <see cref="T:XmlPrime.GYearMonth"/> to compare.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.GYearMonth"/> values are equal, <see langword="false"/> otherwise.</returns>
      <remarks>
        <para>
            Two <see cref="T:XmlPrime.GYearMonth"/> values are considered equal if they have they have equal values for their
            <see cref="P:XmlPrime.GYearMonth.Year"/>, <see cref="P:XmlPrime.GYearMonth.Month"/> and <see cref="P:XmlPrime.GYearMonth.TimeZone"/> properties. 
            </para>
        <para>Consider using <see cref="M:XmlPrime.GYearMonth.Equals(XmlPrime.GYearMonth,XmlPrime.GYearMonth,XmlPrime.TimeZone)"/> to compare <see cref="T:XmlPrime.GYearMonth"/> values with differing
            <see cref="P:XmlPrime.GYearMonth.TimeZone"/> properties.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.GYearMonth.op_Inequality(XmlPrime.GYearMonth,XmlPrime.GYearMonth)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.GYearMonth"/> is not equal to another specified <see cref="T:XmlPrime.GYearMonth"/>.
            </summary>
      <param name="yearMonth1">The first <see cref="T:XmlPrime.GYearMonth"/> to compare.</param>
      <param name="yearMonth2">The second <see cref="T:XmlPrime.GYearMonth"/> to compare.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.GYearMonth"/> values are not equal, <see langword="false"/> otherwise.</returns>
      <remarks>
        <para>
            Two <see cref="T:XmlPrime.GYearMonth"/> values are considered equal if they have they have equal values for their
            <see cref="P:XmlPrime.GYearMonth.Year"/>, <see cref="P:XmlPrime.GYearMonth.Month"/> and <see cref="P:XmlPrime.GYearMonth.TimeZone"/> properties. 
            </para>
        <para>Consider using <see cref="M:XmlPrime.GYearMonth.Equals(XmlPrime.GYearMonth,XmlPrime.GYearMonth,XmlPrime.TimeZone)"/> to compare <see cref="T:XmlPrime.GYearMonth"/> values with differing
            <see cref="P:XmlPrime.GYearMonth.TimeZone"/> properties.</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.GYearMonth.Month">
      <summary>
            Gets the month of the year.
            </summary>
      <value>The month component of this <see cref="T:XmlPrime.GYearMonth"/>. The values range from 1 to 12 inclusive.</value>
    </member>
    <member name="P:XmlPrime.GYearMonth.TimeZone">
      <summary>
            Gets the optional time zone component of this <see cref="T:XmlPrime.GYearMonth"/>.
            </summary>
      <value>The optional time zone component of this <see cref="T:XmlPrime.GYearMonth"/>.</value>
    </member>
    <member name="P:XmlPrime.GYearMonth.Year">
      <summary>
            Gets the calendar year.
            </summary>
      <value>The year component of this <see cref="T:XmlPrime.GYearMonth"/>. The values range from <see cref="F:XmlPrime.GYear.MinYear"/> to <see cref="F:XmlPrime.GYear.MaxYear"/> inclusive and will not be 0.</value>
    </member>
    <member name="T:XmlPrime.QName">
      <summary>
            Represents an XML qualified name consisting of a prefix, local name and namespace URI.
            The corresponding XML Schema type is <c>xs:QName</c>.
            </summary>
      <seealso href="http://www.w3.org/TR/1999/REC-xml-names-19990114/#ns-qualnames">[Namespaces in XML] 3. Qualified Names</seealso>
      <seealso href="http://www.w3.org/TR/xmlschema-2/#QName">[XML Schema Part 2: Datatypes Second Edition] 3.2.18 QName</seealso>
    </member>
    <member name="M:XmlPrime.QName.Split(System.String,System.String@,System.String@)">
      <summary>
            Splits the specified lexical representation of an <c>xs:QName</c> into a prefix and local name.
            </summary>
      <param name="qualifiedName">The lexical representation of an <c>xs:QName</c>.</param>
      <param name="prefix">
            When this method returns, contains the prefix of the qualified name, or <see langword="null"/> if the 
            qualified name has no prefix.
            </param>
      <param name="localName">When this method returns, contains the local part of the qualified name.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="qualifiedName"/> is <see langword="null"/></exception>
      <remarks>
            This method does not check that <paramref name="qualifiedName"/> is a valid lexical representation of an 
            <c>xs:qName</c>.
            </remarks>
    </member>
    <member name="M:XmlPrime.QName.Split(System.String,System.String@,System.String@,System.String@)">
      <summary>
            Splits the specified lexical representation of an <c>xs:QName</c> into a prefix and local name.
            </summary>
      <param name="qualifiedName">The lexical representation of an <c>xs:QName</c>.</param>
      <param name="ns">The namespace.</param>
      <param name="prefix">When this method returns, contains the prefix of the qualified name, or <see langword="null"/> if the
            qualified name has no prefix.</param>
      <param name="localName">When this method returns, contains the local part of the qualified name.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="qualifiedName"/> is <see langword="null"/></exception>
      <remarks>
            This method does not check that <paramref name="qualifiedName"/> is a valid lexical representation of an
            <c>xs:qName</c>.
            </remarks>
    </member>
    <member name="M:XmlPrime.QName.#ctor(System.Xml.XmlQualifiedName)">
      <overloads>Initializes a new instance of the <see cref="T:XmlPrime.QName"/> structure.</overloads>
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.QName"/> structure from an <see cref="T:System.Xml.XmlQualifiedName"/>
            instance.
            </summary>
      <param name="name">The local name and namespace of the constructed <see cref="T:XmlPrime.QName"/> value.</param>
      <remarks>The prefix of the constructed <see cref="T:XmlPrime.QName"/> value is set to <see cref="F:System.String.Empty"/>.</remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name"/>  is <see langword="null"/></exception>
    </member>
    <member name="M:XmlPrime.QName.#ctor(System.String,System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.QName"/> structure
            with the specified prefix, local name and namespace URI.
            </summary>
      <param name="prefix">The prefix of the qualified name.</param>
      <param name="localName">The local part of the qualified name.</param>
      <param name="ns">
            The namespace URI of the qualified name.  This can be set to <see langword="null"/> for an unresolved
            <see cref="T:XmlPrime.QName"/></param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix"/> or <paramref name="localName"/> is <see langword="null"/></exception>
    </member>
    <member name="M:XmlPrime.QName.Matches(XmlPrime.QName,XmlPrime.QName)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.QName"/> matches another specified <see cref="T:XmlPrime.QName"/>.
            </summary>
      <param name="value1">The first <see cref="T:XmlPrime.QName"/> to compare.</param>
      <param name="value2">The second <see cref="T:XmlPrime.QName"/> to compare.</param>
      <returns>
        <see langword="true"/> if the <see cref="P:XmlPrime.QName.LocalName"/> of <paramref name="value1"/> equals that of <paramref name="value2"/>
            and the <see cref="P:XmlPrime.QName.Namespace"/> of <paramref name="value1"/> equals that of <paramref name="value2"/> using string equality;
            otherwise <see langword="false"/>.
            otherwise.
            </returns>
      <remarks>
            Two <see cref="T:XmlPrime.QName"/> values are considered to match when they have the same local name and namespace URI.
            </remarks>
    </member>
    <member name="M:XmlPrime.QName.Equals(System.Object)">
      <overloads>
            Determines whether two <see cref="T:XmlPrime.QName"/> instances have the same value.
            </overloads>
      <summary>
            Determines whether this instance is equal to a specified object.
            </summary>
      <param name="obj">An object to compare to this instance.</param>
      <returns>
        <see langword="true"/> if <paramref name="obj"/> is an instance of <see cref="T:XmlPrime.QName"/>
            and equals the value of this instance; otherwise <see langword="false"/>.</returns>
      <remarks>
            Two <see cref="T:XmlPrime.QName"/> values are considered equal when they have the same local name, prefix and 
            namespace URI.
            </remarks>
    </member>
    <member name="M:XmlPrime.QName.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
    </member>
    <member name="M:XmlPrime.QName.ToString">
      <summary>
            Returns the canonical lexical representation of this <see cref="T:XmlPrime.QName"/>.
            </summary>
      <returns>The canonical lexical representation of this <see cref="T:XmlPrime.QName"/>.</returns>
    </member>
    <member name="M:XmlPrime.QName.Equals(XmlPrime.QName)">
      <summary>
            Indicates whether this instance is equal to another <see cref="T:XmlPrime.QName"/>.
            </summary>
      <param name="other">A <see cref="T:XmlPrime.QName"/> to compare with this object.</param>
      <returns>
        <see langword="true"/> if <paramref name="other"/> equals the value of this instance; otherwise, <see langword="false"/>.
            </returns>
      <remarks>
            Two <see cref="T:XmlPrime.QName"/> values are considered equal when they have the same local name, prefix and 
            namespace URI.
            </remarks>
    </member>
    <member name="M:XmlPrime.QName.op_Equality(XmlPrime.QName,XmlPrime.QName)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.QName"/> is equal to another specified <see cref="T:XmlPrime.QName"/>.
            </summary>
      <param name="value1">The first <see cref="T:XmlPrime.QName"/> to compare.</param>
      <param name="value2">The second <see cref="T:XmlPrime.QName"/> to compare.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.QName"/> values are equal, <see langword="false"/> otherwise.
            </returns>
      <remarks>
            Two <see cref="T:XmlPrime.QName"/> values are considered equal when they have the same local name, prefix and 
            namespace URI.
            </remarks>
    </member>
    <member name="M:XmlPrime.QName.op_Inequality(XmlPrime.QName,XmlPrime.QName)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.QName"/> is not equal to another specified <see cref="T:XmlPrime.QName"/>.
            </summary>
      <param name="value1">The first <see cref="T:XmlPrime.QName"/> to compare.</param>
      <param name="value2">The second <see cref="T:XmlPrime.QName"/> to compare.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.QName"/> values are not equal, <see langword="false"/> 
            otherwise.
            </returns>
      <remarks>
            Two <see cref="T:XmlPrime.QName"/> values are considered equal when they have the same local name, prefix and 
            namespace URI.
            </remarks>
    </member>
    <member name="P:XmlPrime.QName.LocalName">
      <summary>
            Gets the local part of the qualified name.
            </summary>
      <value>A <see cref="T:System.String"/> representing the local part of the qualified name.</value>
    </member>
    <member name="P:XmlPrime.QName.Namespace">
      <summary>
            Gets the namespace URI of the qualified name.
            </summary>
      <value>A <see cref="T:System.String"/> representing the namespace URI of the qualified name,
             or <see langword="null"/> if the namespace URI is not specified.</value>
    </member>
    <member name="P:XmlPrime.QName.Prefix">
      <summary>
            Gets the prefix of the qualified name.
            </summary>
      <value>A <see cref="T:System.String"/> representing the prefix of the qualified name,
             or <see cref="F:System.String.Empty"/> if the prefix is not specified.</value>
    </member>
    <member name="T:XmlPrime.TimeWithZone">
      <summary>
            Represents an instant of time that recurs every day.  The corresponding XML Schema type is <c>xs:time</c>.
            </summary>
      <remarks/>
      <threadsafety static="true" instance="true"/>
      <seealso href="http://www.w3.org/TR/xmlschema-2/#time">[XML Schema Part 2: Datatypes Second Edition] 3.2.8 time</seealso>
    </member>
    <member name="M:XmlPrime.TimeWithZone.Add(XmlPrime.TimeWithZone,XmlPrime.DayTimeDuration)">
      <overloads>
            Adds a <see cref="T:XmlPrime.DayTimeDuration"/> to a <see cref="T:XmlPrime.TimeWithZone"/>.
            </overloads>
      <summary>
            Adds a <see cref="T:XmlPrime.DayTimeDuration"/> to a <see cref="T:XmlPrime.TimeWithZone"/>.
            </summary>
      <param name="time">The <see cref="T:XmlPrime.TimeWithZone"/> to add to.</param>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> to add.</param>
      <returns>A <see cref="T:XmlPrime.TimeWithZone"/> that is the the result of adding <paramref name="duration"/> to <paramref name="time"/>.</returns>
    </member>
    <member name="M:XmlPrime.TimeWithZone.Add(XmlPrime.DayTimeDuration,XmlPrime.TimeWithZone)">
      <summary>
            Adds a <see cref="T:XmlPrime.TimeWithZone"/> to a <see cref="T:XmlPrime.DayTimeDuration"/>.
            </summary>
      <param name="time">The <see cref="T:XmlPrime.TimeWithZone"/> to add to.</param>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> to add.</param>
      <returns>A <see cref="T:XmlPrime.TimeWithZone"/> that is the the result of adding <paramref name="duration"/> to <paramref name="time"/>.</returns>
    </member>
    <member name="M:XmlPrime.TimeWithZone.Compare(XmlPrime.TimeWithZone,XmlPrime.TimeWithZone,XmlPrime.TimeZone)">
      <summary>
            Compares a <see cref="T:XmlPrime.TimeWithZone"/> with another <see cref="T:XmlPrime.TimeWithZone"/>.
            </summary>
      <param name="time1">The first <see cref="T:XmlPrime.TimeWithZone"/> to compare.</param>
      <param name="time2">The second <see cref="T:XmlPrime.TimeWithZone"/> to compare.</param>
      <param name="implicitTimeZone">The time zone to use if either <see cref="T:XmlPrime.TimeWithZone"/> value does not have a time zone.</param>
      <returns>
        <para>A signed number that indicates the relative order of <paramref name="time1"/> and <paramref name="time2"/>.
            The return value has the following meanings.</para>
        <list type="bullet">
          <item>
            <description>Less than zero indicates that <paramref name="time1"/> is less than <paramref name="time2"/>.</description>
          </item>
          <item>
            <description>Zero indicates that <paramref name="time1"/> is equal to <paramref name="time2"/>.</description>
          </item>
          <item>
            <description>Greater than zero  indicates that <paramref name="time1"/> is greater than <paramref name="time2"/>.</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:XmlPrime.TimeWithZone.Equals(XmlPrime.TimeWithZone,XmlPrime.TimeWithZone,XmlPrime.TimeZone)">
      <overloads>Determines whether two <see cref="T:XmlPrime.TimeWithZone"/> instances have the same value.</overloads>
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.TimeWithZone"/> is equal to another specified <see cref="T:XmlPrime.TimeWithZone"/>
            given the supplied implicit time zone.
            </summary>
      <param name="time1">The first <see cref="T:XmlPrime.TimeWithZone"/> to compare.</param>
      <param name="time2">The second <see cref="T:XmlPrime.TimeWithZone"/> to compare.</param>
      <param name="implicitTimeZone">The <see cref="P:XmlPrime.TimeWithZone.TimeZone"/> that is used in the case of a <see cref="T:XmlPrime.TimeWithZone"/> with no time zone.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.TimeWithZone"/> values are equal; otherwise <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.TimeWithZone.Parse(System.String)">
      <summary>
            Converts a lexical representation of an <c>xs:time</c> to its <see cref="T:XmlPrime.TimeWithZone"/> equivalent. 
            </summary>
      <param name="value">The lexical representation of an <c>xs:time</c> to convert.</param>
      <returns>The <see cref="T:XmlPrime.TimeWithZone"/> equivalent to the <c>xs:time</c> represented by <paramref name="value"/>.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value"/> is not a valid lexical value of an <c>xs:time</c>.</exception>
      <see href="http://www.w3.org/TR/xmlschema-2/#time-lexical-representation">
            [XML Schema Part 2: Datatypes Second Edition] 3.2.8.1 Lexical representation.
            </see>
    </member>
    <member name="M:XmlPrime.TimeWithZone.Subtract(XmlPrime.TimeWithZone,XmlPrime.TimeWithZone,XmlPrime.TimeZone)">
      <overloads>
            Subtracts a <see cref="T:XmlPrime.TimeWithZone"/> or duration value from a <see cref="T:XmlPrime.TimeWithZone"/>.
            </overloads>
      <summary>
            Subtracts two specified <see cref="T:XmlPrime.TimeWithZone"/> values. 
            </summary>
      <param name="time1">The <see cref="T:XmlPrime.TimeWithZone"/> to subtract from.</param>
      <param name="time2">The <see cref="T:XmlPrime.TimeWithZone"/> to subtract.</param>
      <param name="implicitTimeZone">The time zone to use if either time does not have a time zone.</param>
      <returns>A <see cref="T:XmlPrime.TimeWithZone"/> that is the result of subtracting of <paramref name="time2"/> from <paramref name="time1"/>.</returns>
    </member>
    <member name="M:XmlPrime.TimeWithZone.Subtract(XmlPrime.TimeWithZone,XmlPrime.DayTimeDuration)">
      <summary>
            Subtracts a <see cref="T:XmlPrime.DayTimeDuration"/> from a <see cref="T:XmlPrime.TimeWithZone"/>.
            </summary>
      <param name="time">The <see cref="T:XmlPrime.TimeWithZone"/> to subtract from.</param>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> to subtract.</param>
      <returns>A <see cref="T:XmlPrime.TimeWithZone"/> that is the result of subtracting of <paramref name="duration"/> from <paramref name="time"/>.</returns>
    </member>
    <member name="M:XmlPrime.TimeWithZone.Subtract(XmlPrime.TimeWithZone,XmlPrime.TimeWithZone)">
      <summary>
            Subtracts a <see cref="T:XmlPrime.TimeWithZone"/> from another <see cref="T:XmlPrime.TimeWithZone"/>.
            </summary>
      <param name="time1">The <see cref="T:XmlPrime.TimeWithZone"/> to subtract from.</param>
      <param name="time2">The <see cref="T:XmlPrime.TimeWithZone"/> to subtract.</param>
      <returns>The duration from <paramref name="time2"/> to <paramref name="time1"/>.</returns>
      <exception cref="T:System.OverflowException">An overflow error occurred.</exception>
      <exception cref="T:System.ArgumentException">
            Exactly one of <paramref name="time1"/> and <paramref name="time2"/> has a time zone.
            </exception>
    </member>
    <member name="M:XmlPrime.TimeWithZone.TryParse(System.String,XmlPrime.TimeWithZone@)">
      <summary>
            Converts a lexical representation of an <c>xs:time</c> to its <see cref="T:XmlPrime.TimeWithZone"/> equivalent. 
            A return value indicates whether the conversion succeeded or failed. 
            </summary>
      <param name="text">The string representation of an <c>xs:time</c> to convert.</param>
      <param name="result">When this method returns, contains the <see cref="T:XmlPrime.TimeWithZone"/> value equivalent to
            the <c>xs:time</c> represented by <paramref name="text"/> if the conversion succeeded, or midnight (<c>00:00:00</c>)
            if the conversion failed.
            </param>
      <returns>
        <see langword="true"/> if the conversion succeeded; otherwise <see langword="false"/>.</returns>
      <see href="http://www.w3.org/TR/xmlschema-2/#time-lexical-representation">
            [XML Schema Part 2: Datatypes Second Edition] 3.2.8.1 Lexical representation.
            </see>
    </member>
    <member name="M:XmlPrime.TimeWithZone.#ctor(System.Decimal,System.Nullable{XmlPrime.TimeZone})">
      <overloads>Initializes a new instance of the <see cref="T:XmlPrime.TimeWithZone"/> structure.</overloads>
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.TimeWithZone"/> structure
            with the specified number of seconds past midnight, in the specified time zone.
            </summary>
      <param name="secondsPastMidnight">The number of (whole and partial) seconds between
            midnight and this time.</param>
      <param name="timeZone">The time zone component.</param>
    </member>
    <member name="M:XmlPrime.TimeWithZone.#ctor(System.Int32,System.Int32,System.Decimal,System.Nullable{XmlPrime.TimeZone})">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.TimeWithZone"/> structure with the specified hour, minute,
            second and time zone components.
            </summary>
      <param name="hour">The hour component.</param>
      <param name="minute">The minute component.</param>
      <param name="second">The second component.</param>
      <param name="timeZone">The time zone (can be <see langword="null"/>).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="minute"/> or <paramref name="second"/> are not between 0 and 59 or <paramref name="hour"/>
            is not between 0 and 23 (24 if <paramref name="minute"/> and <paramref name="second"/> are zero).
            </exception>
    </member>
    <member name="M:XmlPrime.TimeWithZone.Equals(System.Object)">
      <summary>
            Determines whether this instance is equal to a specified object.
            </summary>
      <param name="obj">An object to compare to this instance.</param>
      <returns>
        <see langword="true"/> if <paramref name="obj"/> is an instance of <see cref="T:XmlPrime.TimeWithZone"/>
            and equals the value of this instance; otherwise <see langword="false"/>.</returns>
      <remarks>
        <para>
            Two <see cref="T:XmlPrime.TimeWithZone"/> values are considered equal if they have they have equal
            values for their <see cref="P:XmlPrime.TimeWithZone.SecondsPastMidnight"/> and <see cref="P:XmlPrime.TimeWithZone.TimeZone"/> properties.
            </para>
      </remarks>
    </member>
    <member name="M:XmlPrime.TimeWithZone.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
    </member>
    <member name="M:XmlPrime.TimeWithZone.ToString">
      <overloads>Converts this <see cref="T:XmlPrime.TimeWithZone"/> to a string.</overloads>
      <summary>
            Returns the canonical lexical representation of this <see cref="T:XmlPrime.TimeWithZone"/>.
            </summary>
      <returns>The canonical lexical representation of this <see cref="T:XmlPrime.TimeWithZone"/>.</returns>
    </member>
    <member name="M:XmlPrime.TimeWithZone.AdjustToTimeZone(System.Nullable{XmlPrime.TimeZone})">
      <summary>
            Adjusts a <see cref="T:XmlPrime.TimeWithZone"/> structure to a specific time zone, or to no time zone.
            </summary>
      <param name="timeZone">
            The time zone that this instance should be adjusted to, or <see langword="null"/> if this instance is to be
            adjusted to no time zone.
            </param>
      <returns>
            The same point in time in the provided time zone, or with no time zone if <paramref name="timeZone"/> is
            <see langword="null"/>.
            </returns>
      <remarks>
            This function is analogous to the <c>fn:adjust-time-to-timezone</c> function.
            </remarks>
      <seealso href="http://www.w3.org/TR/xquery-operators/#func-adjust-time-to-timezone">
            [XQuery 1.0 and XPath 2.0 Functions and Operators] 10.7.3 fn:adjust-time-to-timezone
            </seealso>
    </member>
    <member name="M:XmlPrime.TimeWithZone.ToString(System.String,System.Globalization.CultureInfo,System.TimeZoneInfo)">
      <summary>
            Converts the value of the current <see cref="T:XmlPrime.TimeWithZone"/> object to its equivalent string representation
            using the specified format and culture-specific format information.
            </summary>
      <param name="format">A <see cref="T:System.String"/> describing the format.</param>
      <param name="cultureInfo">A <see cref="T:System.Globalization.CultureInfo"/> object that supplies culture-specific formatting information.</param>
      <param name="timeZoneInfo">The time zone information.</param>
      <returns>
            A <see cref="T:System.String"/> representation of this <see cref="T:XmlPrime.TimeWithZone"/>.
            </returns>
      <exception cref="T:System.ArgumentException">The syntax of the picture string in <paramref name="format"/> is invalid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format"/> or <paramref name="cultureInfo"/> is <see langword="null"/></exception>
      <exception cref="T:System.InvalidOperationException">A component specified within <paramref name="format"/> is not available (e.g. time components).</exception>
      <remarks>
            The <paramref name="format"/> must be a valid argument to the XSLT 2.0 <c>format-time</c> function.
            </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#date-picture-string">[XSL Transformations (XSLT) Version 2.0] 16.5.1 The Picture String</seealso>
    </member>
    <member name="M:XmlPrime.TimeWithZone.Equals(XmlPrime.TimeWithZone)">
      <summary>
            Indicates whether this instance is equal to another <see cref="T:XmlPrime.TimeWithZone"/>.
            </summary>
      <param name="other">A <see cref="T:XmlPrime.TimeWithZone"/> to compare with this object.</param>
      <returns>
        <see langword="true"/> if <paramref name="other"/> equals the value of this instance; otherwise, <see langword="false"/>.
            </returns>
      <remarks>
        <para>
            Two <see cref="T:XmlPrime.TimeWithZone"/> values are considered equal if they have they have equal
            values for their <see cref="P:XmlPrime.TimeWithZone.SecondsPastMidnight"/> and <see cref="P:XmlPrime.TimeWithZone.TimeZone"/> properties.
            </para>
        <para>Consider using <see cref="M:XmlPrime.TimeWithZone.Equals(XmlPrime.TimeWithZone,XmlPrime.TimeWithZone,XmlPrime.TimeZone)"/> to compare <see cref="T:XmlPrime.TimeWithZone"/> values with differing
            <see cref="P:XmlPrime.TimeWithZone.TimeZone"/> properties.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.TimeWithZone.op_Addition(XmlPrime.TimeWithZone,XmlPrime.DayTimeDuration)">
      <overloads>Adds a duration to a <see cref="T:XmlPrime.DateWithZone"/>.</overloads>
      <summary>
            Adds a <see cref="T:XmlPrime.DayTimeDuration"/> to a <see cref="T:XmlPrime.TimeWithZone"/>.
            </summary>
      <param name="time">The <see cref="T:XmlPrime.TimeWithZone"/> to add to.</param>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> to add.</param>
      <returns>A <see cref="T:XmlPrime.TimeWithZone"/> that is the sum of <paramref name="time"/> and <paramref name="duration"/>.</returns>
    </member>
    <member name="M:XmlPrime.TimeWithZone.op_Addition(XmlPrime.DayTimeDuration,XmlPrime.TimeWithZone)">
      <summary>
            Adds a <see cref="T:XmlPrime.TimeWithZone"/> to a <see cref="T:XmlPrime.DayTimeDuration"/>.
            </summary>
      <param name="time">The <see cref="T:XmlPrime.TimeWithZone"/> to add to.</param>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> to add.</param>
      <returns>A <see cref="T:XmlPrime.TimeWithZone"/> that is the the result of adding <paramref name="duration"/> to <paramref name="time"/>.</returns>
    </member>
    <member name="M:XmlPrime.TimeWithZone.op_Subtraction(XmlPrime.TimeWithZone,XmlPrime.DayTimeDuration)">
      <overloads>
            Subtracts a <see cref="T:XmlPrime.DateTimeWithZone"/> or duration value from a <see cref="T:XmlPrime.DateTimeWithZone"/>.
            </overloads>
      <summary>
            Subtracts a <see cref="T:XmlPrime.DayTimeDuration"/> from a <see cref="T:XmlPrime.TimeWithZone"/>.
            </summary>
      <param name="time">The <see cref="T:XmlPrime.TimeWithZone"/> to subtract from.</param>
      <param name="duration">The <see cref="T:XmlPrime.DayTimeDuration"/> to subtract.</param>
      <returns>
            The <see cref="T:XmlPrime.TimeWithZone"/> that is the the result of subtracting <paramref name="duration"/>
            from <paramref name="time"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.TimeWithZone.op_Subtraction(XmlPrime.TimeWithZone,XmlPrime.TimeWithZone)">
      <summary>
            Subtracts a <see cref="T:XmlPrime.TimeWithZone"/> from another <see cref="T:XmlPrime.TimeWithZone"/>.
            </summary>
      <param name="time1">The <see cref="T:XmlPrime.TimeWithZone"/> to subtract from.</param>
      <param name="time2">The <see cref="T:XmlPrime.TimeWithZone"/> to subtract.</param>
      <returns>The duration from <paramref name="time2"/> to <paramref name="time1"/>.</returns>
      <exception cref="T:System.ArgumentException">
            Exactly one of <paramref name="time1"/> and <paramref name="time2"/> has a time zone.
            </exception>
    </member>
    <member name="M:XmlPrime.TimeWithZone.op_Equality(XmlPrime.TimeWithZone,XmlPrime.TimeWithZone)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.TimeWithZone"/> is equal to another specified <see cref="T:XmlPrime.TimeWithZone"/>.
            </summary>
      <param name="time1">The first <see cref="T:XmlPrime.TimeWithZone"/> to compare.</param>
      <param name="time2">The second <see cref="T:XmlPrime.TimeWithZone"/> to compare.</param>
      <returns>
        <see langword="true"/> if the <paramref name="time1"/> and <paramref name="time2"/> are equal; otherwise, <see langword="false"/>.</returns>
      <remarks>
        <para>
            Two <see cref="T:XmlPrime.TimeWithZone"/> values are considered equal if they have they have equal
            values for their <see cref="P:XmlPrime.TimeWithZone.SecondsPastMidnight"/> and <see cref="P:XmlPrime.TimeWithZone.TimeZone"/> properties.
            </para>
        <para>Consider using <see cref="M:XmlPrime.TimeWithZone.Equals(XmlPrime.TimeWithZone,XmlPrime.TimeWithZone,XmlPrime.TimeZone)"/> to compare <see cref="T:XmlPrime.TimeWithZone"/> values with differing
            <see cref="P:XmlPrime.TimeWithZone.TimeZone"/> properties.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.TimeWithZone.op_Inequality(XmlPrime.TimeWithZone,XmlPrime.TimeWithZone)">
      <summary>
            Returns a value indicating whether two instances of <see cref="T:XmlPrime.TimeWithZone"/> are not equal.
            </summary>
      <param name="time1">The first <see cref="T:XmlPrime.TimeWithZone"/> to compare.</param>
      <param name="time2">The second <see cref="T:XmlPrime.TimeWithZone"/> to compare.</param>
      <returns>
        <see langword="true"/> if the <paramref name="time1"/> and <paramref name="time2"/> are not equal; otherwise, <see langword="false"/>.</returns>
      <remarks>
        <para>
            Two <see cref="T:XmlPrime.TimeWithZone"/> values are considered equal if they have they have equal
            values for their <see cref="P:XmlPrime.TimeWithZone.SecondsPastMidnight"/> and <see cref="P:XmlPrime.TimeWithZone.TimeZone"/> properties.
            </para>
        <para>Consider using <see cref="M:XmlPrime.TimeWithZone.Equals(XmlPrime.TimeWithZone,XmlPrime.TimeWithZone,XmlPrime.TimeZone)"/> to compare <see cref="T:XmlPrime.TimeWithZone"/> values with differing
            <see cref="P:XmlPrime.TimeWithZone.TimeZone"/> properties.</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.TimeWithZone.Hour">
      <summary>
            Gets the hour component of this <see cref="T:XmlPrime.TimeWithZone"/>.
            </summary>
      <value>An <see cref="T:System.Int32"/> representing the hour component of this <see cref="T:XmlPrime.TimeWithZone"/>.</value>
    </member>
    <member name="P:XmlPrime.TimeWithZone.Minute">
      <summary>
            Gets the minute component of this <see cref="T:XmlPrime.TimeWithZone"/>.
            </summary>
      <value>An <see cref="T:System.Int32"/> representing the minute component of this <see cref="T:XmlPrime.TimeWithZone"/>.</value>
    </member>
    <member name="P:XmlPrime.TimeWithZone.Second">
      <summary>
            Gets the seconds component of this <see cref="T:XmlPrime.TimeWithZone"/>.
            </summary>
      <value>A <see cref="T:System.Decimal"/> representing the seconds component of this <see cref="T:XmlPrime.TimeWithZone"/>.</value>
    </member>
    <member name="P:XmlPrime.TimeWithZone.SecondsPastMidnight">
      <summary>
            Gets the number of whole and partial seconds from midnight.
            </summary>
      <value>A <see cref="T:System.Decimal"/> value which is the number of whole and partial seconds from midnight.</value>
    </member>
    <member name="P:XmlPrime.TimeWithZone.TimeZone">
      <summary>
            Gets the optional time zone component of this <see cref="T:XmlPrime.TimeWithZone"/>.
            </summary>
      <value>The optional time zone component of this <see cref="T:XmlPrime.TimeWithZone"/>.</value>
    </member>
    <member name="T:XmlPrime.TimeZone">
      <summary>
            Represents a time zone.  This is a whole number of minutes in the range -14:00 to 14:00.
            </summary>
      <remarks>
        <para>The <see cref="T:XmlPrime.TimeZone"/> structure is used to represent the time zone component of the
            <see cref="T:XmlPrime.DateTimeWithZone"/>, <see cref="T:XmlPrime.DateWithZone"/>, <see cref="T:XmlPrime.TimeWithZone"/>, 
            <see cref="T:XmlPrime.GDay"/>, <see cref="T:XmlPrime.GMonth"/>, <see cref="T:XmlPrime.GYear"/>, 
            <see cref="T:XmlPrime.GMonthDay"/> and <see cref="T:XmlPrime.GYearMonth"/> structures.</para>
      </remarks>
    </member>
    <member name="F:XmlPrime.TimeZone.Invalid">
      <summary>
            The Coordinated Universal Time (UTC) zone.  This field is read-only. 
            </summary>
      <value>The <see cref="T:XmlPrime.TimeZone"/> value representing <c>Z</c>.</value>
    </member>
    <member name="F:XmlPrime.TimeZone.Utc">
      <summary>
            The Coordinated Universal Time (UTC) zone.  This field is read-only. 
            </summary>
      <value>The <see cref="T:XmlPrime.TimeZone"/> value representing <c>Z</c>.</value>
    </member>
    <member name="F:XmlPrime.TimeZone.Est">
      <summary>
            The Eastern Standard Time (North America) zone.  This field is read-only. 
            </summary>
      <value>The <see cref="T:XmlPrime.TimeZone"/> value representing <c>UTC-05</c>.</value>
    </member>
    <member name="F:XmlPrime.TimeZone.Edt">
      <summary>
            The Eastern Daylight Time (North America) zone.  This field is read-only. 
            </summary>
      <value>The <see cref="T:XmlPrime.TimeZone"/> value representing <c>UTC-04</c>.</value>
    </member>
    <member name="F:XmlPrime.TimeZone.Cst">
      <summary>
            The Central Standard Time (North America) zone.  This field is read-only. 
            </summary>
      <value>The <see cref="T:XmlPrime.TimeZone"/> value representing <c>UTC-06</c>.</value>
    </member>
    <member name="F:XmlPrime.TimeZone.Cdt">
      <summary>
            The Central Daylight Time (North America) zone.  This field is read-only. 
            </summary>
      <value>The <see cref="T:XmlPrime.TimeZone"/> value representing <c>UTC-05</c>.</value>
    </member>
    <member name="F:XmlPrime.TimeZone.Mst">
      <summary>
            The Mountain Standard Time (North America) zone.  This field is read-only. 
            </summary>
      <value>The <see cref="T:XmlPrime.TimeZone"/> value representing <c>UTC-07</c>.</value>
    </member>
    <member name="F:XmlPrime.TimeZone.Mdt">
      <summary>
            The Mountain Daylight Time (North America) zone.  This field is read-only. 
            </summary>
      <value>The <see cref="T:XmlPrime.TimeZone"/> value representing <c>UTC-06</c>.</value>
    </member>
    <member name="F:XmlPrime.TimeZone.Pst">
      <summary>
            The Pacific Standard Time (North America) zone.  This field is read-only. 
            </summary>
      <value>The <see cref="T:XmlPrime.TimeZone"/> value representing <c>UTC-08</c>.</value>
    </member>
    <member name="F:XmlPrime.TimeZone.Pdt">
      <summary>
            The Pacific Daylight Time (North America) zone.  This field is read-only. 
            </summary>
      <value>The <see cref="T:XmlPrime.TimeZone"/> value representing <c>UTC-07</c>.</value>
    </member>
    <member name="F:XmlPrime.TimeZone.MinValue">
      <summary>
            The minimum <see cref="T:XmlPrime.TimeZone"/> value.  This field is read-only. 
            </summary>
      <value>The <see cref="T:XmlPrime.TimeZone"/> value representing <c>-14:00</c>.</value>
    </member>
    <member name="F:XmlPrime.TimeZone.MaxValue">
      <summary>
            The maximum <see cref="T:XmlPrime.TimeZone"/> value.  This field is read-only. 
            </summary>
      <value>The <see cref="T:XmlPrime.TimeZone"/> value representing <c>+14:00</c>.</value>
    </member>
    <member name="M:XmlPrime.TimeZone.Compare(XmlPrime.TimeZone,XmlPrime.TimeZone)">
      <summary>
            Compares two specified <see cref="T:XmlPrime.TimeZone"/> values. 
            </summary>
      <param name="timeZone1">The first <see cref="T:XmlPrime.TimeZone"/> value to compare.</param>
      <param name="timeZone2">The second <see cref="T:XmlPrime.TimeZone"/> value to compare.</param>
      <returns>
        <para>A signed number that indicates the relative order of  <paramref name="timeZone1"/> and <paramref name="timeZone2"/>.
            The return value has the following meanings.</para>
        <list type="bullet">
          <item>
            <description>Less than zero indicates that <paramref name="timeZone1"/> is less than <paramref name="timeZone2"/>.</description>
          </item>
          <item>
            <description>Zero indicates that <paramref name="timeZone1"/> is equal to <paramref name="timeZone2"/>.</description>
          </item>
          <item>
            <description>Greater than zero  indicates that  <paramref name="timeZone1"/> is greater than <paramref name="timeZone2"/>.</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:XmlPrime.TimeZone.Parse(System.String)">
      <summary>
            Converts a lexical representation to its <see cref="T:XmlPrime.TimeZone"/> equivalent. 
            </summary>
      <param name="value">The lexical value to convert.</param>
      <returns>
            The <see cref="T:XmlPrime.TimeZone"/> represented by <paramref name="value"/>.
            </returns>
      <remarks>
            The lexical representation is as parsing a time zone from an <c>xs:dateTime</c>.  It is in the format
            <c>(('+' | '-') hh ':' mm) | 'Z'</c></remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value"/> is not a valid lexical value of a time zone.
            </exception>
    </member>
    <member name="M:XmlPrime.TimeZone.TryConvert(XmlPrime.DayTimeDuration,XmlPrime.TimeZone@)">
      <summary>
            Tries to construct a <see cref="T:XmlPrime.TimeZone"/> from a <see cref="T:XmlPrime.DayTimeDuration"/>.
            </summary>
      <param name="duration">The duration of the time zone to construct.</param>
      <param name="result">
            When this method returns, contains the <see cref="T:System.TimeZone"/> value represented by 
            <paramref name="duration"/> if the conversion succeeded, or UTC (<c>Z</c>) if the conversion failed.
            </param>
      <returns>
        <see langword="true"/> if the conversion is successful, or <see langword="false"/> if <paramref name="duration"/>
            is not a valid value for a <see cref="T:XmlPrime.TimeZone"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.TimeZone.TryParse(System.String,XmlPrime.TimeZone@)">
      <summary>
            Converts a lexical representation to its <see cref="T:XmlPrime.TimeZone"/> equivalent.  A return value indicates
            whether the conversion succeeded or failed.
            </summary>
      <param name="value">The lexical value to convert.</param>
      <param name="result">
            When this method returns, contains the <see cref="T:System.TimeZone"/> value represented by 
            <paramref name="value"/> if the conversion succeeded, or UTC (<c>Z</c>) if the conversion failed.
            </param>
      <returns>
        <see langword="true"/> if the conversion succeeded; otherwise <see langword="false"/>.
            </returns>
      <remarks>
            The lexical representation is as parsing a time zone from an <c>xs:dateTime</c>.  It is in the format
            <c>(('+' | '-') hh ':' mm) | 'Z'</c></remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.TimeZone.#ctor(System.Int32)">
      <overloads>Initializes a new instance of the <see cref="T:XmlPrime.TimeZone"/> structure.</overloads>
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.TimeZone"/> structure with the specified number of minutes.
            </summary>
      <param name="minutes">The difference between this time zone and UTC in minutes.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="minutes"/> is outside the range -840 to 840.</exception>
    </member>
    <member name="M:XmlPrime.TimeZone.#ctor(XmlPrime.DayTimeDuration)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.TimeZone"/> structure from a <see cref="T:XmlPrime.DayTimeDuration"/>.
            </summary>
      <param name="duration">The difference between this time zone and UTC.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="duration"/> is not a valid time zone.</exception>
    </member>
    <member name="M:XmlPrime.TimeZone.#ctor(System.TimeZone)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.TimeZone"/> structure from a <see cref="T:System.TimeZone"/>.
            </summary>
      <param name="timeZone">A <see cref="T:System.TimeZone"/> value.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="timeZone"/> is not a valid time zone.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="timeZone"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.TimeZone.#ctor(System.TimeSpan)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.TimeZone"/> structure from a <see cref="T:System.TimeSpan"/>.
            </summary>
      <param name="timeZone">A <see cref="T:System.TimeSpan"/> value.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="timeZone"/> is not a valid time zone.</exception>
    </member>
    <member name="M:XmlPrime.TimeZone.Equals(System.Object)">
      <overloads>Determines whether two <see cref="T:XmlPrime.TimeZone"/> instances have the same value.</overloads>
      <summary>
            Determines whether this instance is equal to a specified object.
            </summary>
      <param name="obj">An object to compare to this instance.</param>
      <returns>
        <see langword="true"/> if <paramref name="obj"/> is an instance of <see cref="T:XmlPrime.TimeZone"/>
            and equals the value of this instance; otherwise <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.TimeZone.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
    </member>
    <member name="M:XmlPrime.TimeZone.ToString">
      <summary>
            Returns the canonical lexical representation of this <see cref="T:XmlPrime.TimeZone"/>.
            </summary>
      <returns>The canonical lexical representation of this <see cref="T:XmlPrime.TimeZone"/>.</returns>
    </member>
    <member name="M:XmlPrime.TimeZone.ToDayTimeDuration">
      <summary>
            Returns the value of the current <see cref="T:XmlPrime.TimeZone"/> expressed as a <see cref="T:XmlPrime.DayTimeDuration"/>.
            </summary>
      <returns>The value of the current <see cref="T:XmlPrime.TimeZone"/> expressed as a <see cref="T:XmlPrime.DayTimeDuration"/></returns>
    </member>
    <member name="M:XmlPrime.TimeZone.CompareTo(XmlPrime.TimeZone)">
      <summary>
            Compares this instance to a specified <see cref="T:XmlPrime.TimeZone"/> and returns an integer that 
            indicates whether the value of this instance is less than, equal to, or greater than the value of the 
            specified <see cref="T:XmlPrime.TimeZone"/>.
            </summary>
      <param name="other">A <see cref="T:XmlPrime.TimeZone"/> to compare.</param>
      <returns>
        <para>A signed number that indicates the relative order of this instance and <paramref name="other"/>.
            The return value has the following meanings.</para>
        <list type="bullet">
          <item>
            <description>Less than zero indicates that this instance is less than <paramref name="other"/>.</description>
          </item>
          <item>
            <description>Zero indicates that this instance is equal to <paramref name="other"/>.</description>
          </item>
          <item>
            <description>Greater than zero  indicates that this instance is greater than <paramref name="other"/>.</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:XmlPrime.TimeZone.Equals(XmlPrime.TimeZone)">
      <summary>
            Indicates whether this instance is equal to another <see cref="T:XmlPrime.TimeZone"/>.
            </summary>
      <param name="other">A <see cref="T:XmlPrime.TimeZone"/> to compare with this object.</param>
      <returns>
        <see langword="true"/> if <paramref name="other"/> equals the value of this instance; otherwise, <see langword="false"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.TimeZone.op_Equality(XmlPrime.TimeZone,XmlPrime.TimeZone)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.TimeZone"/> is equal to another specified <see cref="T:XmlPrime.TimeZone"/>.
            </summary>
      <param name="timeZone1">The first <see cref="T:XmlPrime.TimeZone"/> to compare.</param>
      <param name="timeZone2">The second <see cref="T:XmlPrime.TimeZone"/> to compare.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.TimeZone"/> values are equal, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="M:XmlPrime.TimeZone.op_Inequality(XmlPrime.TimeZone,XmlPrime.TimeZone)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.TimeZone"/> is not equal to another specified <see cref="T:XmlPrime.TimeZone"/>.
            </summary>
      <param name="timeZone1">The first <see cref="T:XmlPrime.TimeZone"/> to compare.</param>
      <param name="timeZone2">The second <see cref="T:XmlPrime.TimeZone"/> to compare.</param>
      <returns>
        <see langword="true"/> if the two time <see cref="T:XmlPrime.TimeZone"/> values are not equal, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="M:XmlPrime.TimeZone.op_LessThan(XmlPrime.TimeZone,XmlPrime.TimeZone)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.TimeZone"/> is less than another specified <see cref="T:XmlPrime.TimeZone"/>.
            </summary>
      <param name="timeZone1">The first <see cref="T:XmlPrime.TimeZone"/> to compare.</param>
      <param name="timeZone2">The second <see cref="T:XmlPrime.TimeZone"/> to compare.</param>
      <returns>
        <see langword="true"/> if the first <see cref="T:XmlPrime.TimeZone"/> is less than the second, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="M:XmlPrime.TimeZone.op_GreaterThan(XmlPrime.TimeZone,XmlPrime.TimeZone)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.TimeZone"/> is greater than another specified <see cref="T:XmlPrime.TimeZone"/>.
            </summary>
      <param name="timeZone1">The first <see cref="T:XmlPrime.TimeZone"/> to compare.</param>
      <param name="timeZone2">The second <see cref="T:XmlPrime.TimeZone"/> to compare.</param>
      <returns>
        <see langword="true"/> if the first <see cref="T:XmlPrime.TimeZone"/> is greater than the second, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="P:XmlPrime.TimeZone.CurrentTimeZone">
      <summary>
            Gets the time zone of the current computer system.
            </summary>
      <value>
            The time zone of the current computer system.
            </value>
    </member>
    <member name="P:XmlPrime.TimeZone.Hours">
      <summary>
            Gets the hours component of the current <see cref="T:XmlPrime.TimeZone"/>. 
            </summary>
      <value>The hours component of this instance.  The values range between -14 and 14.</value>
    </member>
    <member name="P:XmlPrime.TimeZone.Minutes">
      <summary>
            Gets the minutes component of the current <see cref="T:XmlPrime.TimeZone"/>. 
            </summary>
      <value>The minutes component of this instance.  The values range between -59 and 59.</value>
    </member>
    <member name="P:XmlPrime.TimeZone.TotalMinutes">
      <summary>
            Gets the value of the current <see cref="T:XmlPrime.TimeZone"/> expressed as a number of minutes from UTC.
            </summary>
      <value>The total number of minutes from UTC of this time zone.</value>
    </member>
    <member name="T:XmlPrime.XPathVersion">
      <summary>
            An enumeration specifying the version of the XPath specification that should be used.
            </summary>
    </member>
    <member name="F:XmlPrime.XPathVersion.XPath20">
      <summary>
            XPath 2.0.  This is the default.
            </summary>
    </member>
    <member name="F:XmlPrime.XPathVersion.XPath30">
      <summary>
            XPath 3.0.
            </summary>
      <remarks>
        <para>As of XmlPrime version 3.0, this is the default version.</para>
      </remarks>
    </member>
    <member name="F:XmlPrime.XPathVersion.XPath31">
      <summary>
            XPath 3.1.  This is not supported in XmlPrime 3.x.
            </summary>
    </member>
    <member name="T:XmlPrime.XQuerySettings">
      <summary>
            	Represents the user-controllable static context settings of an <see cref="T:XmlPrime.XQuery"/>.
            </summary>
      <remarks>
            	The static context of an XQuery module is the information that is available during static analysis of the 
            	module, prior to its evaluation.
            </remarks>
      <seealso href="http://www.w3.org/TR/xquery/#static_context">[XQuery 1.0: An XML Query Language] 2.1.1 Static Context</seealso>
    </member>
    <member name="M:XmlPrime.XQuerySettings.#ctor">
      <overloads>
            	Initializes a new instance of the <see cref="T:XmlPrime.XQuerySettings"/> class.
            </overloads>
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XQuerySettings"/> class .
            </summary>
      <remarks>
        <para>For security reasons, by default the new <see cref="T:XmlPrime.XQuerySettings"/> instance does not enable the 
            		import of external modules.  This can be enabled by setting the <see cref="P:XmlPrime.XQuerySettings.ModuleResolver"/> property.</para>
      </remarks>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="M:XmlPrime.XQuerySettings.#ctor(XmlPrime.XQuerySettings)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XQuerySettings"/> class from
            	another <see cref="T:XmlPrime.XQuerySettings"/> instance.
            </summary>
      <param name="settings">An <see cref="T:XmlPrime.XQuerySettings"/> instance from which to copy settings.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/> is <see langword="null"/>.</exception>
      <remarks>
        <para>The <see cref="P:XmlPrime.StaticContextSettings.Libraries"/>, <see cref="P:XmlPrime.XQuerySettings.ModuleLocationHints"/>,
            		<see cref="P:XmlPrime.XQuerySettings.SchemaLocationHints"/> and <see cref="P:XmlPrime.XQuerySettings.SerializationSettings"/> properties are initialized
            		with new instances which copy their values from the corresponding <paramref name="settings"/> properties.
            		Other properties, such as <see cref="P:XmlPrime.StaticContextSettings.Schemas"/> and <see cref="P:XmlPrime.StaticContextSettings.NameTable"/>, 
            		reference the same instance as the corresponding <paramref name="settings"/> property.</para>
      </remarks>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="M:XmlPrime.XQuerySettings.#ctor(System.Xml.XmlNameTable)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XQuerySettings"/> class with the specified
            	<see cref="T:System.Xml.XmlNameTable"/>.
            </summary>
      <param name="nameTable">The <see cref="T:System.Xml.XmlNameTable"/> to be used for atomized string comparisons.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nameTable"/> is <see langword="null"/>.</exception>
      <remarks>
        <para>For security reasons, by default the new <see cref="T:XmlPrime.XQuerySettings"/> instance does not enable the 
            		import of external modules.  This can be enabled by setting the <see cref="P:XmlPrime.XQuerySettings.ModuleResolver"/> property.</para>
      </remarks>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="P:XmlPrime.XQuerySettings.BoundarySpace">
      <summary>
            	Gets or sets the boundary space policy.
            </summary>
      <value>One of the <see cref="P:XmlPrime.XQuerySettings.BoundarySpace"/> values.</value>
      <remarks>
        <para>The boundary space policy controls the processing of boundary whitespace by direct element constructors, 
            		as described in <a href="http://www.w3.org/TR/xquery/#id-whitespace">3.7.1.4 Boundary Whitespace</a>.</para>
        <para>This setting can be overridden with a <c>declare boundary-space</c> declaration in the query.</para>
        <para>The default boundary space policy is <see cref="F:XmlPrime.BoundarySpace.Strip"/>.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xquery/#id-boundary-space-decls">[XQuery 1.0: An XML Query Language] 4.3 Boundary-space Declaration</seealso>
    </member>
    <member name="P:XmlPrime.XQuerySettings.ConstructionMode">
      <summary>
            	Gets or sets the construction mode.
            </summary>
      <value>One of the <see cref="P:XmlPrime.XQuerySettings.ConstructionMode"/> values.</value>
      <remarks>
        <para>The construction mode governs the behaviour of element and document node constructors.</para>
        <para>This setting can be overridden with a <c>declare construction</c> declaration in the query.</para>
        <para>The default construction mode is <see cref="F:XmlPrime.ConstructionMode.Preserve"/>.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xquery/#id-construction-declaration">[XQuery 1.0: An XML Query Language] 4.6 Construction Declaration</seealso>
    </member>
    <member name="P:XmlPrime.XQuerySettings.CopyNamespacesMode">
      <summary>
            	Gets or sets the copy-namespaces mode.
            </summary>
      <value>One of the <see cref="T:XmlPrime.CopyNamespacesMode"/> values.</value>
      <remarks>
        <para>The copy-namespaces mode controls the namespace bindings that are assigned when an existing element node 
            		is copied by an element constructor, as described in 
            		<see href="http://www.w3.org/TR/xquery/#id-element-constructor">3.7.1 Direct Element Constructors.</see></para>
        <para>This can be overridden with a <c>declare copy-namespaces</c> declaration in the query.</para>
        <para>The default copy-namespaces mode is <see cref="F:XmlPrime.CopyNamespacesMode.PreserveInherit"/>.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xquery/#id-copy-namespaces-decl">[XQuery 1.0: An XML Query Language] 4.9 Copy-Namespaces Declaration</seealso>
    </member>
    <member name="P:XmlPrime.XQuerySettings.DefaultEmptyOrder">
      <summary>
            	Gets or sets the default empty sequence order.
            </summary>
      <value>One of the <see cref="T:XmlPrime.EmptyOrder"/> values.</value>
      <remarks>
        <para>
            		The default empty order controls the default processing of empty sequences and <c>NaN</c> values as ordering
            		keys in an order by clause in a FLWOR expression.
            	</para>
        <para>
            		This setting can be overridden with a <c>declare default order empty</c> declaration in the query.
            	</para>
        <para>
            		By default, the empty order policy is <see cref="F:XmlPrime.EmptyOrder.Least"/>.
            	</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xquery/#id-empty-order-decl">[XQuery 1.0: An XML Query Language] 4.8 Empty Order Declaration</seealso>
    </member>
    <member name="P:XmlPrime.XQuerySettings.EnableScript">
      <summary>
            Gets or sets a value indicating whetherr to enable support for .NET script modules.
            </summary>
      <value>
        <see langword="true"/> to support  .NET script modules in XQuery programs; otherwise, <see langword="false"/>.</value>
      <remarks>
        <para>The default value is <see langword="false"/>.</para>
        <para>When enabled, a query may import a c# source file using the syntax:</para>
        <code>import module namespace ext = "http://www.example.org/xpath-functions" at "script.cs";
            ext:nativeFunction(1, "value")
            </code>
        <para>XQuery scripting should be enabled only if you require script support and you are working in a fully trusted environment.</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.XQuerySettings.EnabledFeatures">
      <summary>
            	Gets or sets a value indicating which optional features are enabled.
            </summary>
      <value>
            	An <see cref="T:XmlPrime.XQueryOptionalFeatures"/> value indicating which optional features are enabled.
            </value>
      <remarks>
        <para>
            		Disabling a feature causes an error to be raised during compilation of a query if the feature is used in the 
            		query.
            	</para>
        <para>
            		By default all optional features are enabled.
            	</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xquery/#id-conform-optional-features">[XQuery 1.0: An XML Query Language] 5.2 Optional Features</seealso>
    </member>
    <member name="P:XmlPrime.XQuerySettings.ModuleLocationHints">
      <summary>
            	Gets or sets the collection of location hints that are used in <c>import module</c> declarations.
            </summary>
      <value>
            	A <see cref="T:XmlPrime.LocationHintCollection"/> instance containing location hints that are used for module imports.
            </value>
      <remarks>
            	When an <c>import module</c> declaration is processed, the location hints for the target namespace in this 
            	<see cref="T:XmlPrime.LocationHintCollection"/> are added to the set specified by the declaration.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:XmlPrime.XQuerySettings.ModuleLocationHints"/> is set to <see langword="null"/>.
            </exception>
    </member>
    <member name="P:XmlPrime.XQuerySettings.ModuleResolver">
      <summary>
            	Sets the <see cref="T:System.Xml.XmlResolver"/> instance to be used during module import.
            </summary>
      <remarks>
        <para>
            		This resolver is used to resolve module location hints specified in <c>import module</c> declarations.
            	</para>
        <para>
            		If this is set to <see langword="null"/> then no external modules can be imported.
            	</para>
        <para>
            		By default this property is set to <see langword="null"/>.
            	</para>
      </remarks>
      <value>An <see cref="T:System.Xml.XmlResolver"/> instance to be used during module import.</value>
    </member>
    <member name="P:XmlPrime.XQuerySettings.OrderingMode">
      <summary>
            	Gets or sets the ordering mode.
            </summary>
      <value>One of the <see cref="P:XmlPrime.XQuerySettings.OrderingMode"/> values.</value>
      <remarks>
        <para>The ordering mode controls the ordering of the result sequence returned by certain path expressions, 
            		union, intersect, and except expressions, and FLWOR expressions that have no order by clause.</para>
        <para>The setting can be overridden with a <c>declare ordering</c> declaration in the query, and can be
            		overridden locally with the <c>fn:ordered</c> and <c>fn:unordered</c> functions.</para>
        <para>Currently, the ordering mode is ignored by <c>XmlPrime</c>, and all affected expressions are evaluated
            		with their results in document order.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xquery/#id-default-ordering-decl">[XQuery 1.0: An XML Query Language] 4.7 Ordering Mode Declaration</seealso>
    </member>
    <member name="P:XmlPrime.XQuerySettings.SchemaLocationHints">
      <summary>
            	Gets or sets the collection of location hints that are used in <c>import schema</c> declarations.
            </summary>
      <value>
            	A <see cref="T:XmlPrime.LocationHintCollection"/> instance containing location hints that are used for schema imports.
            </value>
      <remarks>
            	When an <c>import schema</c> declaration is processed, the location hints for the target namespace in this 
            	<see cref="T:XmlPrime.LocationHintCollection"/> are added to the set specified by the declaration.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:XmlPrime.XQuerySettings.SchemaLocationHints"/> is set to <see langword="null"/>.
            </exception>
    </member>
    <member name="P:XmlPrime.XQuerySettings.SerializationSettings">
      <summary>
            	Gets the serialization settings.
            </summary>
      <value>
            	An <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> instance specifying serialization settings.
            </value>
      <remarks>
            	These can be overridden with <c>set option</c> declarations in the query.  The post-compilation 
            	serialization settings can be inspected using the <see cref="P:XmlPrime.XQuery.SerializationSettings"/> property
            	of an <see cref="T:XmlPrime.XQuery"/> instance.
            </remarks>
    </member>
    <member name="P:XmlPrime.XQuerySettings.TypeCheckingMode">
      <summary>
            	Gets or sets a value indicating the type checking mode to be used during compilation.
            </summary>
      <value>
            	A member of the <see cref="T:XmlPrime.TypeCheckingMode"/> enumeration.
            </value>
      <remarks>
            	By default this is set to <see cref="F:XmlPrime.TypeCheckingMode.Optimistic"/>.
            </remarks>
    </member>
    <member name="P:XmlPrime.XQuerySettings.XQueryVersion">
      <summary>
            Gets or sets the version of XQuery to which the processor should adhere.
            </summary>
      <value>An <see cref="P:XmlPrime.XQuerySettings.XQueryVersion"/> value indicating to which version of the specification the processor should adhere.</value>
      <exception cref="T:System.ArgumentException">Raised if the specified version is not supported.</exception>
      <remarks>
        <para>
            The default value of this property is the latest version of XQuery which is fully supported.  Currently this is <see cref="F:XmlPrime.XQueryVersion.XQuery30"/>.
            </para>
        <para>When set to <see cref="F:XmlPrime.XQueryVersion.XQuery10"/>, if the processor encounters an XQuery module with a version declaration of "3.0", 
            an error will be raised (err:XQST0031].</para>
        <para>When set to <see cref="F:XmlPrime.XQueryVersion.XQuery30"/>, if the processor encounters an XQuery module with a version declaration of "1.0", 
            the module will be processed using the the XQuery 1.0 specification.  However, the default in-scope functions will be those specified in 
            XPath and XQuery Functions and Operators 3.0.</para>
        <para>Settings this value determines the set of available functions for use within XQuery expressions and 
            determines the version of XQuery to use when parsing.</para>
      </remarks>
    </member>
    <member name="T:XmlPrime.XQueryVersion">
      <summary>
            An enumeration specifying the version of the XQuery specification that should be used.
            </summary>
    </member>
    <member name="F:XmlPrime.XQueryVersion.XQuery10">
      <summary>
            XQuery 1.0.
            </summary>
      <remarks>
        <para>Prior to XmlPrime version 3.0, this was the default version.</para>
      </remarks>
    </member>
    <member name="F:XmlPrime.XQueryVersion.XQuery30">
      <summary>
            XQuery 3.0.
            </summary>
      <remarks>
        <para>As of XmlPrime version 3.0, this is the default version.</para>
      </remarks>
    </member>
    <member name="F:XmlPrime.XQueryVersion.XQuery31">
      <summary>
            XQuery 3.1.  This is not supported in XmlPrime 3.x.
            </summary>
    </member>
    <member name="T:XmlPrime.XsltOptionalFeatures">
      <summary>
        <para>Specifies optional XSLT features which may be switched off.</para>
        <para>This enumeration has a <see cref="T:System.FlagsAttribute"/> attribute that allows a bitwise combination of its member
            values.</para>
      </summary>
      <remarks>
        <para>
            Use the <see cref="P:XmlPrime.XsltSettings.EnabledFeatures"/> property to enable or disable optional XSLT features. 
            Disabling a feature causes an error to be raised during compilation of a transformation if the feature is used in
            that transformation.</para>
      </remarks>
      <seealso href="https://www.w3.org/TR/xslt-30/#conformance">[XSL Transformations (XSLT) Version 3.0] 27 Conformance</seealso>
    </member>
    <member name="F:XmlPrime.XsltOptionalFeatures.None">
      <summary>
            Minimal conformance. No optional features are enabled.
            </summary>
    </member>
    <member name="F:XmlPrime.XsltOptionalFeatures.TypedDataFeature">
      <summary>
            The Typed Data Feature permits a data model instance to contain
            element nodes types other than xs:untyped and attributes node types other than xs:untypedAtomic.
            </summary>
    </member>
    <member name="F:XmlPrime.XsltOptionalFeatures.SchemaImportFeature">
      <summary>
            The Schema Import Feature permits the query Prolog to contain a schema import.
            </summary>
    </member>
    <member name="F:XmlPrime.XsltOptionalFeatures.SchemaValidationFeature">
      <summary>
            The Schema Validation Feature permits a query to contain a validate expression.
            </summary>
    </member>
    <member name="F:XmlPrime.XsltOptionalFeatures.SchemaAwareFeature">
      <summary>
            The Schema Aware Feature permits the query Prolog to contain a schema import, permits a query to contain a validate expression (see 3.18 Validate Expressions), and permits an XDM to contain types other than xs:untyped and xs:untypedAtomic.]
            </summary>
    </member>
    <member name="F:XmlPrime.XsltOptionalFeatures.FullAxisFeature">
      <summary>
            The Full Axis Feature permits a query to contain the following axes which are designated as optional axes: ancestor, ancestor-or-self, following, following-sibling, preceding, and preceding-sibling.
            </summary>
    </member>
    <member name="F:XmlPrime.XsltOptionalFeatures.SerializationFeature">
      <summary>
            The Serialization Feature provides means for serializing the result of a transformation.
            </summary>
    </member>
    <member name="F:XmlPrime.XsltOptionalFeatures.HigherOrderFunctionFeature">
      <summary>
            The Higher Order Function Feature allows an expression to evaluate to a function, and allows dynamic function calls.
            </summary>
    </member>
    <member name="F:XmlPrime.XsltOptionalFeatures.LoadXQueryModuleFunction">
      <summary>
            Enables use of the XPath and XQuery Functions and Operators 3.1 <c>fn:load-xquery-module</c> function.
            </summary>
    </member>
    <member name="F:XmlPrime.XsltOptionalFeatures.TransformFunction">
      <summary>
            Enables use of the XPath and XQuery Functions and Operators 3.1 <c>fn:transform</c> function.
            </summary>
    </member>
    <member name="F:XmlPrime.XsltOptionalFeatures.StreamingFeature">
      <summary>
             A processor that claims conformance with the streaming feature must use streamed processing in
             cases where (a) streaming is requested (for example by using the attribute streamable="yes" on 
            xsl:mode, or the xsl:stream instruction) and (b) the constructs in question are guaranteed-streamable
             according to the XSLT specification.
            </summary>
      <remarks>
            This flag is currently ignored.  The streaming feature is not currently implemented.
            </remarks>
    </member>
    <member name="F:XmlPrime.XsltOptionalFeatures.DynamicEvaluationFeature">
      <summary>
            A processor that claims conformance with the dynamic evaluation feature must evaluate the 
            xsl:evaluate function as described in the XSL specification.
            </summary>
      <remarks>
            This flag is currently ignored.  The dynamic evaluation feature is not currently implemented.
            </remarks>
    </member>
    <member name="F:XmlPrime.XsltOptionalFeatures.XPath31Feature">
      <summary>
            A processor that claims conformance with the XPath 3.1 feature must implement XPath 3.1
            (including XPath 3.1, XDM 3.1, XSLT and XQuery Serialization 3.1, and Functions and Operators 3.1.
            </summary>
    </member>
    <member name="F:XmlPrime.XsltOptionalFeatures.AllFeatures">
      <summary>
            All optional features are enabled.
            </summary>
    </member>
    <member name="T:XmlPrime.XsltSettings">
      <summary>
            Represents the user-controllable static context settings of an <see cref="T:XmlPrime.Xslt"/> instance.
            </summary>
    </member>
    <member name="M:XmlPrime.XsltSettings.#ctor">
      <overloads>
            Initializes a new instance of the <see cref="T:XmlPrime.XsltSettings"/> class.
            </overloads>
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.XsltSettings"/> class.
            </summary>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="M:XmlPrime.XsltSettings.#ctor(XmlPrime.XsltSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.XsltSettings"/> class.
            </summary>
      <param name="settings">An <see cref="T:XmlPrime.XsltSettings"/> instance from which to copy settings.</param>
      <remarks>
        <para>The <see cref="P:XmlPrime.StaticContextSettings.Libraries"/> and <see cref="P:XmlPrime.XsltSettings.SerializationSettings"/> properties are 
            initialized with new instances which copy their values from the corresponding <paramref name="settings"/> 
            properties.   Other properties, such as <see cref="P:XmlPrime.StaticContextSettings.Schemas"/> and 
            <see cref="P:XmlPrime.StaticContextSettings.NameTable"/>,  reference the same instance as the corresponding 
            <paramref name="settings"/> property.</para>
      </remarks>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="M:XmlPrime.XsltSettings.#ctor(System.Xml.XmlNameTable)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.XsltSettings"/> class with the specified
            <see cref="T:System.Xml.XmlNameTable"/>.
            </summary>
      <param name="nameTable">The name table to be used.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nameTable"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="P:XmlPrime.XsltSettings.EnableAssertions">
      <summary>
            Gets or sets a value indicating whether to enable assertions
            </summary>
      <value>
        <c>true</c> if assertions are enabled; otherwise, <c>false</c>.
            </value>
      <para>The default value is <see langword="true"/>.</para>
    </member>
    <member name="P:XmlPrime.XsltSettings.EnableScript">
      <summary>
            Gets or sets a value indicating whetherr to enable support for embedded script blocks.
            </summary>
      <value>
        <see langword="true"/> to support script blocks in XSLT stylesheets; otherwise, <see langword="false"/>.</value>
      <remarks>
        <para>The default value is <see langword="false"/>.</para>
        <para>XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment.</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.XsltSettings.EnabledFeatures">
      <summary>
            	Gets or sets a value indicating which optional features are enabled.
            </summary>
      <value>
            	An <see cref="T:XmlPrime.XsltOptionalFeatures"/> value indicating which optional features are enabled.
            </value>
      <remarks>
        <para>Disabling a feature causes an error to be raised during compilation of a transformation
             if the feature is used in the transformation.</para>
        <para>By default all supported optional features are enabled.</para>
      </remarks>
      <seealso href="https://www.w3.org/TR/xslt-30/#conformance">[XSL Transformations (XSLT) Version 3.0] 27 Conformance</seealso>
    </member>
    <member name="P:XmlPrime.XsltSettings.IsSchemaAware">
      <summary>
            Gets or sets a value indicating whether the XSLT processor should behave as a Schema-Aware or Basic XSLT processor.
            </summary>
      <value>
        <see langword="true"/> if the XSLT processor should behave as a Schema-Aware; otherwise <see langword="false"/> if it
            should behave as a Basic XSLT processor.
            </value>
      <remarks>
        <para>This property manipulates the <see cref="P:XmlPrime.XsltSettings.EnabledFeatures"/> property.</para>
        <para>The default value of this property is <see langword="false"/>.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#basic-conformance">[XSL Transformations (XSLT) Version 2.0] 21.1 Basic XSLT Processor</seealso>
      <seealso href="http://www.w3.org/TR/xslt20/#schema-aware-conformance">[XSL Transformations (XSLT) Version 2.0] 21.2 Schema-Aware XSLT Processor</seealso>
    </member>
    <member name="P:XmlPrime.XsltSettings.ModuleResolver">
      <summary>
            Sets the <see cref="T:System.Xml.XmlResolver"/> used during processing of <c>xsl:include</c> and <c>xsl:import</c> declarations.
            </summary>
      <remarks>
        <para>
            This resolver is used to resolve URI reference identifying styleheet modules specified in <c>xsl:include</c> and 
            <c>xsl:import</c> declarations.
            </para>
        <para>
            If this is set to <see langword="null"/> then no external stylesheets can be imported or included.
            </para>
        <para>
            By default this property is set to <see langword="null"/>.
            </para>
      </remarks>
      <value>An <see cref="T:System.Xml.XmlResolver"/> instance to be used during module import.</value>
    </member>
    <member name="P:XmlPrime.XsltSettings.SchemaLocationHints">
      <summary>
            Gets or sets the collection of location hints that are used in <c>xsl:import-schema</c> declarations.
            </summary>
      <value>
            A <see cref="T:XmlPrime.LocationHintCollection"/> instance containing location hints that are used for schema imports.
            </value>
      <remarks>
            When an <c>xsl:import-schema</c> declaration is processed, the location hints for the target namespace in this 
            <see cref="T:XmlPrime.LocationHintCollection"/> are added to the set specified by the declaration.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:XmlPrime.XsltSettings.SchemaLocationHints"/> is set to <see langword="null"/>.
            </exception>
    </member>
    <member name="P:XmlPrime.XsltSettings.SerializationSettings">
      <summary>
            Gets the serialization settings.
            </summary>
      <value>
            An <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> instance specifying serialization settings.
            </value>
      <remarks>
            These can be overridden with <c>xsl:output</c> element in the XSLT stylesheet.
            </remarks>
    </member>
    <member name="P:XmlPrime.XsltSettings.XsltVersion">
      <summary>
            Gets or sets the version of the XSLT specification to which the processor should adhere.
            </summary>
      <value>A <see cref="P:XmlPrime.XsltSettings.XsltVersion"/> value indicating which version of the specification should be used.</value>
      <exception cref="T:System.ArgumentException">Raised if the specified version is not supported.</exception>
      <remarks>
        <para>
            The default value of this property is the latest version of XSLT which is fully supported.  Currently this is <see cref="F:XmlPrime.XsltVersion.Xslt20"/>.
            </para>
        <para>When set to <see cref="F:XmlPrime.XsltVersion.Xslt20"/>, if the processor encounters an XSLT module with a version declaration of "3.0", 
            the processor will operate with forwards-compatible behaviour.</para>
        <para>When set to <see cref="F:XmlPrime.XsltVersion.Xslt30"/>, if the processor encounters an XSLT module with a version declaration of "1.0", 
            the processor will operate with backwards-compatible behaviour.  The default in-scope functions will be those specified in 
            XPath and XQuery Functions and Operators 3.0.</para>
        <para>Settings this value determines the set of available functions for use within XPath expressions and 
            determines the version of XSLT to use when parsing.</para>
      </remarks>
    </member>
    <member name="T:XmlPrime.XsltVersion">
      <summary>
            An enumeration specifying the version of the XSLT specification that should be used.
            </summary>
    </member>
    <member name="F:XmlPrime.XsltVersion.Xslt20">
      <summary>
            XSLT 2.0.  This is the default.
            </summary>
    </member>
    <member name="F:XmlPrime.XsltVersion.Xslt30">
      <summary>
            XSLT 3.0.  Currently support for XSLT 3.0 is incomplete.
            </summary>
    </member>
    <member name="T:XmlPrime.YearMonthDuration">
      <summary>
            Represents a duration of time that is expressed by the Gregorian year and month components.
            The corresponding XML Schema type is <c>xs:yearMonthDuration</c>.
            </summary>
      <remarks>
        <para>A <see cref="T:XmlPrime.YearMonthDuration"/> is a duration of time that is expressed by the Gregorian year and month.
            It can be used to represent a period of months, regardless of the number of days in a month.  
            To say, for example, that a season lasts three months.</para>
        <para>Unlike <see cref="T:XmlPrime.Duration"/> values, <see cref="T:XmlPrime.YearMonthDuration"/> values can be totally ordered.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xpath-functions/#dt-yearMonthDuration">[XQuery 1.0 and XPath 2.0 Functions and Operators] 10.3.1 xs:yearMonthDuration</seealso>
    </member>
    <member name="F:XmlPrime.YearMonthDuration.MinValue">
      <summary>
            Represents the minimum representable <see cref="T:XmlPrime.YearMonthDuration"/> value.  This field is read-only. 
            </summary>
      <value>
            The <see cref="T:XmlPrime.YearMonthDuration"/> value representing <c>-P768614336404564650Y8M</c>.
            </value>
    </member>
    <member name="F:XmlPrime.YearMonthDuration.MaxValue">
      <summary>
            Represents the maximum <see cref="T:XmlPrime.YearMonthDuration"/> representable value.  This field is read-only. 
            </summary>
      <value>
            The <see cref="T:XmlPrime.YearMonthDuration"/> representing <c>P768614336404564650Y7M</c>.
            </value>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.Add(XmlPrime.YearMonthDuration,XmlPrime.YearMonthDuration)">
      <summary>
            Adds two specified <see cref="T:XmlPrime.YearMonthDuration"/> values.
            </summary>
      <param name="duration1">The first <see cref="T:XmlPrime.YearMonthDuration"/> to add.</param>
      <param name="duration2">The second <see cref="T:XmlPrime.YearMonthDuration"/> to add.</param>
      <returns>A <see cref="T:XmlPrime.YearMonthDuration"/> that is the sum of <paramref name="duration1"/> and <paramref name="duration2"/>.</returns>
      <exception cref="T:System.OverflowException">The sum of <paramref name="duration1"/> and <paramref name="duration2"/> is less
            than <see cref="F:XmlPrime.YearMonthDuration.MinValue"/> or greater than <see cref="F:XmlPrime.YearMonthDuration.MaxValue"/>. </exception>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.Compare(XmlPrime.YearMonthDuration,XmlPrime.YearMonthDuration)">
      <summary>
            Compares two specified <see cref="T:XmlPrime.YearMonthDuration"/> values. 
            </summary>
      <param name="duration1">The first <see cref="T:XmlPrime.YearMonthDuration"/> to compare.</param>
      <param name="duration2">The second <see cref="T:XmlPrime.YearMonthDuration"/> to compare.</param>
      <returns>
        <para>A signed number that indicates the relative order of <paramref name="duration1"/> and <paramref name="duration2"/>.
            The return value has the following meanings.</para>
        <list type="bullet">
          <item>
            <description>Less than zero indicates that <paramref name="duration1"/> is less than <paramref name="duration2"/>.</description>
          </item>
          <item>
            <description>Zero indicates that <paramref name="duration1"/> is equal to <paramref name="duration2"/>.</description>
          </item>
          <item>
            <description>Greater than zero  indicates that <paramref name="duration1"/> is greater than <paramref name="duration2"/>.</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.Divide(XmlPrime.YearMonthDuration,System.Double)">
      <overloads>
            Divides the specified <see cref="T:XmlPrime.YearMonthDuration"/> value with <see cref="T:XmlPrime.DayTimeDuration"/> or 
            <see cref="T:System.Double"/> value.
            </overloads>
      <summary>
            Divides the specified <see cref="T:XmlPrime.YearMonthDuration"/> value by a <see cref="T:System.Double"/> value.
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.YearMonthDuration"/> to divide.</param>
      <param name="value">The <see cref="T:System.Double"/> to divide by. </param>
      <returns>The <see cref="T:XmlPrime.YearMonthDuration"/> result of dividing <paramref name="duration"/> by <paramref name="value"/>.</returns>
      <remarks>The result is rounded to the nearest month, as per the <c>fn:round</c> function.</remarks>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="value"/> is zero.</exception>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.YearMonthDuration.MinValue"/> or greater than <see cref="F:XmlPrime.YearMonthDuration.MaxValue"/>.
            </exception>
      <seealso href="http://www.w3.org/TR/xquery-operators/#func-round">[FO] 6.4.4 fn:round</seealso>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.Divide(XmlPrime.YearMonthDuration,XmlPrime.YearMonthDuration)">
      <summary>
            Divides the specified <see cref="T:XmlPrime.YearMonthDuration"/> value by another <see cref="T:XmlPrime.YearMonthDuration"/> value.
            </summary>
      <param name="duration1">The <see cref="T:XmlPrime.YearMonthDuration"/> to divide.</param>
      <param name="duration2">The <see cref="T:XmlPrime.YearMonthDuration"/> to divide by. </param>
      <returns>The <see cref="T:System.Decimal"/> result of dividing <paramref name="duration1"/> by <paramref name="duration2"/>.</returns>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="duration2"/> is zero.</exception>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.Multiply(XmlPrime.YearMonthDuration,System.Double)">
      <summary>
            Multiplies the specified <see cref="T:XmlPrime.YearMonthDuration"/> value by a <see cref="T:System.Double"/> value.
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.YearMonthDuration"/> value to multiply.</param>
      <param name="value">The <see cref="T:System.Double"/> value to multiply by.</param>
      <returns>
            The <see cref="T:XmlPrime.YearMonthDuration"/> result of multiplying <paramref name="duration"/> by 
            <paramref name="value"/>.
            </returns>
      <remarks>The result is rounded to the nearest month, as per the <c>fn:round</c> function.</remarks>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.YearMonthDuration.MinValue"/> or greater than <see cref="F:XmlPrime.YearMonthDuration.MaxValue"/>.
            </exception>
      <seealso href="http://www.w3.org/TR/xquery-operators/#func-round">[FO] 6.4.4 fn:round</seealso>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.Multiply(System.Double,XmlPrime.YearMonthDuration)">
      <overloads>Multiplies a <see cref="T:XmlPrime.YearMonthDuration"/> value by a <see cref="T:System.Double"/> value.</overloads>
      <summary>
            Multiplies the specified <see cref="T:XmlPrime.YearMonthDuration"/> value by a <see cref="T:System.Double"/> value.
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.YearMonthDuration"/> value to multiply.</param>
      <param name="value">The <see cref="T:System.Double"/> value to multiply by.</param>
      <returns>
            The <see cref="T:XmlPrime.YearMonthDuration"/> result of multiplying <paramref name="duration"/> by 
            <paramref name="value"/>.
            </returns>
      <remarks>The result is rounded to the nearest month, as per the <c>fn:round</c> function.</remarks>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.YearMonthDuration.MinValue"/> or greater than <see cref="F:XmlPrime.YearMonthDuration.MaxValue"/>.
            </exception>
      <seealso href="http://www.w3.org/TR/xquery-operators/#func-round">[FO] 6.4.4 fn:round</seealso>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.Negate(XmlPrime.YearMonthDuration)">
      <summary>
            Negates the value of the specified <see cref="T:XmlPrime.YearMonthDuration"/> operand. 
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.YearMonthDuration"/> operand.</param>
      <returns>The additive inverse of <see cref="T:XmlPrime.YearMonthDuration"/>.</returns>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.YearMonthDuration.MinValue"/> or greater than <see cref="F:XmlPrime.YearMonthDuration.MaxValue"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.Parse(System.String)">
      <summary>
            Converts a lexical representation of an <c>xs:yearMonthDuration</c> to its <see cref="T:XmlPrime.YearMonthDuration"/> 
            equivalent. 
            </summary>
      <param name="value">The lexical representation of an <c>xs:yearMonthDuration</c> to convert.</param>
      <returns>
            The <see cref="T:XmlPrime.YearMonthDuration"/> equivalent to the <c>xs:yearMonthDuration</c> contained in 
            <paramref name="value"/>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value"/> is not a valid lexical value of an <c>xs:yearMonthDuration</c>.
            </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value"/> represents a duration less than <see cref="F:XmlPrime.YearMonthDuration.MinValue"/> or greater than
            <see cref="F:XmlPrime.YearMonthDuration.MaxValue"/>. 
            </exception>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.Plus(XmlPrime.YearMonthDuration)">
      <summary>
            Returns the value of the <see cref="T:XmlPrime.YearMonthDuration"/> operand (the sign of the operand is unchanged). 
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.YearMonthDuration"/> operand.</param>
      <returns>The value of the operand, <paramref name="duration"/>.</returns>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.Subtract(XmlPrime.YearMonthDuration,XmlPrime.YearMonthDuration)">
      <summary>
            Subtracts a <see cref="T:XmlPrime.YearMonthDuration"/> value from another <see cref="T:XmlPrime.YearMonthDuration"/> value. 
            </summary>
      <param name="duration1">The <see cref="T:XmlPrime.YearMonthDuration"/> to subtract from.</param>
      <param name="duration2">The <see cref="T:XmlPrime.YearMonthDuration"/> to subtract.</param>
      <returns>
            A <see cref="T:XmlPrime.YearMonthDuration"/> that is the result of subtracting <paramref name="duration2"/> from
            <paramref name="duration1"/>.
            </returns>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.YearMonthDuration.MinValue"/> or greater than <see cref="F:XmlPrime.YearMonthDuration.MaxValue"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.TryParse(System.String,XmlPrime.YearMonthDuration@)">
      <summary>
            Converts a lexical representation of an <c>xs:yearMonthDuration</c> to its <see cref="T:XmlPrime.YearMonthDuration"/>
            equivalent.  A return value indicates whether the conversion succeeded or failed.		
            </summary>
      <param name="value">The lexical representation of an <c>xs:yearMonthDuration</c> to convert.</param>
      <param name="result">
            When this method returns, contains the <see cref="T:XmlPrime.YearMonthDuration"/> value equivalent to the
            <c>xs:yearMonthDuration</c> represented by <paramref name="value"/> if the conversion succeeded, or zero (<c>PT0S</c>) if
            the conversion failed.
            </param>
      <returns>
        <see langword="true"/> if the conversion succeeded; otherwise <see langword="false"/>.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.#ctor(System.Int64)">
      <overloads>Initializes a new instance of the <see cref="T:XmlPrime.YearMonthDuration"/> structure.</overloads>
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.YearMonthDuration"/> structure with the specified duration in
            months.
            </summary>
      <param name="months">The duration in months.</param>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.YearMonthDuration"/> structure with the specified duration in 
            years and months.
            </summary>
      <param name="year">The number of years in the duration.</param>
      <param name="month">The number of months in the duration.</param>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.Equals(System.Object)">
      <overloads>
            Determines whether two <see cref="T:XmlPrime.YearMonthDuration"/> instances have the same value.
            </overloads>
      <summary>
            Determines whether this instance is equal to a specified object.
            </summary>
      <param name="obj">An object to compare to this instance.</param>
      <returns>
        <see langword="true"/> if <paramref name="obj"/> is an instance of <see cref="T:XmlPrime.YearMonthDuration"/>
            and equals the value of this instance; otherwise <see langword="false"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.ToString">
      <summary>
            Returns the canonical lexical representation of this <see cref="T:XmlPrime.YearMonthDuration"/>.
            </summary>
      <returns>The canonical lexical representation of this <see cref="T:XmlPrime.YearMonthDuration"/>.</returns>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.CompareTo(XmlPrime.YearMonthDuration)">
      <summary>
            Compares this instance to a specified <see cref="T:XmlPrime.YearMonthDuration"/> and returns an integer that 
            indicates whether the value of this instance is less than, equal to, or greater than the value of the 
            specified <see cref="T:XmlPrime.YearMonthDuration"/>.
            </summary>
      <param name="other">The <see cref="T:XmlPrime.YearMonthDuration"/> to compare this instance with.</param>
      <returns>
        <para>A signed number that indicates the relative order of this instance and <paramref name="other"/>.
            The return value has the following meanings.</para>
        <list type="bullet">
          <item>
            <description>Less than zero indicates that this instance is less than <paramref name="other"/>.</description>
          </item>
          <item>
            <description>Zero indicates that this instance is equal to <paramref name="other"/>.</description>
          </item>
          <item>
            <description>Greater than zero  indicates that this instance is greater than <paramref name="other"/>.</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.Equals(XmlPrime.YearMonthDuration)">
      <summary>
            Indicates whether this instance is equal to another <see cref="T:XmlPrime.YearMonthDuration"/>.
            </summary>
      <param name="other">A <see cref="T:XmlPrime.YearMonthDuration"/> to compare with this object.</param>
      <returns>
        <see langword="true"/> if <paramref name="other"/> equals the value of this instance; otherwise,
            <see langword="false"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.op_Addition(XmlPrime.YearMonthDuration,XmlPrime.YearMonthDuration)">
      <summary>
            Adds two specified <see cref="T:XmlPrime.YearMonthDuration"/> values.
            </summary>
      <param name="duration1">The first <see cref="T:XmlPrime.YearMonthDuration"/> to add.</param>
      <param name="duration2">The second <see cref="T:XmlPrime.YearMonthDuration"/> to add.</param>
      <returns>A <see cref="T:XmlPrime.YearMonthDuration"/> that is the sum of <paramref name="duration1"/> and <paramref name="duration2"/>.</returns>
      <exception cref="T:System.OverflowException">The sum of <paramref name="duration1"/> and <paramref name="duration2"/> is less
            than <see cref="F:XmlPrime.YearMonthDuration.MinValue"/> or greater than <see cref="F:XmlPrime.YearMonthDuration.MaxValue"/>.</exception>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.op_Subtraction(XmlPrime.YearMonthDuration,XmlPrime.YearMonthDuration)">
      <summary>
            Subtracts a <see cref="T:XmlPrime.YearMonthDuration"/> value from another <see cref="T:XmlPrime.YearMonthDuration"/> value. 
            </summary>
      <param name="duration1">The <see cref="T:XmlPrime.YearMonthDuration"/> to subtract from.</param>
      <param name="duration2">The <see cref="T:XmlPrime.YearMonthDuration"/> to subtract.</param>
      <returns>
            A <see cref="T:XmlPrime.YearMonthDuration"/> that is the result of subtracting <paramref name="duration2"/> from
            <paramref name="duration1"/>.
            </returns>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.YearMonthDuration.MinValue"/> or greater than <see cref="F:XmlPrime.YearMonthDuration.MaxValue"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.op_UnaryPlus(XmlPrime.YearMonthDuration)">
      <summary>
            Returns the value of the <see cref="T:XmlPrime.YearMonthDuration"/> operand (the sign of the operand is unchanged). 
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.YearMonthDuration"/> operand.</param>
      <returns>The value of the operand, <paramref name="duration"/>.</returns>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.op_UnaryNegation(XmlPrime.YearMonthDuration)">
      <summary>
            Negates the value of the specified <see cref="T:XmlPrime.YearMonthDuration"/> operand. 
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.YearMonthDuration"/> operand.</param>
      <returns>The additive inverse of <see cref="T:XmlPrime.YearMonthDuration"/>.</returns>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.YearMonthDuration.MinValue"/> or greater than <see cref="F:XmlPrime.YearMonthDuration.MaxValue"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.op_Multiply(XmlPrime.YearMonthDuration,System.Double)">
      <overloads>Multiplies a <see cref="T:XmlPrime.YearMonthDuration"/> value by a <see cref="T:System.Double"/> value.</overloads>
      <summary>
            Multiplies the specified <see cref="T:XmlPrime.YearMonthDuration"/> value by a <see cref="T:System.Double"/> value.
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.YearMonthDuration"/> value to multiply.</param>
      <param name="value">The <see cref="T:System.Double"/> value to multiply by.</param>
      <remarks>The result is rounded to the nearest month, as per the <c>fn:round</c> function.</remarks>
      <returns>
            The <see cref="T:XmlPrime.YearMonthDuration"/> result of multiplying <paramref name="duration"/> by 
            <paramref name="value"/>.
            </returns>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.YearMonthDuration.MinValue"/> or greater than <see cref="F:XmlPrime.YearMonthDuration.MaxValue"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
            The value of <paramref name="value"/> was <see cref="F:System.Double.NaN"/>.
            </exception>
      <seealso href="http://www.w3.org/TR/xquery-operators/#func-round">[FO] 6.4.4 fn:round</seealso>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.op_Multiply(System.Double,XmlPrime.YearMonthDuration)">
      <summary>
            Multiplies the specified <see cref="T:XmlPrime.YearMonthDuration"/> value by a <see cref="T:System.Double"/> value.
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.YearMonthDuration"/> value to multiply.</param>
      <param name="value">The <see cref="T:System.Double"/> value to multiply by.</param>
      <remarks>The result is rounded to the nearest month, as per the <c>fn:round</c> function.</remarks>
      <returns>
            The <see cref="T:XmlPrime.YearMonthDuration"/> result of multiplying <paramref name="duration"/> by 
            <paramref name="value"/>.
            </returns>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.YearMonthDuration.MinValue"/> or greater than <see cref="F:XmlPrime.YearMonthDuration.MaxValue"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
            The value of <paramref name="value"/> was <see cref="F:System.Double.NaN"/>.
            </exception>
      <seealso href="http://www.w3.org/TR/xquery-operators/#func-round">[FO] 6.4.4 fn:round</seealso>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.op_Division(XmlPrime.YearMonthDuration,System.Double)">
      <overloads>
            Divides the specified <see cref="T:XmlPrime.YearMonthDuration"/> value with <see cref="T:XmlPrime.DayTimeDuration"/> or 
            <see cref="T:System.Double"/> value.
            </overloads>
      <summary>
            Divides the specified <see cref="T:XmlPrime.YearMonthDuration"/> value by a <see cref="T:System.Double"/> value.
            </summary>
      <param name="duration">The <see cref="T:XmlPrime.YearMonthDuration"/> to divide.</param>
      <param name="value">The <see cref="T:System.Double"/> to divide by. </param>
      <returns>The <see cref="T:XmlPrime.YearMonthDuration"/> result of dividing <paramref name="duration"/> by <paramref name="value"/>.</returns>
      <remarks>The result is rounded to the nearest month, as per the <c>fn:round</c> function.</remarks>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="value"/> is zero.</exception>
      <exception cref="T:System.OverflowException">
            The return value would be less than <see cref="F:XmlPrime.YearMonthDuration.MinValue"/> or greater than <see cref="F:XmlPrime.YearMonthDuration.MaxValue"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
            The value of <paramref name="value"/> was <see cref="F:System.Double.NaN"/>.
            </exception>
      <seealso href="http://www.w3.org/TR/xquery-operators/#func-round">[FO] 6.4.4 fn:round</seealso>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.op_Division(XmlPrime.YearMonthDuration,XmlPrime.YearMonthDuration)">
      <summary>
            Divides the specified <see cref="T:XmlPrime.YearMonthDuration"/> value by another <see cref="T:XmlPrime.YearMonthDuration"/> value.
            </summary>
      <param name="duration1">The <see cref="T:XmlPrime.YearMonthDuration"/> to divide.</param>
      <param name="duration2">The <see cref="T:XmlPrime.YearMonthDuration"/> to divide by. </param>
      <returns>The <see cref="T:System.Decimal"/> result of dividing <paramref name="duration1"/> by <paramref name="duration2"/>.</returns>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="duration2"/> is zero.</exception>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.op_Equality(XmlPrime.YearMonthDuration,XmlPrime.YearMonthDuration)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.YearMonthDuration"/> is equal to another specified <see cref="T:XmlPrime.YearMonthDuration"/>.
            </summary>
      <param name="duration1">The first <see cref="T:XmlPrime.YearMonthDuration"/> to compare.</param>
      <param name="duration2">The second <see cref="T:XmlPrime.YearMonthDuration"/> to compare.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.YearMonthDuration"/> values are equal, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.op_Inequality(XmlPrime.YearMonthDuration,XmlPrime.YearMonthDuration)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.YearMonthDuration"/> is not equal to another specified <see cref="T:XmlPrime.YearMonthDuration"/>.
            </summary>
      <param name="duration1">The first <see cref="T:XmlPrime.YearMonthDuration"/> to compare.</param>
      <param name="duration2">The second <see cref="T:XmlPrime.YearMonthDuration"/> to compare.</param>
      <returns>
        <see langword="true"/> if the two <see cref="T:XmlPrime.YearMonthDuration"/> values are not equal, <see langword="false"/> otherwise.</returns>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.op_LessThan(XmlPrime.YearMonthDuration,XmlPrime.YearMonthDuration)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.YearMonthDuration"/> is less than another specified <see cref="T:XmlPrime.YearMonthDuration"/>.
            </summary>
      <param name="duration1">The first <see cref="T:XmlPrime.YearMonthDuration"/> to compare.</param>
      <param name="duration2">The second <see cref="T:XmlPrime.YearMonthDuration"/> to compare.</param>
      <returns>
        <see langword="true"/> if the <paramref name="duration1"/> is less than <paramref name="duration2"/>; otherwise, <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.op_LessThanOrEqual(XmlPrime.YearMonthDuration,XmlPrime.YearMonthDuration)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.YearMonthDuration"/> is less than or equal to another specified <see cref="T:XmlPrime.YearMonthDuration"/>.
            </summary>
      <param name="duration1">The first <see cref="T:XmlPrime.YearMonthDuration"/> to compare.</param>
      <param name="duration2">The second <see cref="T:XmlPrime.YearMonthDuration"/> to compare.</param>
      <returns>
        <see langword="true"/> if the <paramref name="duration1"/> is less than or equal to <paramref name="duration2"/>; otherwise, <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.op_GreaterThan(XmlPrime.YearMonthDuration,XmlPrime.YearMonthDuration)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.YearMonthDuration"/> is greater than another specified <see cref="T:XmlPrime.YearMonthDuration"/>.
            </summary>
      <param name="duration1">The first <see cref="T:XmlPrime.YearMonthDuration"/> to compare.</param>
      <param name="duration2">The second <see cref="T:XmlPrime.YearMonthDuration"/> to compare.</param>
      <returns>
        <see langword="true"/> if the <paramref name="duration1"/> is greater than <paramref name="duration2"/>; otherwise, <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.YearMonthDuration.op_GreaterThanOrEqual(XmlPrime.YearMonthDuration,XmlPrime.YearMonthDuration)">
      <summary>
            Indicates whether a specified <see cref="T:XmlPrime.YearMonthDuration"/> is greater than or equal to another specified <see cref="T:XmlPrime.YearMonthDuration"/>.
            </summary>
      <param name="duration1">The first <see cref="T:XmlPrime.YearMonthDuration"/> to compare.</param>
      <param name="duration2">The second <see cref="T:XmlPrime.YearMonthDuration"/> to compare.</param>
      <returns>
        <see langword="true"/> if the <paramref name="duration1"/> is greater than or equal to <paramref name="duration2"/>; otherwise, <see langword="false"/>.</returns>
    </member>
    <member name="P:XmlPrime.YearMonthDuration.Months">
      <summary>
            Gets the months component of the current <see cref="T:XmlPrime.YearMonthDuration"/>. 
            </summary>
      <value>The months component of this duration.  The values range between -11 and 11.</value>
    </member>
    <member name="P:XmlPrime.YearMonthDuration.TotalMonths">
      <summary>
            Gets the value of the current <see cref="T:XmlPrime.YearMonthDuration"/> expressed as a number of months.
            </summary>
      <value>The total number of months represented by this duration. The value can be positive or negative.</value>
    </member>
    <member name="P:XmlPrime.YearMonthDuration.Years">
      <summary>
            Gets the years component of the current <see cref="T:XmlPrime.YearMonthDuration"/>. 
            </summary>
      <value>The years component of this duration. The value can be positive or negative.</value>
    </member>
    <member name="T:XmlPrime.XdmDocument">
      <summary>
            	Provides a fast, read-only, in-memory representation of an XML document using the XQuery 1.0 and XPath 2.0 Data
            	Model (XDM).
            </summary>
      <remarks>
        <para>
            		The <see cref="T:XmlPrime.XdmDocument"/> is the preferred document type for documents used in an XQuery  program, an
            		XPath expression, or an XSL transformation.
            	</para>
        <para>The <see cref="T:XmlPrime.XdmDocument"/> differs from <see cref="T:System.Xml.XPath.XPathDocument"/> in the following respects:</para>
        <list type="bullet">
          <item>
            <description>When the source <see cref="T:System.Xml.XmlReader"/> is a validating reader, XML Schema type information is
            		      	exposed through the <see cref="P:System.Xml.XPath.XPathNavigator.SchemaInfo"/> property.</description>
          </item>
          <item>
            <description>For elements with complex-only content (as defined by XML Schema), any white space text node children will
            		      	be discarded.</description>
          </item>
        </list>
        <para>The current <see cref="T:XmlPrime.XdmDocument"/> implementation is currently unable to read external DTDs, 
            		which is required to determine which attributes are marked as ID or IDREFS.  This is because the
            		<see cref="T:System.Xml.XmlReader"/> class does not expose the types of attributes declared in a DTD.  This has the 
            		effect that the <c>fn:id</c> and <c>fn:idref</c> functions may not work correctly.</para>
        <para>Markup declarations specified directly in the internal subset are processed to determine the types of
            		attributes.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XdmDocument.#ctor(System.Xml.XmlReader)">
      <overloads>Initializes a new instance of the <see cref="T:XmlPrime.XdmDocument"/> class.</overloads>
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XdmDocument"/> class from the XML data that is contained in 
            	the specified <see cref="T:System.Xml.XmlReader"/> object.
            </summary>
      <param name="xmlReader">The <see cref="T:System.Xml.XmlReader"/> from which to read the document.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlReader"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:System.Xml.XmlException">An error was encountered in the XML data.</exception>
    </member>
    <member name="M:XmlPrime.XdmDocument.#ctor(System.Xml.XmlReader,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.XdmDocument"/> class from the XML data that is contained in
            the specified <see cref="T:System.Xml.XmlReader"/> object.
            </summary>
      <param name="xmlReader">The <see cref="T:System.Xml.XmlReader"/> from which to read the document.</param>
      <param name="preserveLineInfo">If set to <see langword="true"/> preserves line number information, if available from the 
            <paramref name="xmlReader"/>; otherwise <see langword="false"/>.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlReader"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:System.Xml.XmlException">An error was encountered in the XML data.</exception>
      <overloads>Initializes a new instance of the <see cref="T:XmlPrime.XdmDocument"/> class.</overloads>
    </member>
    <member name="M:XmlPrime.XdmDocument.#ctor(System.IO.Stream)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XdmDocument"/> class from the XML data that is contained in 
            	the specified <see cref="T:System.IO.Stream"/> object.
            </summary>
      <param name="stream">The <see cref="T:System.IO.Stream"/> from which to read the document.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:System.Xml.XmlException">An error was encountered in the XML data.</exception>
    </member>
    <member name="M:XmlPrime.XdmDocument.#ctor(System.IO.Stream,System.Xml.XmlSpace)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XdmDocument"/> class from the XML data that is contained in 
            	the specified <see cref="T:System.IO.Stream"/> object.
            </summary>
      <param name="stream">The <see cref="T:System.IO.Stream"/> from which to read the document.</param>
      <param name="xmlSpace">An <see cref="T:System.Xml.XmlSpace"/> value.</param>
      <remarks>
        <para>The <see cref="T:System.Xml.XmlSpace"/> value passed as a parameter specifies whether to preserve white space. 
            		<see cref="F:System.Xml.XmlSpace.Preserve"/> preserves all white space.
            		<see cref="F:System.Xml.XmlSpace.Default"/> preserves only significant white space.</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:System.Xml.XmlException">An error was encountered in the XML data.</exception>
    </member>
    <member name="M:XmlPrime.XdmDocument.#ctor(System.String,System.IO.Stream)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XdmDocument"/> class from the XML data that is contained in 
            	the specified <see cref="T:System.IO.Stream"/> object.
            </summary>
      <param name="uri">The URI of the document.</param>
      <param name="stream">The <see cref="T:System.IO.Stream"/> from which to read the document.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:System.Xml.XmlException">An error was encountered in the XML data.</exception>
    </member>
    <member name="M:XmlPrime.XdmDocument.#ctor(System.String,System.IO.TextReader)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XdmDocument"/> class from the XML data that is contained in 
            	the specified <see cref="T:System.IO.TextReader"/> object.
            </summary>
      <param name="uri">The URI of the document.</param>
      <param name="textReader">The <see cref="T:System.IO.TextReader"/> from which to read the document.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:System.Xml.XmlException">An error was encountered in the XML data.</exception>
    </member>
    <member name="M:XmlPrime.XdmDocument.#ctor(System.IO.TextReader,System.Xml.XmlSpace)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XdmDocument"/> class from the XML data that is contained in 
            	the specified <see cref="T:System.IO.TextReader"/> object.
            </summary>
      <param name="textReader">The <see cref="T:System.IO.TextReader"/> from which to read the document.</param>
      <param name="xmlSpace">An <see cref="T:System.Xml.XmlSpace"/> value.</param>
      <remarks>
        <para>The <see cref="T:System.Xml.XmlSpace"/> value passed as a parameter specifies whether to preserve white space. 
            		<see cref="F:System.Xml.XmlSpace.Preserve"/> preserves all white space.
            		<see cref="F:System.Xml.XmlSpace.Default"/> preserves only significant white space.</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:System.Xml.XmlException">An error was encountered in the XML data.</exception>
    </member>
    <member name="M:XmlPrime.XdmDocument.#ctor(System.IO.TextReader)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XdmDocument"/> class from the XML data that is contained in 
            	the specified <see cref="T:System.IO.TextReader"/> object.
            </summary>
      <param name="textReader">The <see cref="T:System.IO.TextReader"/> from which to read the document.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:System.Xml.XmlException">An error was encountered in the XML data.</exception>
    </member>
    <member name="M:XmlPrime.XdmDocument.#ctor(System.String,System.IO.TextReader,System.Xml.XmlSpace)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XdmDocument"/> class from the XML data that is contained in 
            	the specified <see cref="T:System.IO.TextReader"/> object.
            </summary>
      <param name="uri">The URI of the document.</param>
      <param name="textReader">The <see cref="T:System.IO.TextReader"/> from which to read the document.</param>
      <param name="xmlSpace">An <see cref="T:System.Xml.XmlSpace"/> value.</param>
      <remarks>
        <para>The <see cref="T:System.Xml.XmlSpace"/> value passed as a parameter specifies whether to preserve white space. 
            		<see cref="F:System.Xml.XmlSpace.Preserve"/> preserves all white space.
            		<see cref="F:System.Xml.XmlSpace.Default"/> preserves only significant white space.</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:System.Xml.XmlException">An error was encountered in the XML data.</exception>
    </member>
    <member name="M:XmlPrime.XdmDocument.#ctor(System.String,System.Xml.XmlSpace)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XdmDocument"/> class from the XML data in the specified file.
            </summary>
      <param name="uri">The URI of the XML document.</param>
      <param name="xmlSpace">An <see cref="T:System.Xml.XmlSpace"/> value.</param>
      <remarks>
        <para>The <see cref="T:System.Xml.XmlSpace"/> value passed as a parameter specifies whether to preserve white space. 
            		<see cref="F:System.Xml.XmlSpace.Preserve"/> preserves all white space.
            		<see cref="F:System.Xml.XmlSpace.Default"/> preserves only significant white space.</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:System.Xml.XmlException">An error was encountered in the XML data.</exception>
    </member>
    <member name="M:XmlPrime.XdmDocument.#ctor(System.String)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XdmDocument"/> class from the XML data in the specified file.
            </summary>
      <param name="uri">The URI of the XML document.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:System.Xml.XmlException">An error was encountered in the XML data.</exception>
    </member>
    <member name="M:XmlPrime.XdmDocument.#ctor(System.String,System.IO.Stream,System.Xml.XmlSpace)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XdmDocument"/> class from the XML data that is contained in 
            	the specified <see cref="T:System.IO.Stream"/> object.
            </summary>
      <param name="uri">The URI of the document.</param>
      <param name="stream">The <see cref="T:System.IO.Stream"/> from which to read the document.</param>
      <param name="xmlSpace">An <see cref="T:System.Xml.XmlSpace"/> value.</param>
      <remarks>
        <para>The <see cref="T:System.Xml.XmlSpace"/> value passed as a parameter specifies whether to preserve white space. 
            		<see cref="F:System.Xml.XmlSpace.Preserve"/> preserves all white space.
            		<see cref="F:System.Xml.XmlSpace.Default"/> preserves only significant white space.</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:System.Xml.XmlException">An error was encountered in the XML data.</exception>
    </member>
    <member name="M:XmlPrime.XdmDocument.#ctor(System.String,System.Xml.XmlReader)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XdmDocument"/> class from the XML data that is contained in 
            	the specified <see cref="T:System.Xml.XmlReader"/> object, with the specified document URI.
            </summary>
      <param name="xmlReader">The <see cref="T:System.Xml.XmlReader"/> from which to read the document.</param>
      <param name="uri">The URI of the document (this overrides the base URI in the XML reader).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlReader"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:System.Xml.XmlException">An error was encountered in the XML data.</exception>
    </member>
    <member name="M:XmlPrime.XdmDocument.#ctor(System.Xml.XmlReader,System.Xml.XmlSpace)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XdmDocument"/> class from the XML data that is contained in 
            	the specified <see cref="T:System.Xml.XmlReader"/> object with the specified white space handling.
            </summary>
      <param name="xmlReader">The <see cref="T:System.Xml.XmlReader"/> from which to read the document.</param>
      <param name="xmlSpace">An <see cref="T:System.Xml.XmlSpace"/> value.</param>
      <remarks>
        <para>The <see cref="T:System.Xml.XmlSpace"/> value passed as a parameter specifies whether to preserve white space. 
            		<see cref="F:System.Xml.XmlSpace.Preserve"/> preserves all white space.
            		<see cref="F:System.Xml.XmlSpace.Default"/> preserves only significant white space.</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlReader"/> is <see langword="null"/></exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:System.Xml.XmlException">An error was encountered in the XML data.</exception>
      <remarks>
            The document-uri property of the root node of the document will be taken to be the BaseURI of the <see cref="T:System.Xml.XmlReader"/>.
            This is because the <xee cref="T:System.Xml.XmlReader"/> interface does not expose the document-uri property.  To set the document-uri explicitly,
            use an overload which takes the document URI as a parameter.
            </remarks>
    </member>
    <member name="M:XmlPrime.XdmDocument.#ctor(System.Xml.XmlReader,System.Xml.XmlSpace,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:XmlPrime.XdmDocument"/> class from the XML data that is contained in
            the specified <see cref="T:System.Xml.XmlReader"/> object with the specified white space handling.
            </summary>
      <param name="xmlReader">The <see cref="T:System.Xml.XmlReader"/> from which to read the document.</param>
      <param name="xmlSpace">An <see cref="T:System.Xml.XmlSpace"/> value.</param>
      <param name="preseveLineInfo">If set to <see langword="true"/> preserves line number information, if available from the 
            <paramref name="xmlReader"/>; otherwise <see langword="false"/>.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlReader"/> is <see langword="null"/></exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:System.Xml.XmlException">An error was encountered in the XML data.</exception>
      <remarks>
            The <see cref="T:System.Xml.XmlSpace"/> value passed as a parameter specifies whether to preserve white space.
            <see cref="F:System.Xml.XmlSpace.Preserve"/> preserves all white space.
            <see cref="F:System.Xml.XmlSpace.Default"/> preserves only significant white space.
            </remarks>
    </member>
    <member name="M:XmlPrime.XdmDocument.#ctor(System.String,System.Xml.XmlReader,System.Xml.XmlSpace)">
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.XdmDocument"/> class from the XML data that is contained in 
            	the specified <see cref="T:System.Xml.XmlReader"/> object with the specified document URI and white space handling.
            </summary>
      <param name="uri">The URI of the document (this overrides the document URI in the XML reader).</param>
      <param name="xmlReader">The <see cref="T:System.Xml.XmlReader"/> from which to read the document.</param>
      <param name="xmlSpace">An <see cref="T:System.Xml.XmlSpace"/> value.</param>
      <remarks>
        <para>The <see cref="T:System.Xml.XmlSpace"/> value passed as a parameter specifies whether to preserve white space. 
            		<see cref="F:System.Xml.XmlSpace.Preserve"/> preserves all white space.
            		<see cref="F:System.Xml.XmlSpace.Default"/> preserves only significant white space.</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlReader"/> is <see langword="null"/></exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:System.Xml.XmlException">An error was encountered in the XML data.</exception>
    </member>
    <member name="M:XmlPrime.XdmDocument.CreateNavigator">
      <summary>
            	Returns a read-only <see cref="T:XmlPrime.XdmNavigator"/> for navigating through nodes of this <see cref="T:XmlPrime.XdmDocument"/>.
            </summary>
      <returns>A read-only <see cref="T:XmlPrime.XdmNavigator"/> object.</returns>
      <remarks>
        <para>The <see cref="T:XmlPrime.XdmNavigator"/> is positioned on the root element of the <see cref="T:XmlPrime.XdmDocument"/>. 
            		If there is no root element, the <see cref="T:XmlPrime.XdmNavigator"/> is positioned on the first node in the 
            		<see cref="T:XmlPrime.XdmDocument"/>.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XdmDocument.System#Xml#XPath#IXPathNavigable#CreateNavigator">
      <summary>
            	Returns a read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> for navigating through nodes of this <see cref="T:XmlPrime.XdmDocument"/>.
            </summary>
      <returns>A read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object.</returns>
      <remarks>
        <para>The <see cref="T:System.Xml.XPath.XPathNavigator"/> is positioned on the root element of the <see cref="T:XmlPrime.XdmDocument"/>. 
            		If there is no root element, the <see cref="T:System.Xml.XPath.XPathNavigator"/> is positioned on the first node in the 
            		<see cref="T:XmlPrime.XdmDocument"/>.</para>
      </remarks>
    </member>
    <member name="T:XmlPrime.XPath">
      <summary>
            	Provides a typed class that represents a compiled XPath 2.0 expression.
            </summary>
    </member>
    <member name="M:XmlPrime.XPath.Compile(System.String)">
      <overloads>
            	Compiles the specified XPath expression and returns an <see cref="T:XmlPrime.XPath"/> object that represents
            	the expression.
            </overloads>
      <summary>
            	Compiles an XPath expression and returns a <see cref="T:XmlPrime.XPath"/> object that represents the 
            	expression using a new <see cref="T:System.Xml.XmlNameTable"/> and the default settings.
            </summary>
      <param name="expression">An XPath expression.</param>
      <returns>
            	An <see cref="T:XmlPrime.XPath"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression"/> is <see langword="null"/></exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the expression.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="M:XmlPrime.XPath.Compile(System.String,System.Xml.XmlNameTable)">
      <summary>
            	Compiles an XPath expression and returns a <see cref="T:XmlPrime.XPath"/> object that represents the 
            	expression using the default settings.
            </summary>
      <param name="expression">An XPath expression.</param>
      <param name="nameTable">The name table used for documents used with this expression.</param>
      <returns>
            	An <see cref="T:XmlPrime.XPath"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression"/> or <paramref name="nameTable"/> is <see langword="null"/></exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the expression.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="M:XmlPrime.XPath.Compile(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
      <summary>
            	Compiles an XPath expression and returns a <see cref="T:XmlPrime.XPath"/> object that represents the 
            	expression with the specified in-scope namespaces.
            </summary>
      <param name="expression">An XPath expression.</param>
      <param name="nameTable">The name table used for documents used with this expression.</param>
      <param name="namespaces">The in scope namespaces for the expression.</param>
      <returns>
            	An <see cref="T:XmlPrime.XPath"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression"/> or <paramref name="nameTable"/> is <see langword="null"/></exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the expression.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="M:XmlPrime.XPath.Compile(System.String,XmlPrime.XPathSettings)">
      <summary>
            	Compiles an XPath expression and returns a <see cref="T:XmlPrime.XPath"/> object that represents the 
            	expression.
            </summary>
      <param name="expression">An XPath expression.</param>
      <param name="settings">The initial static context settings.</param>
      <returns>
            	An <see cref="T:XmlPrime.XPath"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression"/> or <paramref name="settings"/> is <see langword="null"/></exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the expression.</exception>
    </member>
    <member name="M:XmlPrime.XPath.CompilePattern(System.String,XmlPrime.XPathSettings)">
      <summary>
            	Compiles an XPath pattern and returns a <see cref="T:XmlPrime.XPath"/> object that represents the 
            	expression.
            </summary>
      <param name="pattern">An XPath pattern.</param>
      <param name="settings">The initial static context settings.</param>
      <returns>
            	An <see cref="T:XmlPrime.XPath"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern"/> or <paramref name="settings"/> is <see langword="null"/></exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the expression.</exception>
    </member>
    <member name="M:XmlPrime.XPath.ToString">
      <summary>
            	Returns a <see cref="T:System.String"/> representing the expression execution plan.
            </summary>
      <returns>A <see cref="T:System.String"/> representing the expression execution plan.</returns>
    </member>
    <member name="M:XmlPrime.XPath.Evaluate(XmlPrime.DynamicContextSettings)">
      <overloads>Returns an <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the result of evaluating the XPath expression</overloads>
      <summary>
            	Returns an <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the result of evaluating the XPath expression.
            </summary>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <returns>
            	An <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the result of evaluating the XPath expression.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/> is <see langword="null"/>.</exception>
      <remarks>
        <para>
            	The items in the returned <see cref="T:System.Collections.Generic.IEnumerable`1"/> will all be instances of
            <see cref="T:System.Xml.XPath.XPathNavigator"/> (if the expression returns a node), <see cref="T:XmlPrime.XPathAtomicValue"/> (if the expression returns an 
            atomic value) or <see cref="T:XmlPrime.XPathFunctionItem"/> (if the expression returns a function item).
            	</para>
        <para>
            		The results of the expression are only evaluated whilst they are enumerated.  Any errors encountered during
            		evaluation may be thrown from the <see cref="M:System.Collections.IEnumerator.MoveNext"/> method and 
            		<see cref="P:System.Collections.Generic.IEnumerator`1.Current"/> property of the enumerator over the 
            		<see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            	</para>
      </remarks>
      <exception cref="T:XmlPrime.XdmException">
            	An error occurred evaluating the expression.
            </exception>
    </member>
    <member name="M:XmlPrime.XPath.Evaluate(System.Xml.XPath.XPathItem)">
      <summary>
            	Returns an <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the result of evaluating the XPath expression.
            </summary>
      <param name="contextItem">The initial context item for the expression.</param>
      <returns>
            	An <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the result of evaluating the XPath expression.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contextItem"/> is <see langword="null"/>.</exception>
      <remarks>
        <para>
            	The items in the returned <see cref="T:System.Collections.Generic.IEnumerable`1"/> will all be instances of
            <see cref="T:System.Xml.XPath.XPathNavigator"/> (if the expression returns a node), <see cref="T:XmlPrime.XPathAtomicValue"/> (if the expression returns an 
            atomic value) or <see cref="T:XmlPrime.XPathFunctionItem"/> (if the expression returns a function item).
            	</para>
        <para>
            		The results of the expression are only evaluated whilst they are enumerated.  Any errors encountered during
            		evaluation may be thrown from the <see cref="M:System.Collections.IEnumerator.MoveNext"/> method and 
            		<see cref="P:System.Collections.Generic.IEnumerator`1.Current"/> property of the enumerator over the 
            		<see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            	</para>
      </remarks>
      <exception cref="T:XmlPrime.XdmException">
            	An error occurred evaluating the expression.
            </exception>
    </member>
    <member name="M:XmlPrime.XPath.Evaluate(System.Xml.XPath.XPathItem,System.Int64,System.Int64)">
      <summary>
            	Returns an <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the result of evaluating the XPath expression.
            </summary>
      <param name="contextItem">The initial context item for the expression.</param>
      <param name="contextSize">The initial context size for the expression.</param>
      <param name="contextPosition">The initial context position for the expression.</param>
      <returns>
            	An <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the result of evaluating the XPath expression.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contextItem"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="contextSize"/> is outside of the range 1 to <see cref="F:System.Int64.MaxValue"/>, or
            <paramref name="contextPosition"/> is outside of the range 1 to <paramref name="contextSize"/>.
            </exception>
      <remarks>
        <para>
            	The items in the returned <see cref="T:System.Collections.Generic.IEnumerable`1"/> will all be instances of
            <see cref="T:System.Xml.XPath.XPathNavigator"/> (if the expression returns a node), <see cref="T:XmlPrime.XPathAtomicValue"/> (if the expression returns an 
            atomic value) or <see cref="T:XmlPrime.XPathFunctionItem"/> (if the expression returns a function item).
            	</para>
        <para>
            		The results of the expression are only evaluated whilst they are enumerated.  Any errors encountered during
            		evaluation may be thrown from the <see cref="M:System.Collections.IEnumerator.MoveNext"/> method and 
            		<see cref="P:System.Collections.Generic.IEnumerator`1.Current"/> property of the enumerator over the 
            		<see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            	</para>
      </remarks>
      <exception cref="T:XmlPrime.XdmException">
            	An error occurred evaluating the expression.
            </exception>
    </member>
    <member name="M:XmlPrime.XPath.Evaluate">
      <summary>
            	Returns an <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the result of evaluating the XPath expression.
            </summary>
      <returns>
            	An <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the result of evaluating the XPath expression.
            </returns>
      <remarks>
        <para>
            	The items in the returned <see cref="T:System.Collections.Generic.IEnumerable`1"/> will all be instances of
            <see cref="T:System.Xml.XPath.XPathNavigator"/> (if the expression returns a node), <see cref="T:XmlPrime.XPathAtomicValue"/> (if the expression returns an 
            atomic value) or <see cref="T:XmlPrime.XPathFunctionItem"/> (if the expression returns a function item).
            	</para>
        <para>
            		The results of the expression are only evaluated whilst they are enumerated.  Any errors encountered during
            		evaluation may be thrown from the <see cref="M:System.Collections.IEnumerator.MoveNext"/> method and 
            		<see cref="P:System.Collections.Generic.IEnumerator`1.Current"/> property of the enumerator over the 
            		<see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            	</para>
      </remarks>
      <exception cref="T:XmlPrime.XdmException">
            	An error occurred evaluating the expression.
            </exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="M:XmlPrime.XPath.EvaluateToItem(XmlPrime.DynamicContextSettings)">
      <overloads>
            	Returns an <see cref="T:System.Xml.XPath.XPathItem"/> representing the result of evaluating the XPath expression,
            	or <see langword="null"/> if the expression returns the empty sequence.
            </overloads>
      <summary>
            	Returns an <see cref="T:System.Xml.XPath.XPathItem"/> representing the result of evaluating the XPath expression,
            	or <see langword="null"/> if the expression returns the empty sequence.
            </summary>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <returns>
            	An <see cref="T:System.Xml.XPath.XPathItem"/>, or <see langword="null"/> if the expression returns the empty sequence.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.XdmException">
            	An error occurred evaluating the expression.  An <c>XPST0004</c> error is raised if the expression did not 
            	return exactly one item.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            	An error is raised if the expression returns more than one item.
            </exception>
      <remarks>
        <para>The item returned will either be an instance of <see cref="T:System.Xml.XPath.XPathNavigator"/> (if the expression returns a node),
            <see cref="T:XmlPrime.XPathAtomicValue"/> (if the expression returns an atomic value) or <see cref="T:XmlPrime.XPathFunctionItem"/>
            (if the expression returns a function item).</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XPath.EvaluateToItem(System.Xml.XPath.XPathItem)">
      <summary>
            	Returns an <see cref="T:System.Xml.XPath.XPathItem"/> representing the result of evaluating the XPath expression,
            	or <see langword="null"/> if the expression returns the empty sequence.
            </summary>
      <param name="contextItem">The initial context item for the expression.</param>
      <returns>
            	An <see cref="T:System.Xml.XPath.XPathItem"/>, or <see langword="null"/> if the expression returns the empty sequence.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contextItem"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.XdmException">
            	An error occurred evaluating the expression.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            	An error is raised if the expression returns more than one item.
            </exception>
      <remarks>
        <para>The item returned will either be an instance of <see cref="T:System.Xml.XPath.XPathNavigator"/> (if the expression returns a node),
            <see cref="T:XmlPrime.XPathAtomicValue"/> (if the expression returns an atomic value) or <see cref="T:XmlPrime.XPathFunctionItem"/>
            (if the expression returns a function item).</para>
      </remarks>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="M:XmlPrime.XPath.EvaluateToItem(System.Xml.XPath.XPathItem,System.Int64,System.Int64)">
      <summary>
            	Returns an <see cref="T:System.Xml.XPath.XPathItem"/> representing the result of evaluating the XPath expression,
            	or <see langword="null"/> if the expression returns the empty sequence.
            </summary>
      <param name="contextItem">The initial context item for the expression.</param>
      <param name="contextSize">The initial context size for the expression.</param>
      <param name="contextPosition">The initial context position for the expression.</param>
      <returns>
            	An <see cref="T:System.Xml.XPath.XPathItem"/>, or <see langword="null"/> if the expression returns the empty sequence.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contextItem"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="contextSize"/> is outside of the range 1 to <see cref="F:System.Int64.MaxValue"/>, or
            <paramref name="contextPosition"/> is outside of the range 1 to <paramref name="contextSize"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">
            	An error occurred evaluating the expression.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            	An error is raised if the expression returns more than one item.
            </exception>
      <remarks>
        <para>The item returned will either be an instance of <see cref="T:System.Xml.XPath.XPathNavigator"/> (if the expression returns a node),
            <see cref="T:XmlPrime.XPathAtomicValue"/> (if the expression returns an atomic value) or <see cref="T:XmlPrime.XPathFunctionItem"/>
            (if the expression returns a function item).</para>
      </remarks>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="M:XmlPrime.XPath.EvaluateToItem">
      <summary>
            	Returns an <see cref="T:System.Xml.XPath.XPathItem"/> representing the result of evaluating the XPath expression,
            	or <see langword="null"/> if the expression returns the empty sequence.
            </summary>
      <returns>
            	An <see cref="T:System.Xml.XPath.XPathItem"/>, or <see langword="null"/> if the expression returns the empty sequence.
            </returns>
      <remarks>
        <para>The item returned will either be an instance of <see cref="T:System.Xml.XPath.XPathNavigator"/> (if the expression returns a node),
            <see cref="T:XmlPrime.XPathAtomicValue"/> (if the expression returns an atomic value) or <see cref="T:XmlPrime.XPathFunctionItem"/>
            (if the expression returns a function item).</para>
      </remarks>
      <exception cref="T:XmlPrime.XdmException">
            	An error occurred evaluating the expression. 
            </exception>
      <exception cref="T:System.InvalidOperationException">
            	An error is raised if the expression returns more than one item.
            </exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="M:XmlPrime.XPath.Explain(System.Xml.XmlWriter)">
      <summary>
            	Writes the query execution plan to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="xmlWriter">The XML writer to which the query execution plan is to be written.</param>
    </member>
    <member name="P:XmlPrime.XPath.StaticType">
      <summary>
            	Gets an <see cref="T:XmlPrime.XdmType"/> which represents the result type of the expression as determined
            	by static type analysis.
            </summary>
      <value>An <see cref="T:XmlPrime.XdmType"/> which represents the result type of the expression as determined by static type analysis.</value>
    </member>
    <member name="T:XmlPrime.EmptyOrder">
      <summary>
            Specifies the ordering of empty-sequence values.
            </summary>
      <remarks>
        <para>The empty order policy controls the processing of empty sequences and <c>NaN</c> values as ordering keys
            in an order by clause in a FLWOR expression.</para>
        <para>Use the <see cref="P:XmlPrime.XQuerySettings.DefaultEmptyOrder"/> property to set the default order for empty sequences.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xquery/#id-orderby-return">[XQuery 1.0: An XML Query Language] 3.8.3 Order By and Return Clauses</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#id-empty-order-decl">[XQuery 1.0: An XML Query Language] 4.8 Empty Order Declaration</seealso>
    </member>
    <member name="F:XmlPrime.EmptyOrder.Least">
      <summary>
            The empty sequence is considered less than any single value, and <c>NaN</c> is considered less than any
            other value.
            </summary>
    </member>
    <member name="F:XmlPrime.EmptyOrder.Greatest">
      <summary>
            The empty sequence is considered greater than any single value, and <c>NaN</c> is considered greater than
            any other value.
            </summary>
    </member>
    <member name="T:XmlPrime.Serialization.XmlQualifiedNameCollection">
      <summary>
            Represents a set of XML qualified names.
            </summary>
      <remarks>
        <para>The <see cref="T:XmlPrime.Serialization.XmlQualifiedNameCollection"/> is used in the <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> to 
            specify the set of elements whose child text nodes should be serialized as CDATA sections.  This occurs
            during the character expansion phase of serialization.</para>
        <para>It is also used in the <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> to 
            specify the set of elements within which indentation should be suppressed.</para>
      </remarks>
      <seealso cref="P:XmlPrime.Serialization.XdmWriterSettings.CDataSectionElements"/>
      <seealso cref="P:XmlPrime.Serialization.XdmWriterSettings.SuppressIndentation"/>
      <seealso href="http://www.w3.org/TR/xslt-xquery-serialization/#serphases">[XSLT 2.0 and XQuery 1.0 Serialization] 4 Phases of Serialization</seealso>
    </member>
    <member name="M:XmlPrime.Serialization.XmlQualifiedNameCollection.Add(XmlPrime.QName)">
      <overloads>
            Adds the specified qualified name to the current <see cref="T:XmlPrime.Serialization.XmlQualifiedNameCollection"/>.
            </overloads>
      <summary>
            Adds the specified qualified name to the current <see cref="T:XmlPrime.Serialization.XmlQualifiedNameCollection"/>.
            </summary>
      <param name="qualifiedName">The  qualified name to add.</param>
    </member>
    <member name="M:XmlPrime.Serialization.XmlQualifiedNameCollection.Add(System.String,System.String)">
      <overloads>
            Adds the specified qualified name to the current <see cref="T:XmlPrime.Serialization.XmlQualifiedNameCollection"/>.
            </overloads>
      <summary>
            Adds the specified qualified name to the current <see cref="T:XmlPrime.Serialization.XmlQualifiedNameCollection"/>.
            </summary>
      <param name="localName">The local part of the qualified name to add.</param>
      <param name="ns">The namespace of the qualified name to add.</param>
    </member>
    <member name="M:XmlPrime.Serialization.XmlQualifiedNameCollection.Contains(System.String,System.String)">
      <overloads>
            Determines whether the <see cref="T:XmlPrime.Serialization.XmlQualifiedNameCollection"/> contains the specified qualified name.
            </overloads>
      <summary>
            Returns a value indicating whether the current collection contains the specified qualified name.
            </summary>
      <param name="localName">The local part of the qualified name.</param>
      <param name="ns">The namespace of the qualified name.</param>
      <returns>Returns <see langword="true"/> if the current collection contains the specified qualified name; otherwise <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.Serialization.XmlQualifiedNameCollection.Remove(System.String,System.String)">
      <overloads>
            Removes the specified qualified name from the current <see cref="T:XmlPrime.Serialization.XmlQualifiedNameCollection"/>.
            </overloads>
      <summary>
            Removes the specified qualified name from the current <see cref="T:XmlPrime.Serialization.XmlQualifiedNameCollection"/>.
            </summary>
      <param name="localName">The local part of the qualified name to remove.</param>
      <param name="ns">The namespace of the qualified name to remove.</param>
      <returns>
        <see langword="true"/> if the qualified name was removed, or <see langword="false"/>  if no such name exists in the collection.</returns>
    </member>
    <member name="M:XmlPrime.Serialization.XmlQualifiedNameCollection.Add(System.Xml.XmlQualifiedName)">
      <summary>
            Adds the specified qualified name to the current <see cref="T:XmlPrime.Serialization.XmlQualifiedNameCollection"/>.
            </summary>
      <param name="item">The qualified name to add.</param>
    </member>
    <member name="M:XmlPrime.Serialization.XmlQualifiedNameCollection.Clear">
      <summary>
            Removes all qualified names from the current <see cref="T:XmlPrime.Serialization.XmlQualifiedNameCollection"/>.
            </summary>
    </member>
    <member name="M:XmlPrime.Serialization.XmlQualifiedNameCollection.Contains(System.Xml.XmlQualifiedName)">
      <summary>
            Returns a value indicating whether the current <see cref="T:XmlPrime.Serialization.XmlQualifiedNameCollection"/> contains the specified qualified name.
            </summary>
      <param name="item">The qualified name.</param>
      <returns>Returns <see langword="true"/> if the current <see cref="T:XmlPrime.Serialization.XmlQualifiedNameCollection"/> contains the specified qualified name; otherwise <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.Serialization.XmlQualifiedNameCollection.CopyTo(System.Xml.XmlQualifiedName[],System.Int32)">
      <summary>
            Copies the elements of the <see cref="T:XmlPrime.Serialization.XmlQualifiedNameCollection"/> to the specified array starting at the specified index.
            </summary>
      <param name="array">The one-dimensional <see langword="System.Array"/> that is the destination of the copied elements.</param>
      <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
    </member>
    <member name="M:XmlPrime.Serialization.XmlQualifiedNameCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the qualified names in the <see cref="T:XmlPrime.Serialization.XmlQualifiedNameCollection"/>.
            </summary>
      <returns>An enumerator that can be used iterate through the qualified names in the <see cref="T:XmlPrime.Serialization.XmlQualifiedNameCollection"/>.</returns>
    </member>
    <member name="M:XmlPrime.Serialization.XmlQualifiedNameCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that iterates through a <see cref="T:XmlPrime.Serialization.XmlQualifiedNameCollection"/>.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the <see cref="T:XmlPrime.Serialization.XmlQualifiedNameCollection"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.Serialization.XmlQualifiedNameCollection.Remove(System.Xml.XmlQualifiedName)">
      <summary>
            Removes the specified qualified name from the current <see cref="T:XmlPrime.Serialization.XmlQualifiedNameCollection"/>.
            </summary>
      <param name="item">The qualified name to remove.</param>
      <returns>
        <see langword="true"/> if the qualified name was removed, or <see langword="false"/> if no such name exists in the collection.</returns>
    </member>
    <member name="P:XmlPrime.Serialization.XmlQualifiedNameCollection.Count">
      <summary>
            Gets the number of qualified names in the <see cref="T:XmlPrime.Serialization.XmlQualifiedNameCollection"/>.
            </summary>
      <value>
            The number of qualified names contained in the <see cref="T:XmlPrime.Serialization.XmlQualifiedNameCollection"/>.
            </value>
    </member>
    <member name="P:XmlPrime.Serialization.XmlQualifiedNameCollection.IsReadOnly">
      <summary>
            Gets a value indicating whether the <see cref="T:XmlPrime.Serialization.XmlQualifiedNameCollection"/> is read-only.
            </summary>
      <value>Always returns <see langword="false"/>.</value>
    </member>
    <member name="T:XmlPrime.Serialization.CharacterMappingDictionary">
      <summary>
            Represents a collection of mappings from a Unicode codepoint to a string which may be applied during 
            serialization.
            </summary>
      <remarks>
        <para>The <see cref="T:XmlPrime.Serialization.CharacterMappingDictionary"/> is used in the <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> to 
            specify the mapping from single Unicode characters to strings of Unicode characters.  This mapping is
            applied during the character expansion phase of serialization.</para>
      </remarks>
      <seealso cref="P:XmlPrime.Serialization.XdmWriterSettings.CharacterMapping"/>
      <seealso href="http://www.w3.org/TR/xslt-xquery-serialization/#serphases">[XSLT 2.0 and XQuery 1.0 Serialization] 4 Phases of Serialization</seealso>
    </member>
    <member name="M:XmlPrime.Serialization.CharacterMappingDictionary.Add(System.Char,System.String)">
      <overloads>
            Adds the specified character mapping.
            </overloads>
      <summary>
            Adds a mapping from a character to a string.
            </summary>
      <param name="key">The character to map.</param>
      <param name="value">The string to which <paramref name="key"/> will be mapped.</param>
    </member>
    <member name="M:XmlPrime.Serialization.CharacterMappingDictionary.ContainsKey(System.Char)">
      <overloads>
            Determines whether the <see cref="T:XmlPrime.Serialization.CharacterMappingDictionary"/> contains a mapping for the specified character.
            </overloads>
      <summary>
            Returns a value indicating whether the <see cref="T:XmlPrime.Serialization.CharacterMappingDictionary"/> contains a mapping for the character 
            specified by <paramref name="key"/>.
            </summary>
      <param name="key">The Unicode character to test.</param>
      <returns>
        <see langword="true"/> if a mapping exists; otherwise <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.Serialization.CharacterMappingDictionary.Remove(System.Char)">
      <overloads>Removes the mapping of the specified character.</overloads>
      <summary>
            Removes the mapping of the specified character.
            </summary>
      <param name="key">The mapped character to remove.</param>
      <returns>
        <see langword="true"/> if the mapping was removed, or <see langword="false"/> if no such mapping exists.</returns>
    </member>
    <member name="M:XmlPrime.Serialization.CharacterMappingDictionary.TryGetValue(System.Char,System.String@)">
      <overloads>Gets the string to which a character is mapped if such a mapping exists.</overloads>
      <summary>
            Gets the string to which <paramref name="key"/> is mapped if such a mapping exists.
            </summary>
      <param name="key">The mapped character.</param>
      <param name="value">Receives to string to which <paramref name="key"/> is mapped, if it exists.</param>
      <returns>
        <see langword="true"/> if the mapping exists; otherwise <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.Serialization.CharacterMappingDictionary.Add(System.Int32,System.String)">
      <summary>
            Adds a mapping from a Unicode codepoint to a string.
            </summary>
      <param name="key">The Unicode codepoint to map.</param>
      <param name="value">The <see cref="T:System.String"/> to which <paramref name="key"/> will be mapped.</param>
    </member>
    <member name="M:XmlPrime.Serialization.CharacterMappingDictionary.Clear">
      <summary>
            Removes all character mappings from the collection.
            </summary>
    </member>
    <member name="M:XmlPrime.Serialization.CharacterMappingDictionary.ContainsKey(System.Int32)">
      <summary>
            Returns a value indicating whether the <see cref="T:XmlPrime.Serialization.CharacterMappingDictionary"/> contains a mapping for the given Unicode codepoint.
            </summary>
      <param name="key">The codepoint to test.</param>
      <returns>
        <see langword="true"/> if a mapping exists; otherwise <see langword="false"/>.</returns>
    </member>
    <member name="M:XmlPrime.Serialization.CharacterMappingDictionary.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the character mapping.
            </summary>
      <returns>
            An enumerator that can be used to iterate through the character mapping.
            </returns>
    </member>
    <member name="M:XmlPrime.Serialization.CharacterMappingDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that iterates through a <see cref="T:XmlPrime.Serialization.CharacterMappingDictionary"/>.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the <see cref="T:XmlPrime.Serialization.CharacterMappingDictionary"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.Serialization.CharacterMappingDictionary.Remove(System.Int32)">
      <summary>
            Removes the mapping of the specified Unicode codepoint.
            </summary>
      <param name="key">The mapped Unicode codepoint to remove.</param>
      <returns>
        <see langword="true"/> if the mapping was removed, or <see langword="false"/> if no such mapping exists.</returns>
    </member>
    <member name="M:XmlPrime.Serialization.CharacterMappingDictionary.TryGetValue(System.Int32,System.String@)">
      <summary>
            Gets the string to which a given Unicode codepoint is mapped if such a mapping exists.
            </summary>
      <param name="key">The mapped Unicode codepoint.</param>
      <param name="value">
            Receives to <see cref="T:System.String"/> to which the Unicode codepoint <paramref name="key"/> is mapped, if it 
            exists.
            </param>
      <returns>
        <see langword="true"/> if the mapping exists; otherwise <see langword="false"/>.</returns>
    </member>
    <member name="P:XmlPrime.Serialization.CharacterMappingDictionary.Count">
      <summary>
            Gets the number of character mappings in the <see cref="T:XmlPrime.Serialization.CharacterMappingDictionary"/>.
            </summary>
      <value>The number of mapped codepoints contained in the <see cref="T:XmlPrime.Serialization.CharacterMappingDictionary"/>.</value>
    </member>
    <member name="P:XmlPrime.Serialization.CharacterMappingDictionary.IsReadOnly">
      <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
      <value>Always returns <see langword="false"/>.</value>
    </member>
    <member name="P:XmlPrime.Serialization.CharacterMappingDictionary.Item(System.Int32)">
      <summary>
            Gets or sets the <see cref="T:System.String"/> to which the given Unicode codepoint is mapped.
            </summary>
      <param name="key">The mapped Unicode codepoint.</param>
      <returns>The <see cref="T:System.String"/> to which the Unicode codepoint <paramref name="key"/> is mapped.</returns>
    </member>
    <member name="P:XmlPrime.Serialization.CharacterMappingDictionary.Keys">
      <summary>
            Gets a collection of <see cref="T:System.Int32"/> values containing the character mapping keys.
            </summary>
      <value>A collection  of <see cref="T:System.Int32"/> values containing the character mapping keys.</value>
    </member>
    <member name="P:XmlPrime.Serialization.CharacterMappingDictionary.Values">
      <summary>
            Gets a collection of <see cref="T:System.String"/> values containing the character mapping strings.
            </summary>
      <value>A collection <see cref="T:System.String"/> values containing the character mapping strings.</value>
    </member>
    <member name="T:XmlPrime.Serialization.Standalone">
      <summary>
            Specifies the value of the XDM serialization standalone property.
            </summary>
      <remarks>
        <para>The <see cref="T:XmlPrime.Serialization.Standalone"/> enumeration is used in the <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> to set
            the <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Standalone"/> property.</para>
      </remarks>
      <seealso cref="P:XmlPrime.Serialization.XdmWriterSettings.Standalone"/>
    </member>
    <member name="F:XmlPrime.Serialization.Standalone.No">
      <summary>
            Specifies that no standalone document declaration should be output.
            </summary>
    </member>
    <member name="F:XmlPrime.Serialization.Standalone.Yes">
      <summary>
            Specifies that a standalone document declaration should be output.
            </summary>
    </member>
    <member name="F:XmlPrime.Serialization.Standalone.Omit">
      <summary>
            Specifies that the XML declaration MUST NOT include a standalone document declaration; this ensures 
            that it is both an XML declaration (allowed at the beginning of a document entity) and a text declaration 
            (allowed at the beginning of an external general parsed entity).
            </summary>
    </member>
    <member name="T:XmlPrime.Serialization.XdmWriterSettings">
      <summary>
              Describes the settings of an <see cref="T:XmlPrime.Serialization.XdmWriter"/>.
            </summary>
      <seealso href="http://www.w3.org/TR/xslt-xquery-serialization/#serparam">[XSLT 2.0 and XQuery 1.0 Serialization] 3 Serialization Parameters</seealso>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriterSettings.DefaultMediaType(System.Xml.XmlQualifiedName)">
      <summary>
              Returns the default media type for the specified output method with name specified by
              <paramref name="methodName"/>.
            </summary>
      <param name="methodName">The qualified name of the output method.</param>
      <remarks>
              The default media type is <c>application/xhtml+xml</c> for <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XHtmlOutputMethod"/>, 
              <c>text/html</c> for <see cref="P:XmlPrime.Serialization.XdmWriterSettings.HtmlOutputMethod"/>, <c>text/plain</c> for <see cref="P:XmlPrime.Serialization.XdmWriterSettings.TextOutputMethod"/>,
              and <c>text/xml</c> for <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XmlOutputMethod"/> and <see cref="P:XmlPrime.Serialization.XdmWriterSettings.CanonicalOutputMethod"/>.
            </remarks>
      <returns>The default media type for the specified output method, or <c>text/xml</c> if the method is not known.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="methodName"/> is <see langword="null"/>.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriterSettings.#ctor">
      <overloads>
              Initializes a new instance of the <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> class.
            </overloads>
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> class
              with all parameters taking default values for the XML output method.
            </summary>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriterSettings.#ctor(System.Xml.XmlQualifiedName)">
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> class
              with all parameters taking default values for the specified output method.
            </summary>
      <param name="method">The XML serialization output method.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriterSettings.#ctor(XmlPrime.Serialization.XdmWriterSettings)">
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> class from another instance.
            </summary>
      <param name="settings">The settings.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriterSettings.GetEncoding">
      <summary>
              Returns an <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Encoding"/> instance as described by the <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Encoding"/> and
              <see cref="P:XmlPrime.Serialization.XdmWriterSettings.ByteOrderMark"/> properties of this instance.
            </summary>
      <remarks>
              This will be the encoding used when creating a <see cref="T:XmlPrime.Serialization.XdmWriter"/> serializing to a
              <see cref="T:System.IO.Stream"/> instance using these settings (Unless <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is set to
              <see cref="P:XmlPrime.Serialization.XdmWriterSettings.CanonicalOutputMethod"/>, in which case <c>utf-8</c> is used.
            </remarks>
      <returns>An <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Encoding"/> instance.</returns>
      <seealso cref="P:XmlPrime.Serialization.XdmWriterSettings.Encoding"/>
      <seealso cref="P:XmlPrime.Serialization.XdmWriterSettings.ByteOrderMark"/>
      <exception cref="T:XmlPrime.XdmException">
              An <c>SESU0007</c> error is raised if the encoding is not supported by <c>XmlPrime</c>.  See the
              <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Encoding"/> property for the list of supported encodings.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriterSettings.ParameterDocument(System.String)">
      <summary>
            Returns a new <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> instance with serialization parameters read from the specified
            <see cref="T:System.Xml.XmlReader"/>.
            </summary>
      <param name="path">The path or URI of a serialization parameters document.</param>
      <returns>A new <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> instance with values read from the specified
            <exception cref="T:XmlPrime.XdmException">The serialization parameters document was invalid.</exception><see cref="T:System.Xml.XmlReader"/>.</returns>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriterSettings.ParameterDocument(System.IO.Stream)">
      <summary>
            Returns a new <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> instance with serialization parameters read from the specified
            <see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="stream">A <see cref="T:System.IO.Stream"/> positioned at the beginning of a serialization parameters document.</param>
      <returns>A new <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> instance with values read from the specified
            <exception cref="T:XmlPrime.XdmException">The serialization parameters document was invalid.</exception><see cref="T:System.Xml.XmlReader"/>.</returns>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriterSettings.ParameterDocument(System.Xml.XmlReader)">
      <summary>
            Returns a new <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> instance with serialization parameters read from the specified
            <see cref="T:System.Xml.XmlReader"/>.
            </summary>
      <param name="reader">An <see cref="T:System.Xml.XmlReader"/> over a serialization parameters document.</param>
      <returns>A new <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> instance with values read from the specified
            <see cref="T:System.Xml.XmlReader"/>.</returns>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriterSettings.ParameterDocument(System.Xml.XPath.IXPathNavigable)">
      <summary>
            Returns a new <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> instance with serialization parameters read from the specified
            <see cref="T:System.Xml.XmlReader"/>.
            </summary>
      <param name="navigable">An <see cref="T:System.Xml.XPath.IXPathNavigable"/> instance containing a serialization parameters document.</param>
      <returns>A new <see cref="T:XmlPrime.Serialization.XdmWriterSettings"/> instance with values read from the specified
            <see cref="T:System.Xml.XmlReader"/>.</returns>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriterSettings.SetParameter(System.Xml.XmlQualifiedName,System.String,System.Xml.IXmlNamespaceResolver)">
      <overloads>
              Attempts to set the specified serialization parameter.
            </overloads>
      <summary>
              Attempts to set the specified serialization parameter.
            </summary>
      <param name="parameterName">The qualified name of the serialization parameter.</param>
      <param name="value">The value of the serialization parameter.</param>
      <param name="namespaceResolver">The namespace resolver to use to resolve <c>QName</c> values.</param>
      <remarks>
              All <c>QName</c> values should be lexical <c>QName</c>s.
            </remarks>
      <returns>
        <see langword="true"/> if the parameter was recognised, otherwise <see langword="false"/>.
            </returns>
      <exception cref="T:XmlPrime.XdmException">An <c>SEPM0016</c> error is raised if an attempt is made to set the <c>use-character-maps</c> parameter.</exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriterSettings.SetParameter(System.Xml.XmlQualifiedName,System.String)">
      <summary>
              Attempts to set the specified serialization parameter.
            </summary>
      <param name="parameter">The qualified name of the serialization parameter.</param>
      <param name="value">The value of the serialization parameter.</param>
      <remarks>
              All <c>QName</c> values should be supplied in Clark notation.
            </remarks>
      <returns>
        <see langword="true"/> if the parameter was recognised, otherwise <see langword="false"/>.
            </returns>
      <exception cref="T:XmlPrime.XdmException">
        <paramref name="value"/> is not a valid value for the parameter <paramref name="parameter"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.Serialization.XdmWriterSettings.SetParameter(System.String,System.String)">
      <summary>
              Attempts to set the specified serialization parameter.
            </summary>
      <param name="parameter">The name of the serialization parameter.</param>
      <param name="value">The value of the serialization parameter.</param>
      <returns>
        <see langword="true"/> if the parameter was recognised, otherwise <see langword="false"/>.
            </returns>
      <remarks>
              If the parameter is not known then this method has no effect.
            </remarks>
      <exception cref="T:XmlPrime.XdmException">
        <paramref name="value"/> is not a valid value for the parameter <paramref name="parameter"/>.
            </exception>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.AutoOutputMethod">
      <summary>
              Gets the qualified name of the auto output method.
            </summary>
      <value>The qualified name of the auto output method.</value>
      <remarks>
              This method implements the behaviour described in XSLT 2.0 where no method has been specified.  The method
              is decided based on the content of the tree being serialized.
            </remarks>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.CanonicalOutputMethod">
      <summary>
              Gets the qualified name of the canonical output method.
            </summary>
      <remarks>
              This output method indicates that the serialization process should produce canonical XML.  All serialization
              properties except <see cref="P:XmlPrime.Serialization.XdmWriterSettings.ConformanceLevel"/> and <see cref="P:XmlPrime.Serialization.XdmWriterSettings.CheckNamespaces"/> are ignored in this
              mode.
            </remarks>
      <value>The qualified name of the canonical output method.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.TextOutputMethod">
      <summary>
              Gets the qualified name of the text output method.
            </summary>
      <value>The qualified name of the text output method.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.HtmlOutputMethod">
      <summary>
              Gets the qualified name of the HTML output method.
            </summary>
      <value>The qualified name of the HTML output method.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.XHtmlOutputMethod">
      <summary>
              Gets the qualified name of the XHTML output method.
            </summary>
      <value>The qualified name of the XHTML output method.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.XmlOutputMethod">
      <summary>
              Gets the qualified name of the XML output method.
            </summary>
      <value>The qualified name of the XML output method.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.JsonOutputMethod">
      <summary>
              Gets the qualified name of the JSON output method.
            </summary>
      <value>The qualified name of the JSON output method.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.AdaptiveOutputMethod">
      <summary>
              Gets the qualified name of the adaptive output method.
            </summary>
      <value>The qualified name of the adaptive output method.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.ByteOrderMark">
      <summary>
              Gets or sets a value indicating whether the output should be preceded by a byte order mark.
            </summary>
      <value>
        <see langword="true"/> if the output should be preceded by a byte order mark; otherwise 
              <see langword="false"/>.
            </value>
      <remarks>
        <para>The <see cref="P:XmlPrime.Serialization.XdmWriterSettings.ByteOrderMark"/> property corresponds to the <c>byte-order-mark</c> serialization 
                parameter, which indicates whether the serialized sequence of octets is to be preceded by a Byte Order Mark.
                If the encoding defines no Byte Order Mark, or if the Byte Order Mark is prohibited for the specific Unicode 
                encoding or implementation environment, then this parameter is ignored.  By default this parameter is set to
                <c>no</c>.</para>
        <para>
                This property is ignored when <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.CanonicalOutputMethod"/>.
              </para>
      </remarks>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#byte-order-mark">Serialization parameters (byte-order-mark)</seealso>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.CDataSectionElements">
      <summary>
              Gets a collection of element names whose contents must be output as CDATA sections.
            </summary>
      <value>
              The collection of element names which must be output as CDATA sections.
            </value>
      <remarks>
        <para>
                This property corresponds to the <c>cdata-section-elements</c> serialization parameter, which contains a 
                list of expanded <c>QNames</c>.  If the expanded <c>QName</c> of the parent element of a text node is a
                member of the list, then the text node is output as a CDATA section.</para>
      </remarks>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#cdata-section-elements">Serialization parameters (cdata-section-elements)</seealso>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.CharacterMapping">
      <summary>
              Gets the mapping of characters to string values.
            </summary>
      <value>A mapping of characters to string values.</value>
      <remarks>
        <para>
                Character maps allow specific characters that are serialized to be replaced with a specific string of
                characters.  No escaping is applied to the string that is substituted and so this mechanism can be used to
                introduce arbitrary markup in the serialized output.
              </para>
        <para>
                This property is ignored when <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.CanonicalOutputMethod"/>.
              </para>
      </remarks>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#use-character-maps">Serialization parameters (use-character-maps)</seealso>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.CharacterReferenceStyle">
      <summary>
              Gets or sets the way in which character references should be serialized.
            </summary>
      <value>A member of the <see cref="P:XmlPrime.Serialization.XdmWriterSettings.CharacterReferenceStyle"/> enumeration indicating how character references should be serialized.</value>
      <remarks>
        <para>
                This is equivalent to the <c>character-reference-style</c> serialization property in the <c>http://www.xmlprime.com/serialization</c>
                namespace.
              </para>
        <para>
                If <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.TextOutputMethod"/> or <see cref="P:XmlPrime.Serialization.XdmWriterSettings.CanonicalOutputMethod"/> 
                then this property is ignored.
              </para>
        <para>
                By default this property is set to <see cref="F:XmlPrime.Serialization.CharacterReferenceStyle.Hexadecimal"/>.
              </para>
      </remarks>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#character-reference-style">Serialization parameters (character-reference-style)</seealso>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.CheckNamespaces">
      <summary>
              Gets or sets the checking that is performed for namespace URI values.
            </summary>
      <value>One of the <see cref="P:XmlPrime.Serialization.XdmWriterSettings.CheckNamespaces"/> values.</value>
      <remarks>
        <para>
                When this property is set to <see cref="F:XmlPrime.Serialization.CheckNamespaces.CheckAbsolute"/> serialization will
                raise a <c>SERE0003</c><see cref="T:XmlPrime.XdmException"/> if the namespace URI of a namespace declaration is
                not a valid absolute URI.
              </para>
        <para>
                If <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.CanonicalOutputMethod"/> then setting 
                <see cref="P:XmlPrime.Serialization.XdmWriterSettings.CheckNamespaces"/> to <see cref="F:XmlPrime.Serialization.CheckNamespaces.None"/> causes canonicalization
                to allow namespace nodes whose namespace URIs are not valid absolute URIs.
              </para>
        <para>
                This is equivalent to the <c>check-namespaces</c> serialization property in the <c>http://www.xmlprime.com/serialization</c>
                namespace.
              </para>
        <para>
                If this property is set to <see cref="F:XmlPrime.Serialization.CheckNamespaces.Auto"/> then this is equivalent to
                <see cref="F:XmlPrime.Serialization.CheckNamespaces.CheckAbsolute"/> if <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is set to 
                <see cref="P:XmlPrime.Serialization.XdmWriterSettings.CanonicalOutputMethod"/>; or <see cref="F:XmlPrime.Serialization.CheckNamespaces.None"/> otherwise.
              </para>
        <para>
                If <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.TextOutputMethod"/> then this parameter is ignored.
              </para>
        <para>
                By default this property is set to <see cref="F:XmlPrime.Serialization.CheckNamespaces.Auto"/>.
              </para>
      </remarks>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#check-namespaces">Serialization parameters (check-namespaces)</seealso>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.CloseOutput">
      <summary>
              Gets or sets a value indicating whether the <see cref="T:System.Xml.XmlWriter"/> should also close the underlying <see cref="T:System.IO.Stream"/>
              or <see cref="T:System.IO.TextWriter"/> when the <see cref="M:System.Xml.XmlWriter.Close"/> method is called.
            </summary>
      <value>
        <see langword="true"/> to also close the underlying <see cref="T:System.IO.Stream"/> or <see cref="T:System.IO.TextWriter"/> otherwise <see langword="false"/>. The default is <see langword="false"/>.</value>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.ConformanceLevel">
      <summary>
              Gets or sets the level of conformance that the serialized document must conform with.
            </summary>
      <remarks>
        <para>
                When this property is set to <see cref="F:System.Xml.ConformanceLevel.Document"/> then serialization will
                raise a <c>SERE0003</c><see cref="T:XmlPrime.XdmException"/> if a document contains top level text nodes, or does not
                contain a single root element, even if the other serialization settings allow for this.
              </para>
        <para>
                If <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.CanonicalOutputMethod"/> then setting the 
                <see cref="P:XmlPrime.Serialization.XdmWriterSettings.ConformanceLevel"/> to <see cref="F:System.Xml.ConformanceLevel.Fragment"/> causes all nodes to be
                serialized as if they were children of a single top level element.
              </para>
        <para>
                This is equivalent to the <c>conformance-level</c> serialization property in the
                <c>http://www.xmlprime.com/serialization</c> namespace.
              </para>
        <para>
                If this property is set to <see cref="F:System.Xml.ConformanceLevel.Auto"/> then this is equivalent to
                <see cref="F:System.Xml.ConformanceLevel.Document"/> if the output method is set to <c>canonical</c> in the
                <c>http://www.xmlprime.com/serialization</c> namespace; or <see cref="F:System.Xml.ConformanceLevel.Fragment"/>
                otherwise.
              </para>
        <para>
                By default this property is set to <see cref="F:System.Xml.ConformanceLevel.Auto"/>.
              </para>
      </remarks>
      <value>One of the enumerated <see cref="P:XmlPrime.Serialization.XdmWriterSettings.ConformanceLevel"/> values.</value>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#conformance-level">Serialization parameters (conformance-level)</seealso>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.DoctypePublic">
      <summary>
              Gets or sets the <c>PUBLIC</c> document type.
            </summary>
      <value>The <c>PUBLIC</c> document type.</value>
      <remarks>
        <para>This property corresponds to the <c>doctype-public</c> serialization parameter.
                If the <c>doctype-system</c> parameter is specified, then this specifies the public document type
                to be serialized in the document type declaration.  The <c>doctype-public</c> parameter is ignored
                unless the <c>doctype-system</c> parameter is specified.
              </para>
        <para>
                The value of this property must either be <see langword="null"/> or a string of 
                <see href="http://www.w3.org/TR/REC-xml/#NT-PubidChar">PubidChar</see> characters.
              </para>
        <para>
                This property is ignored when <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.TextOutputMethod"/> or 
                <see cref="P:XmlPrime.Serialization.XdmWriterSettings.CanonicalOutputMethod"/>.
              </para>
        <para>
                If <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XmlOutputMethod"/> of <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XHtmlOutputMethod"/> and
                this property is not set to a valid public identifier then a <c>SERE0003</c><see cref="T:XmlPrime.XdmException"/> is 
                thrown if serialization is attempted.
              </para>
        <para>By default the <see cref="P:XmlPrime.Serialization.XdmWriterSettings.DoctypePublic"/> property is set to <see langword="null"/>.</para>
      </remarks>
      <exception cref="T:XmlPrime.XdmException">
              An <c>SEPM0016</c> error is raised if an attempt is made to set <c>doctype-public</c> to a string that is
              not made up of <see href="http://www.w3.org/TR/REC-xml/#NT-PubidChar">PubidChar</see> characters
            </exception>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#doctype-public">Serialization parameters (doctype-public)</seealso>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.DoctypeSystem">
      <summary>
              Gets or sets the <c>SYSTEM</c> document type.
            </summary>
      <value>The <c>SYSTEM</c> document type.</value>
      <remarks>
        <para>This property corresponds to the <c>doctype-system</c> serialization parameter.
                If the <c>doctype-system</c> parameter is specified, then a document type declaration is output immediately
                before the first element.  The <c>doctype-system</c> parameter specifies the <c>SYSTEM</c> document type.
              </para>
        <para>
                This property cannot contain both a quote character (<c>"</c>) and an apostrophe character (<c>'</c>).
              </para>
        <para>
                This property is ignored when <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.TextOutputMethod"/> or 
                <see cref="P:XmlPrime.Serialization.XdmWriterSettings.CanonicalOutputMethod"/>.
              </para>
        <para>By default the <see cref="P:XmlPrime.Serialization.XdmWriterSettings.DoctypeSystem"/> property is set to <see langword="null"/>.</para>
        <para>
                If this property is set to a non-<see langword="null"/> value, <see cref="P:XmlPrime.Serialization.XdmWriterSettings.OmitXmlDeclaration"/> is set to
                <see langword="true"/>, <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XmlOutputMethod"/> or 
                <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XHtmlOutputMethod"/> and <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Version"/> is not set to <see langword="null"/> or 
                <c>"1.0"</c> then a <c>SEPM0009</c><see cref="T:XmlPrime.XdmException"/> is thrown if serialization is attempted.
              </para>
      </remarks>
      <exception cref="T:XmlPrime.XdmException">
              An <c>SEPM0016</c> error is raised if an attempt is made to set <c>doctype-system</c> to a string that 
              contains both quote (<c>"</c>) and apostrophe (<c>'</c>) characters.
            </exception>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#doctype-system">Serialization parameters (doctype-system)</seealso>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.Encoding">
      <summary>
              Gets or sets the character encoding to be used.
            </summary>
      <value>The character encoding to be used.</value>
      <remarks>
        <para>This property corresponds to the <c>encoding</c> serialization parameter, which
                specifies the encoding to be used for outputting the instance of the data model.</para>
        <para>The following encodings are supported (these values are case-insensitive):
                <list type="bullet"><item><description><c>IBM037</c></description></item><item><description><c>IBM500</c></description></item><item><description><c>IBM273</c></description></item><item><description><c>IBM277</c></description></item><item><description><c>IBM280</c></description></item><item><description><c>IBM284</c></description></item><item><description><c>IBM285</c></description></item><item><description><c>IBM297</c></description></item><item><description><c>IBM871</c></description></item><item><description><c>IBM1047</c></description></item><item><description><c>iso-8859-1</c></description></item><item><description><c>iso-8859-2</c></description></item><item><description><c>iso-8859-3</c></description></item><item><description><c>iso-8859-4</c></description></item><item><description><c>iso-8859-5</c></description></item><item><description><c>iso-8859-6</c></description></item><item><description><c>iso-8859-7</c></description></item><item><description><c>iso-8859-8</c></description></item><item><description><c>iso-8859-9</c></description></item><item><description><c>iso-8859-13</c></description></item><item><description><c>iso-8859-15</c></description></item><item><description><c>us-ascii</c></description></item><item><description><c>utf-8</c></description></item><item><description><c>utf-16</c></description></item><item><description><c>utf-16BE</c></description></item><item><description><c>utf-16LE</c></description></item><item><description><c>utf-32</c></description></item><item><description><c>utf-32BE</c></description></item><item><description><c>utf-32LE</c></description></item><item><description><c>GB18030</c></description></item><item><description><c>GB18030</c></description></item><item><description><c>unicodeFFFE</c></description></item><item><description><c>Windows-1252</c></description></item></list></para>
        <para>
                If this property is set to an unsupported value and <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is not set to
                <see cref="P:XmlPrime.Serialization.XdmWriterSettings.CanonicalOutputMethod"/> then a <c>SESU0007</c><see cref="T:XmlPrime.XdmException"/> is raised if
                serialization is attempted.
              </para>
        <para>
                This property is ignored when <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.CanonicalOutputMethod"/>.  When 
                serializing to a <see cref="T:System.IO.TextWriter"/> the encoding specified by the text writer overrides this
                property.
              </para>
      </remarks>
      <exception cref="T:XmlPrime.XdmException">An <c>SEPM0016</c> error may be raised if an invalid <c>encoding</c> setting is attempted.</exception>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#encoding">Serialization parameters (encoding)</seealso>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.EscapeUriAttributes">
      <summary>
              Gets or sets a value indicating whether URI escaping is enabled.
            </summary>
      <value>
        <see langword="true"/> if URI escaping is enabled; otherwise <see langword="false"/>.</value>
      <remarks>
        <para>This property corresponds to the <c>escape-uri-attributes</c> serialization parameter.</para>
        <para>
                In HTML and XHTML output methods if this property is set to <see langword="true"/>, then all 
                attributes that must take URIs (for example the <c>href</c> attribute on the <c>a</c> tag) will have their
                values escaped as is performed by the <c>fn:escape-html-uri</c> function.
              </para>
        <para>
                This property is ignored when <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is not set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.HtmlOutputMethod"/> or
                <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XHtmlOutputMethod"/>.
              </para>
      </remarks>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#escape-uri-attributes">Serialization parameters (escape-uri-attributes)</seealso>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.HtmlVersion">
      <summary>
              Gets or sets the HTML version to be used.
            </summary>
      <value>The HTML version to be used.</value>
      <remarks>
        <para>This property corresponds to the <c>html-version</c> serialization parameter.</para>
        <para>
                This parameter specifies the version of HTML to be used in serialization. 
                This property is ignored if <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is not set to 
                <see cref="P:XmlPrime.Serialization.XdmWriterSettings.HtmlOutputMethod"/> or <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XHtmlOutputMethod"/>.
              </para>
        <para>
                If the version is not supported (HTML version is not <c>4.0</c>, <c>4.01</c> or <c>5.0</c> then an <c>SESU0013</c> error is raised if
                serialization is attempted.
              </para>
        <para>
                If this property is set to <see langword="null"/> then the HTML version is assumed to be <c>4.01</c>.  By default
                this property is set to <see langword="null"/>.
              </para>
      </remarks>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#version">Serialization parameters (version)</seealso>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.IncludeContentType">
      <summary>
              Gets or sets a value indicating whether a meta tag should be added to indicate content type.
            </summary>
      <value>
        <see langword="true"/> if a meta tag should be added; otherwise <see langword="false"/>.</value>
      <remarks>
        <para>This property corresponds to the <c>include-content-type</c> serialization parameter.</para>
        <para>If this property is set to <see langword="true"/>, then in <c>html</c> and <c>xhtml</c> output
                methods a <c>meta</c> element is added as the first child of the <c>head</c> element specifying the content
                type from the <c>media-type</c> property, and with the encoding actually used.
              </para>
        <para>
                This property is ignored when <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is not set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.HtmlOutputMethod"/> or
                <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XHtmlOutputMethod"/>.
              </para>
        <para>
                By default this property is set to <see langword="false"/></para>
      </remarks>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#include-content-type">Serialization parameters (include-content-type)</seealso>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.Indent">
      <summary>
              Gets or sets a value indicating whether output should be indented.
            </summary>
      <value>
        <see langword="true"/> if the output should be indented; otherwise <see langword="false"/>.</value>
      <remarks>
        <para>This property corresponds to the <c>indent</c> serialization parameter.</para>
        <para>If this property has the value <see langword="true"/>, then extra whitespace may be added to
                the serialized document in order to make it easier to read, in accordance with the rules specific to the 
                current output method.
              </para>
        <para>
                This property is ignored when <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.TextOutputMethod"/> or
                <see cref="P:XmlPrime.Serialization.XdmWriterSettings.CanonicalOutputMethod"/>.
              </para>
        <para>
                By default this property is set to <see langword="false"/></para>
      </remarks>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#indent">Serialization parameters (indent)</seealso>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.AllowDuplicateNames">
      <summary>
              Gets or sets a value indicating whether a map item serialized as a JSON object using the JSON output method is allowed to contain duplicate member names.
            </summary>
      <value>
        <see langword="true"/> if the duplicates are allowed; otherwise <see langword="false"/>.</value>
      <remarks>
        <para>This property corresponds to the <c>allow-duplicate-names</c> serialization parameter.</para>
        <para>If this property has the value <see langword="true"/>, then a map item serialized as a JSON 
              object using the JSON output method is allowed to contain duplicate member names.  If the value no
              <see langword="false"/> is specified, serialization error [err:SERE0022] will be raised.
              </para>
        <para>
                This property is ignored when <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is set to any value other than
                <see cref="P:XmlPrime.Serialization.XdmWriterSettings.JsonOutputMethod"/>.
              </para>
        <para>
                By default this property is set to <see langword="false"/></para>
      </remarks>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#allow-duplicate-names">Serialization parameters (allow-duplicate-names)</seealso>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.IndentationCharacters">
      <summary>
              Gets or sets the character string used for indentation.
            </summary>
      <value>The string of characters used for indentation.</value>
      <remarks>
        <para>
                This is equivalent to the <c>indentation-characters</c> parameter in the
                <c>http://www.xmlprime.com/serialization</c> namespace.
              </para>
        <para>
                By default the indentation string is two spaces.
              </para>
        <para>
                This property is ignored if <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Indent"/> is set to <see langword="false"/>, or <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/>
                is set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.TextOutputMethod"/> or <see cref="P:XmlPrime.Serialization.XdmWriterSettings.CanonicalOutputMethod"/>.
              </para>
      </remarks>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#indentation-characters">Serialization parameters (indentation-characters)</seealso>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.ItemSeparator">
      <summary>
              Gets or sets a value the item separator string.
            </summary>
      <value>A string of Unicode characters, or <see langword="null"/> for the default behaviour.</value>
      <remarks>
        <para>This property corresponds to the <c>item-separator</c> serialization parameter.</para>
        <para>By default this property is <see langword="null"/>, indicating that the property is absent, and that items will be separated
              by a single space, or a single newline character in the case of the Adaptive output method.</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.MediaType">
      <summary>
              Gets or sets a string specifying the media type (MIME content type) of the output.
            </summary>
      <value>The media type of the output.</value>
      <remarks>
        <para>This property corresponds to the <c>media-type</c> serialization parameter.</para>
        <para>
                The value of this property is used in the generated content-type declaration if the 
                <see cref="P:XmlPrime.Serialization.XdmWriterSettings.IncludeContentType"/> is set to <see langword="true"/> and <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is 
                <see cref="P:XmlPrime.Serialization.XdmWriterSettings.HtmlOutputMethod"/> or <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XHtmlOutputMethod"/>.  It may also be used to annotate the
                serialized data, for example in an HTTP request.
              </para>
        <para>The <c>charset</c> parameter of the media type must not be
                specified explicitly in the value of the of <see cref="P:XmlPrime.Serialization.XdmWriterSettings.MediaType"/>, instead it should be set via the
                <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Encoding"/> property.
              </para>
        <para>
                If the value of this property is <see langword="null"/> then the default media type as defined by
                <see cref="M:XmlPrime.Serialization.XdmWriterSettings.DefaultMediaType(System.Xml.XmlQualifiedName)"/> for the current output method is used.</para>
        <para>
                The default value of this property is <see langword="null"/>.
              </para>
      </remarks>
      <exception cref="T:XmlPrime.XdmException">
              An <c>SEPM0016</c> error is raised if an invalid <c>media-type</c> setting is attempted.
            </exception>
      <seealso href="http://www.ietf.org/rfc/rfc2046.txt">[RFC 2046] Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types</seealso>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#media-type">Serialization parameters (media-type)</seealso>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.Method">
      <summary>
              Gets or sets the output method.
            </summary>
      <value>The output method.</value>
      <remarks>
        <para>This property corresponds to the <c>method</c> serialization parameter.</para>
        <para>The properties <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XmlOutputMethod"/>, <see cref="P:XmlPrime.Serialization.XdmWriterSettings.HtmlOutputMethod"/>,
                <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XHtmlOutputMethod"/>, <see cref="P:XmlPrime.Serialization.XdmWriterSettings.TextOutputMethod"/>, <see cref="P:XmlPrime.Serialization.XdmWriterSettings.JsonOutputMethod"/>,
                <see cref="P:XmlPrime.Serialization.XdmWriterSettings.AdaptiveOutputMethod"/> and <see cref="P:XmlPrime.Serialization.XdmWriterSettings.CanonicalOutputMethod"/>
                can be used to specify supported output methods.
              </para>
        <para>
                If this property is set to an unsupported value then a <c>SEPM0016</c><see cref="T:XmlPrime.XdmException"/> is 
                thrown if serialization is attempted.
              </para>
      </remarks>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#method">Serialization parameters (method)</seealso>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.JsonNodeOutputMethod">
      <summary>
              Gets or sets the JSON node output method.
            </summary>
      <value>The JSON node output method.</value>
      <remarks>
        <para>This property corresponds to the <c>json-node-output-method</c> serialization parameter.</para>
        <para>The properties <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XmlOutputMethod"/>, <see cref="P:XmlPrime.Serialization.XdmWriterSettings.HtmlOutputMethod"/>,
                <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XHtmlOutputMethod"/><see cref="P:XmlPrime.Serialization.XdmWriterSettings.TextOutputMethod"/>,
                and <see cref="P:XmlPrime.Serialization.XdmWriterSettings.CanonicalOutputMethod"/> can be used to specify supported output methods.
              </para>
        <para>
                If this property is set to an unsupported value then a <c>SEPM0016</c><see cref="T:XmlPrime.XdmException"/> is 
                thrown if serialization is attempted.  The default value is <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XmlOutputMethod"/>.
              </para>
      </remarks>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#json-output-method">Serialization parameters (json-output-method)</seealso>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.NewLineChars">
      <summary>
              Gets or sets the character string to use for line breaks.
            </summary>
      <value>The character string to use for line breaks.</value>
      <remarks>
        <para>
                All line break (<c>&amp;#10;</c> characters) and new lines introduced by indentation are replaced with the 
                string specified by this property.
              </para>
        <para>
                This is equivalent to the <c>new-line-chars</c> parameter in the
                <c>http://www.xmlprime.com/serialization</c> namespace.
              </para>
        <para>
                This property defaults to <see cref="P:System.Environment.NewLine"/>.
              </para>
        <para>
                This property is ignored if <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.CanonicalOutputMethod"/>.
              </para>
      </remarks>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#new-line-chars">Serialization parameters (new-line-chars)</seealso>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.NormalizationForm">
      <summary>
              Gets or sets the normalization form.
            </summary>
      <remarks>
        <para>This property corresponds to the <c>normalization-form</c> serialization parameter.</para>
        <para>
                Specifies the unicode normalization form.  All text content in the serialized document will be normalized 
                with this normalization form. This can be set to one of the following (case-insensitive) values:
              </para>
        <list type="bullet">
          <item>
            <description>
              <c>NFC</c>
            </description>
          </item>
          <item>
            <description>
              <c>NFD</c>
            </description>
          </item>
          <item>
            <description>
              <c>NFKC</c>
            </description>
          </item>
          <item>
            <description>
              <c>NFKD</c>
            </description>
          </item>
          <item>
            <description>
              <c>fully-normalized</c>
            </description>
          </item>
          <item>
            <description>
              <c>none</c>
            </description>
          </item>
        </list>
        <para>
                If this property is not set to a supported value and then a <c>SEPM0016</c><see cref="T:XmlPrime.XdmException"/> is 
                thrown.
              </para>
        <para>
                By default the <c>normalization-form</c> parameter is set to none, and no normalization is performed.
              </para>
        <para>
                This property is ignored when <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.CanonicalOutputMethod"/>.
              </para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">An attempt is made to set this property to <see langword="null"/></exception>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#normalization-form">Serialization parameters (normalization-form)</seealso>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.OmitXmlDeclaration">
      <summary>
              Gets or sets a value indicating whether the XML declaration should be omitted in the output.
            </summary>
      <value>
        <see langword="true"/> if the XML declaration should be omitted from the output; otherwise 
              <see langword="false"/>.
            </value>
      <remarks>
        <para>This property corresponds to the <c>omit-xml-declaration</c> serialization parameter.</para>
        <para>
                If <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is not set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XmlOutputMethod"/> or <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XHtmlOutputMethod"/>
                then this property is ignored.
              </para>
        <para>
                By default this property is set to <see langword="false"/>.
              </para>
      </remarks>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#omit-xml-declaration">Serialization parameters (omit-xml-declaration)</seealso>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.Standalone">
      <summary>
              Gets or sets a value indicating whether the XML declaration must contain a standalone document declaration.
            </summary>
      <value>
        <see langword="true"/> if the XML declaration must contain a standalone document declaration; otherwise 
              <see langword="false"/>.
            </value>
      <summary>
        <para>This property corresponds to the <c>standalone</c> serialization parameter.</para>
        <para>
                If this property has the value <see cref="F:XmlPrime.Serialization.Standalone.Yes"/> or the value 
                <see cref="F:XmlPrime.Serialization.Standalone.No"/>, the XML declaration includes a standalone document declaration 
                with the value specified by this property. If the standalone parameter has the value 
                <see cref="F:XmlPrime.Serialization.Standalone.Omit"/>, the XML declaration will not include a standalone document 
                declaration.
              </para>
        <para>
                If <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is not set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XmlOutputMethod"/> or <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XHtmlOutputMethod"/>
                then this property is ignored.
              </para>
        <para>
                If this property is not set to <see cref="F:XmlPrime.Serialization.Standalone.Omit"/>,
                <see cref="P:XmlPrime.Serialization.XdmWriterSettings.OmitXmlDeclaration"/> is set to <see langword="true"/> and <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is set to
                <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XmlOutputMethod"/> or <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XHtmlOutputMethod"/> then a <c>SEPM0009</c><see cref="T:XmlPrime.XdmException"/> is thrown when serialization is attempted.
              </para>
        <para>
                By default this property is set to <see cref="F:XmlPrime.Serialization.Standalone.Omit"/>.
              </para>
      </summary>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#standalone">Serialization parameters (standalone)</seealso>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.SuppressIndentation">
      <summary>
              Gets a collection of element names for which indentation must be suppressed.
            </summary>
      <value>
              The collection of element names for which indentation must be suppressed.
            </value>
      <remarks>
        <para>
                This property corresponds to the <c>suppress-indentation</c> serialization parameter, which contains a 
                list of expanded <c>QNames</c>.  If the <c>indent</c> parameter has the value <c>yes</c>, (that is
                <paramgre name="Indent"/> has value <see langword="true"/>) and the expanded <c>QName</c> of an element 
                is a member of the list, then whitespace characters will not be added, elided or replaced in its content </para>
      </remarks>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#suppress-indentation">Serialization parameters (suppress-indentation)</seealso>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.UndeclarePrefixes">
      <summary>
              Gets or sets a value indicating whether serializer should undeclare namespaces.
            </summary>
      <value>
        <see langword="true"/> if the serializer should undeclare namespaces; otherwise <see langword="false"/>.</value>
      <remarks>
        <para>This property corresponds to the <c>undeclare-prefixes</c> serialization parameter.</para>
        <para>
                If <see cref="P:XmlPrime.Serialization.XdmWriterSettings.UndeclarePrefixes"/> is set to <see langword="true"/>, then if an element is serialized whose
                parent has namespaces in scope that are not in scope in the element itself, then these namespaces are
                undeclared.
              </para>
        <para>
                If <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XmlOutputMethod"/> or <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XHtmlOutputMethod"/> and
                the version is set to <c>1.0</c> then an <c>SEPM0010</c><see cref="T:XmlPrime.XdmException"/> is thrown when 
                serialization is attempted.  If <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is not set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XmlOutputMethod"/> or <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XHtmlOutputMethod"/>
                then this property is ignored.
              </para>
        <para>
                By default this is set to <see langword="false"/>.
              </para>
      </remarks>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#undeclare-prefixes">Serialization parameters (undeclare-prefixes)</seealso>
    </member>
    <member name="P:XmlPrime.Serialization.XdmWriterSettings.Version">
      <summary>
              Gets or sets the XML version to be used.
            </summary>
      <value>The XML version to be used.</value>
      <remarks>
        <para>This property corresponds to the <c>version</c> serialization parameter.</para>
        <para>
                This parameter specifies either the version of XML (if <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is set to
                <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XmlOutputMethod"/> or <see cref="P:XmlPrime.Serialization.XdmWriterSettings.XHtmlOutputMethod"/>), the HTML version (if 
                <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.HtmlOutputMethod"/>) or the version of the canonical XML 
                specification (if <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.CanonicalOutputMethod"/>. This property is 
                ignored if <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is not set to any of the above values.
              </para>
        <para>
                If the version is not supported (XML version is not <c>1.0</c> or <c>1.1</c>, HTML version is not <c>4.0</c> or
                <c>4.01</c> or the Canonical XML version is not <c>1.0</c> then an <c>SESU0013</c> error is raised if
                serialization is attempted.
              </para>
        <para>
                If this property is set to <see langword="null"/> then the version is assumed to be <c>4.01</c> if 
                <see cref="P:XmlPrime.Serialization.XdmWriterSettings.Method"/> is set to <see cref="P:XmlPrime.Serialization.XdmWriterSettings.HtmlOutputMethod"/>, and <c>1.0</c> otherwise.  By default
                this property is set to <see langword="null"/>.
              </para>
      </remarks>
      <seealso href="e8dd2451-01d9-4800-9445-cc924f1b594c.htm#version">Serialization parameters (version)</seealso>
    </member>
    <member name="T:XmlPrime.BoundarySpace">
      <summary>
            Specifies the boundary-space policy of an XQuery module.
            </summary>
      <remarks>
        <para>The boundary space policy controls the processing of boundary whitespace by direct element constructors.
            Its value may be "preserve" or "strip".</para>
        <para>Use the <see cref="P:XmlPrime.XQuerySettings.BoundarySpace"/> property to set the default boundary space policy.</para>
      </remarks>
      <seealso cref="P:XmlPrime.XQuerySettings.BoundarySpace"/>
      <seealso href="http://www.w3.org/TR/xquery/#id-whitespace">[XQuery 1.0: An XML Query Language] 3.7.1.4 Boundary Whitespace</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#id-boundary-space-decls">[XQuery 1.0: An XML Query Language] 4.3 Boundary-space Declaration</seealso>
    </member>
    <member name="F:XmlPrime.BoundarySpace.Strip">
      <summary>
            Boundary whitespace should be stripped (deleted).
            </summary>
    </member>
    <member name="F:XmlPrime.BoundarySpace.Preserve">
      <summary>
            Boundary whitespace should be preserved.
            </summary>
    </member>
    <member name="T:XmlPrime.DynamicContextSettings">
      <summary>
              Represents the user-controllable dynamic context settings of an XPath expression, an XQuery program or
              an XSL transformation.
            </summary>
      <remarks>
        <para>For security reasons, the loading of external resources is disabled.
                This means that the <c>fn:doc</c>, <c>fn:document</c>, <c>fn:collection</c> and <c>fn:unparsed-text</c> 
                functions will always raise an error, and <c>fn:doc-available</c> and <c>fn:unparsed-text-available</c> will 
                always return <c>false()</c>.</para>
        <para>To enable the loading of external resources, set the <see cref="P:XmlPrime.DynamicContextSettings.DocumentSet"/> property.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xpath20/#eval_context">[XML Path Language (XPath) 2.0] 2.1.2 Dynamic Context</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#eval_context">[XQuery 1.0: An XML Query Language] 2.1.2 Dynamic Context</seealso>
      <seealso href="http://www.w3.org/TR/xslt20/#static-and-dynamic-context">[XSL Transformations (XSLT) Version 2.0] 5.4 The Static and Dynamic Context</seealso>
    </member>
    <member name="M:XmlPrime.DynamicContextSettings.#ctor(XmlPrime.DynamicContextSettings)">
      <overloads>
              Initializes a new instance of the <see cref="T:XmlPrime.DynamicContextSettings"/> class.
            </overloads>
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.DynamicContextSettings"/> class from another
              <see cref="T:XmlPrime.DynamicContextSettings"/> instance.
            </summary>
      <param name="settings">A <see cref="T:XmlPrime.DynamicContextSettings"/> instance from which to copy settings.</param>
      <remarks>
        <para>The <see cref="P:XmlPrime.DynamicContextSettings.Parameters"/> property is a new <see cref="T:XmlPrime.ParameterDictionary"/> whose values are copied from <paramref name="settings"/>.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.DynamicContextSettings.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.DynamicContextSettings"/> class.
            </summary>
      <exception cref="T:XmlPrime.LicenceException">The licence for XmlPrime was invalid</exception>
    </member>
    <member name="P:XmlPrime.DynamicContextSettings.AvailableEnvironmentVariables">
      <summary>
            Gets or sets the available environment variables.
            </summary>
      <value>
            An <see cref="T:XmlPrime.IEnvironmentVariables"/> instance containing a mapping from environment variable names 
            to string values.
            </value>
      <exception cref="T:System.ArgumentNullException">Raised if the property is set to <see langword="null"/>.</exception>
      <remarks>
        <para>The default value is an empty <see cref="T:XmlPrime.IEnvironmentVariables"/> instances.</para>
        <para>The available environment variables can be accessed via the
            <c>fn:available-environment-variables</c> and <c>fn:environment-variable</c> functions.</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.DynamicContextSettings.BaseOutputURI">
      <summary>
              Gets or sets the base output URI.
            </summary>
      <value>The base output URI.</value>
      <exception cref="T:System.ArgumentException">
            The value was set to a relative URI other than <see cref="F:XmlPrime.AnyUri.Empty"/>, or was an opaque absolute URI.
            </exception>
      <remarks>
        <para>
                This is the base URI used to resolve relative URIs given in <c>result-document</c> instructions.
              </para>
        <para>
                By default this property is set to <see cref="F:XmlPrime.AnyUri.Empty"/>.
              </para>
      </remarks>
    </member>
    <member name="P:XmlPrime.DynamicContextSettings.ContextItem">
      <summary>
              Gets or sets the initial context item.
            </summary>
      <value>
              An <see cref="T:System.Xml.XPath.XPathItem"/> representing the initial context item, or <see langword="null"/> if no context item has 
              been set.
            </value>
      <exception cref="T:System.ArgumentException">
              The value was not an <see cref="T:System.Xml.XPath.XPathNavigator"/> or <see cref="T:XmlPrime.XPathAtomicValue"/>.
            </exception>
      <remarks>
        <para>The default value is <see langword="null"/>.</para>
        <para>If this property is set to a <see cref="T:System.Xml.XPath.XPathNavigator"/> the value is first cloned.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xpath20/#eval_context">[XML Path Language (XPath) 2.0] 2.1.2 Dynamic Context</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#eval_context">[XQuery 1.0: An XML Query Language] 2.1.2 Dynamic Context</seealso>
      <seealso href="http://www.w3.org/TR/xslt20/#static-and-dynamic-context">[XSL Transformations (XSLT) Version 2.0] 5.4 The Static and Dynamic Context</seealso>
    </member>
    <member name="P:XmlPrime.DynamicContextSettings.ContextPosition">
      <summary>
              Gets or sets the context position.
            </summary>
      <value>
              A positive <see cref="T:System.Int64"/> representing the context position, or 0 if the context item is undefined.
            </value>
      <exception cref="T:System.ArgumentException">
              The value was not a positive <see cref="T:System.Int64"/> less than or equal to <see cref="P:XmlPrime.DynamicContextSettings.ContextSize"/>.
            </exception>
      <remarks>
        <para>The context position is the position of the context item within the sequence of items currently being processed.
                    When the context item is defined, the value of the context position is an integer greater than zero. 
                    The context position is returned by the expression fn:position(). W.</para>
        <para>The default value is 1 when the context item is defined, otherwise 0.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xpath20/#eval_context">[XML Path Language (XPath) 2.0] 2.1.2 Dynamic Context</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#eval_context">[XQuery 1.0: An XML Query Language] 2.1.2 Dynamic Context</seealso>
      <seealso href="http://www.w3.org/TR/xslt20/#static-and-dynamic-context">[XSL Transformations (XSLT) Version 2.0] 5.4 The Static and Dynamic Context</seealso>
    </member>
    <member name="P:XmlPrime.DynamicContextSettings.ContextSize">
      <summary>
              Gets or sets the context size.
            </summary>
      <value>
              A positive <see cref="T:System.Int64"/> representing the context size, or 0 if the initial context item is undefined (<see langword="null"/>).
            </value>
      <exception cref="T:System.ArgumentException">
              The value was not a positive <see cref="T:System.Int64"/> greater than or equal to <see cref="P:XmlPrime.DynamicContextSettings.ContextPosition"/>.
            </exception>
      <remarks>
        <para>The context size is the number of items in the sequence of items currently being processed.
                    The context size is returned by the expression <c>fn:last()</c>.
                    When the initial context item is defined, the value of the context size must be an integer greater than zero.</para>
        <para>The default value is 1 when the context item is defined, otherwise 0.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xpath20/#eval_context">[XML Path Language (XPath) 2.0] 2.1.2 Dynamic Context</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#eval_context">[XQuery 1.0: An XML Query Language] 2.1.2 Dynamic Context</seealso>
      <seealso href="http://www.w3.org/TR/xslt20/#static-and-dynamic-context">[XSL Transformations (XSLT) Version 2.0] 5.4 The Static and Dynamic Context</seealso>
    </member>
    <member name="P:XmlPrime.DynamicContextSettings.CurrentDateTime">
      <summary>
              Gets or sets the current date and time.
            </summary>
      <value>
              A nullable <see cref="T:XmlPrime.DateTimeWithZone"/> value representing the current date and time.  If this value is
              <see langword="null"/> then the current date and time will be the time when evaluation was started.
            </value>
      <remarks>
        <para>
                The current date and time is the date and time that will be returned by the <c>fn:current-date</c>, 
                <c>fn:current-time</c> and <c>fn:current-dateTime</c> functions.  It is however first adjusted to the
                implicit time zone.
              </para>
        <para>
                By default <see cref="P:XmlPrime.DynamicContextSettings.CurrentDateTime"/> is set to <see langword="null"/> and the current date and
                time will be set to the time when evaluation is started.
              </para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xpath20/#eval_context">[XML Path Language (XPath) 2.0] 2.1.2 Dynamic Context</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#eval_context">[XQuery 1.0: An XML Query Language] 2.1.2 Dynamic Context</seealso>
      <seealso href="http://www.w3.org/TR/xslt20/#static-and-dynamic-context">[XSL Transformations (XSLT) Version 2.0] 5.4 The Static and Dynamic Context</seealso>
    </member>
    <member name="P:XmlPrime.DynamicContextSettings.DefaultCalendar">
      <summary>
              Gets or sets the default calendar.
            </summary>
      <value>
              The default calendar to be used when formatting dates.
            </value>
      <remarks>
        <para>This is the calendar used when formatting dates in human-readable output (for example, by the functions <c>fn:format-date</c> and 
              <c>fn:format-dateTime</c>) if no other calendar is requested.</para>
        <para>The default value is determined by the value of the <see cref="P:System.Globalization.CultureInfo.Calendar"/> property of the <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/>.</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">Raised if the property is set to <see langword="null"/>.</exception>
      <seealso href="http://www.w3.org/TR/xquery-30/#eval_context">[XQuery 3.0: An XML Query Language] 2.1.2 Dynamic Context</seealso>
    </member>
    <member name="P:XmlPrime.DynamicContextSettings.DefaultCollectionURI">
      <summary>
              Gets or sets the default collection URI.
            </summary>
      <value>The default collection URI.</value>
      <remarks>
        <para>
                If this property is not set to <see langword="null"/> then any calls to <c>fn:collection</c> with no 
                arguments or with an empty argument will be treated as if they had an argument with this URI instead.  This 
                effectively allows the default collection to be set to any other collection in the document set.
              </para>
        <para>
                If this property is set to <see langword="null"/> then the default collection returned is that resolved by
                <see cref="P:XmlPrime.DynamicContextSettings.DocumentSet"/>.
              </para>
        <para>
                By default this property is set to <see langword="null"/>.
              </para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xpath20/#eval_context">[XML Path Language (XPath) 2.0] 2.1.2 Dynamic Context</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#eval_context">[XQuery 1.0: An XML Query Language] 2.1.2 Dynamic Context</seealso>
      <seealso href="http://www.w3.org/TR/xslt20/#static-and-dynamic-context">[XSL Transformations (XSLT) Version 2.0] 5.4 The Static and Dynamic Context</seealso>
    </member>
    <member name="P:XmlPrime.DynamicContextSettings.DefaultLanguage">
      <summary>
              Gets or sets the default language.
            </summary>
      <value>
              The default language to be used when formatting numbers, dates and times.
            </value>
      <remarks>
        <para>This is the natural language used when creating human-readable output (for example, by the functions <c>fn:format-date</c> and 
              <c>fn:format-integer</c>) if no other language is requested. The value is a language code as defined by the type <c>xs:language</c>.]</para>
        <para>The default value is determined by the value of the <see cref="P:System.Globalization.CultureInfo.IetfLanguageTag"/> property of the 
              <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/>.</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">Raised if the property is set to <see langword="null"/>.</exception>
      <exception cref="T:System.ArgumentException">Raised if the property specifies a culture that is not supported.</exception>
      <seealso href="http://www.w3.org/TR/xquery-30/#eval_context">[XQuery 3.0: An XML Query Language] 2.1.2 Dynamic Context</seealso>
    </member>
    <member name="P:XmlPrime.DynamicContextSettings.DefaultPlace">
      <summary>
              Gets or sets the default place.
            </summary>
      <value>
              The default place to be used when formatting dates.
            </value>
      <remarks>
        <para>This is a geographical location used to identify the place where events happened (or will happen) when formatting dates and times using functions 
              such as <c>fn:format-date</c> and <c>fn:format-dateTime</c>, if no other place is specified.  It is used when translating timezone offsets to civil timezone names, 
              and when using calendars where the translation from ISO dates/times to a local representation is dependent on geographical location.</para>
        <para>The default value is determined by the value of the <see cref="P:System.Globalization.CultureInfo.IetfLanguageTag"/> property of the <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/>.</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">Raised if the property is set to <see langword="null"/>.</exception>
      <seealso href="http://www.w3.org/TR/xquery-30/#eval_context">[XQuery 3.0: An XML Query Language] 2.1.2 Dynamic Context</seealso>
    </member>
    <member name="P:XmlPrime.DynamicContextSettings.DocumentSet">
      <summary>
              Gets or sets the cache of documents and collections.
            </summary>
      <value>
              The <see cref="T:XmlPrime.DocumentSet"/> instance containing the cache of documents and collections.
            </value>
      <remarks>
        <para>
                The document set keeps a thread-safe cache of all documents and collections available to the query, and
                those marked as unavailable.
              </para>
        <para>
                The <c>fn:doc</c>, <c>fn:doc-available</c>, <c>fn:collection</c>, <c>fn:document</c>, 
                <c>fn:unparsed-text</c> and <c>fn:unparsed-text-available</c> functions all retrieve documents and
                collections through the document set.  This enforces stability of these function and the constraint that 
                <c>doc(document-uri($N)) is $N</c> is <c>true</c> for any document node <c>$N</c>.
              </para>
        <para>
                In order to prevent documents from being loaded every time the XQuery program, XPath expression or XSL
                transformation is run, the document set can be shared between queries.
              </para>
        <para>
                The document set can be pre-populated with documents and collections.
              </para>
        <para>
                If this property is set to <see langword="null"/> then the loading of external resources by functions
                such as <c>fn:doc</c> and <c>fn:collection</c> is prohibited.
              </para>
        <para>
                By default, this property is set to <see langword="null"/></para>
      </remarks>
    </member>
    <member name="P:XmlPrime.DynamicContextSettings.ImplicitTimeZone">
      <summary>
              Gets or sets the time zone to be used when a <c>xs:date</c>, <c>xs:time</c>, or <c>xs:dateTime</c> value 
              that does not have a time zone is used in a comparison or arithmetic operation.
            </summary>
      <value>
              The time zone to be used when a <c>xs:date</c>, <c>xs:time</c>, or <c>xs:dateTime</c> value 
              that does not have a time zone is used in a comparison or arithmetic operation. 
            </value>
      <remarks>
              The default value is the time zone of the current computer system given by <see cref="P:XmlPrime.TimeZone.CurrentTimeZone"/>.
            </remarks>
      <seealso href="http://www.w3.org/TR/xpath20/#eval_context">[XML Path Language (XPath) 2.0] 2.1.2 Dynamic Context</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#eval_context">[XQuery 1.0: An XML Query Language] 2.1.2 Dynamic Context</seealso>
      <seealso href="http://www.w3.org/TR/xslt20/#static-and-dynamic-context">[XSL Transformations (XSLT) Version 2.0] 5.4 The Static and Dynamic Context</seealso>
    </member>
    <member name="P:XmlPrime.DynamicContextSettings.Parameters">
      <summary>
              Gets the collection of parameters for the XQuery program, XPath expression or XSL transformation.
            </summary>
      <value>
              A <see cref="T:XmlPrime.ParameterDictionary"/> instance containing the parameters for the XQuery program, XPath
              expression or XSL transformation.  This value can never be <see langword="null"/>.
            </value>
      <remarks>
              A parameter sets the value of an external variable in XQuery, a variable in XPath or an XSLT stylesheet parameter.
            </remarks>
    </member>
    <member name="E:XmlPrime.DynamicContextSettings.Trace">
      <summary>
              Occurs when <c>fn:trace</c> is evaluated by an XQuery program, XPath expression or XSL transformation.
            </summary>
      <seealso href="http://www.w3.org/TR/xpath-functions/#func-trace">[XQuery 1.0 and XPath 2.0 Functions and Operators] 4 The Trace Function</seealso>
    </member>
    <member name="E:XmlPrime.DynamicContextSettings.Message">
      <summary>
              Occurs when an <c>xsl:message</c> instruction is executed in an XSL transformation.
            </summary>
      <seealso href="http://www.w3.org/TR/xslt20/#message">[XSL Transformations (XSLT) Version 2.0] 17 Messages</seealso>
    </member>
    <member name="E:XmlPrime.DynamicContextSettings.Execution">
      <summary>
              Occurs when profiling is enabled.
            </summary>
    </member>
    <member name="T:XmlPrime.Quantifier">
      <summary>
            Specifies the quantifier of an <see cref="T:XmlPrime.XdmType"/>.
            </summary>
      <remarks>
        <para>The <see cref="T:XmlPrime.Quantifier"/> of an <see cref="T:XmlPrime.XdmType"/> is used to approximate the 
            the possible number of items in a value with a given <see cref="T:XmlPrime.XdmType"/>.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xquery-semantics/#jd_quantifier">XQuery 1.0 and XPath 2.0 Formal Semantics</seealso>
    </member>
    <member name="F:XmlPrime.Quantifier.One">
      <summary>
            Exactly one occurrence.
            </summary>
    </member>
    <member name="F:XmlPrime.Quantifier.ZeroOrOne">
      <summary>
            Zero or one occurrence (?).
            </summary>
    </member>
    <member name="F:XmlPrime.Quantifier.OneOrMore">
      <summary>
            One or more occurrences (+).
            </summary>
    </member>
    <member name="F:XmlPrime.Quantifier.ZeroOrMore">
      <summary>
            Zero or more occurrences (*).
            </summary>
    </member>
    <member name="T:XmlPrime.OrderingMode">
      <summary>
            Specifies the ordering mode of an XQuery module.
            </summary>
      <remarks>
        <para>The ordering mode affects the ordering of the result sequences returned by certain path expressions,
            FLWOR, union, intersect and except expressions.</para>
        <para>Currently, the ordering mode is ignored by <c>XmlPrime</c>, and all affected expressions are evaluated with their
            results in document order.</para>
        <para>Use the <see cref="P:XmlPrime.XQuerySettings.OrderingMode"/> property to set the default ordering mode.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xquery/#id-steps">[XQuery 1.0: An XML Query Language] 3.2.1 Steps</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#id-flwor-expressions">[XQuery 1.0: An XML Query Language] 3.8 FLWOR Expressions</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#id-default-ordering-decl">[XQuery 1.0: An XML Query Language] 4.7 Ordering Mode Declaration</seealso>
    </member>
    <member name="F:XmlPrime.OrderingMode.Ordered">
      <summary>
            Results are returned in document order.
            </summary>
    </member>
    <member name="F:XmlPrime.OrderingMode.Unordered">
      <summary>
            Results are returned in an arbitrary order.
            </summary>
    </member>
    <member name="T:XmlPrime.XPathSettings">
      <summary>
              Represents the user-controllable static context settings of an <see cref="T:XmlPrime.XPath"/>.
            </summary>
      <remarks>
        <para>The static context of an expression is the information that is available during static analysis of the 
                expression, prior to its evaluation.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xpath20/#static_context">[XML Path Language (XPath) 2.0] 2.1.1 Static Context</seealso>
      <seealso href="http://www.w3.org/TR/xquery/#static_context">[XQuery 1.0: An XML Query Language] 2.1.1 Static Context</seealso>
    </member>
    <member name="M:XmlPrime.XPathSettings.#ctor">
      <overloads>
              Initializes a new instance of the <see cref="T:XmlPrime.XPathSettings"/> class.
            </overloads>
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.XPathSettings"/> class.
            </summary>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="M:XmlPrime.XPathSettings.#ctor(System.Xml.XmlNameTable)">
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.XPathSettings"/> class with the specified <see cref="T:System.Xml.XmlNameTable"/>.
            </summary>
      <param name="nameTable">The <see cref="T:System.Xml.XmlNameTable"/> instance to be used for atomized string comparisons.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nameTable"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="M:XmlPrime.XPathSettings.#ctor(System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.XPathSettings"/> class with the specified <see cref="T:System.Xml.XmlNameTable"/> and in scope namespaces.
            </summary>
      <param name="nameTable">The <see cref="T:System.Xml.XmlNameTable"/> instance to be used for atomized string comparisons.</param>
      <param name="namespaceResolver">
              An <see cref="T:System.Xml.IXmlNamespaceResolver"/> defining the in scope namespaces, or <see langword="null"/> if no
              namespaces are in scope.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nameTable"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="M:XmlPrime.XPathSettings.#ctor(XmlPrime.XPathSettings)">
      <overloads>
              Initializes a new instance of the <see cref="T:XmlPrime.XPathSettings"/> class.
            </overloads>
      <summary>
              Initializes a new instance of the <see cref="T:XmlPrime.XPathSettings"/> class from another
              <see cref="T:XmlPrime.XPathSettings"/> instance.
            </summary>
      <param name="settings">A <see cref="T:XmlPrime.XPathSettings"/> instance from which to copy settings.</param>
      <remarks>
        <para>The <see cref="P:XmlPrime.StaticContextSettings.Schemas"/>, <see cref="T:System.Xml.NameTable"/> and
                <see cref="P:XmlPrime.StaticContextSettings.Libraries"/> properties reference the same instance
                as the corresponding <paramref name="settings"/> property.</para>
      </remarks>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="P:XmlPrime.XPathSettings.CompatibilityMode">
      <summary>
              Gets or sets a value indicating whether rules for backward compatibility with XPath Version 1.0 are in effect
            </summary>
      <value>
        <see langword="true"/> if rules for backward compatibility with XPath Version 1.0 are in effect; otherwise, <see langword="false"/>.
            </value>
      <remarks>
              XPath 1.0 compatibility mode affects the function conversion rules employed when the type of a function argument
              doesn't match the function's signature, and the evaluation of arithmetic expressions, general comparisons and
              logical expressions
            </remarks>
      <seealso href="http://www.w3.org/TR/xpath20/#id-backwards-compatibility">[XML Path Language (XPath) 2.0] I Backwards Compatibility with XPath 1.0 (Non-Normative)</seealso>
    </member>
    <member name="P:XmlPrime.XPathSettings.EnabledFeatures">
      <summary>
            	Gets or sets a value indicating which optional features are enabled.
            </summary>
      <value>
            	An <see cref="T:XmlPrime.XPathOptionalFeatures"/> value indicating which optional features are enabled.
            </value>
      <remarks>
        <para>Disabling a feature causes an error to be raised during compilation or evaluation of an expression
             if the feature is used in the transformation.</para>
        <para>By default all supported optional features are enabled.</para>
      </remarks>
    </member>
    <member name="P:XmlPrime.XPathSettings.ImplicitVariableDeclaration">
      <summary>
              Gets or sets a value indicating whether referenced variables must be declared.
            </summary>
      <value>
        <see langword="true"/> if referenced variables will be implicitly declared; otherwise, <see langword="false"/>.
            </value>
    </member>
    <member name="P:XmlPrime.XPathSettings.NewlineNormalization">
      <summary>
              Gets or sets a value indicating whether the processor will behave as if it normalized all line breaks 
              on input, before parsing.
            </summary>
      <value>
        <see langword="true"/> if the processor will behave as if it normalized all line breaks on input;
              otherwise <see langword="false"/></value>
      <remarks>
        <para>The default value is <see langword="true"/>.</para>
        <para>When parsing XPath expressions embedded in XML, this value should be set to <see langword="false"/> since
                line ending normalization will already have been performed by the XML parser.</para>
      </remarks>
      <seealso href="https://www.w3.org/Bugs/Public/show_bug.cgi?id=14917">Bug 14917 - Normalization of line endings in XPath</seealso>
    </member>
    <member name="P:XmlPrime.XPathSettings.TypeCheckingMode">
      <summary>
              Gets or sets a value indicating the type checking mode to be used during compilation.
            </summary>
      <value>
              A member of the <see cref="T:XmlPrime.TypeCheckingMode"/> enumeration.
            </value>
      <remarks>
              By default this is set to <see cref="F:XmlPrime.TypeCheckingMode.Optimistic"/>.
            </remarks>
    </member>
    <member name="P:XmlPrime.XPathSettings.XPathVersion">
      <summary>
              Gets or sets the version of XPath to use for parsing
            </summary>
      <value>A <see cref="P:XmlPrime.XPathSettings.XPathVersion"/> value indicating which version of the specification should be used.</value>
      <exception cref="T:System.ArgumentException">Raised if the specified version is not supported.</exception>
      <remarks>
        <para>
                The default value of this property is the latest version of XPath which is fully supported.  Currently this is <see cref="F:XmlPrime.XPathVersion.XPath31"/>.
              </para>
        <para>Settings this value determines the set of available functions for use within XPath expressions and 
                determines the version of XPath to use when parsing.</para>
      </remarks>
    </member>
    <member name="T:XmlPrime.XQuery">
      <summary>
            	Queries XML data using the XQuery language.
            </summary>
      <remarks>
        <para>The <see cref="T:XmlPrime.XQuery"/> class is an XQuery processor that supports the XQuery 1.0 syntax.</para>
      </remarks>
      <seealso cref="T:XmlPrime.XQuerySettings"/>
      <seealso href="http://www.w3.org/TR/xquery/">XQuery 1.0: An XML Query Language</seealso>
    </member>
    <member name="M:XmlPrime.XQuery.Compile(System.String)">
      <overloads>
            	Compiles the specified XQuery program and returns an <see cref="T:XmlPrime.XQuery"/> object that represents the XQuery program.
            </overloads>
      <summary>
            	Compiles the specified XQuery program and returns an <see cref="T:XmlPrime.XQuery"/> object that represents the XQuery program.
            	Default static context settings are used.
            </summary>
      <param name="query">An XQuery program.</param>
      <returns>
            	An <see cref="T:XmlPrime.XQuery"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="query"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the query.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="M:XmlPrime.XQuery.Compile(System.String,System.Xml.XmlNameTable)">
      <summary>
            	Compiles the specified XQuery program and returns an <see cref="T:XmlPrime.XQuery"/> object that represents the XQuery program.
            	Default static context settings are used.
            </summary>
      <param name="query">An XQuery program.</param>
      <param name="nameTable">The name table for documents used with this query.</param>
      <returns>
            	An <see cref="T:XmlPrime.XQuery"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="query"/> or <paramref name="nameTable"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the query.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="M:XmlPrime.XQuery.Compile(System.Uri,System.String)">
      <summary>
            	Compiles the specified XQuery program and returns an <see cref="T:XmlPrime.XQuery"/> object that represents the XQuery program.
            	Default static context settings are used.
            </summary>
      <param name="source">The base URI of the query.</param>
      <param name="query">An XQuery expression.</param>
      <returns>
            	An <see cref="T:XmlPrime.XQuery"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="query"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the query.</exception>
      <remarks>
        <para>The <paramref name="source"/> parameter is used as the base URI of the query if the query does
            		not include a <c>base-uri</c> declaration.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XQuery.Compile(System.Uri,System.String,System.Xml.XmlNameTable)">
      <summary>
            	Compiles the specified XQuery program and returns an <see cref="T:XmlPrime.XQuery"/> object that represents the XQuery program.
            	Default static context settings are used.
            </summary>
      <param name="source">The base URI of the query.</param>
      <param name="query">An XQuery expression.</param>
      <param name="nameTable">The name table for documents used with this query.</param>
      <returns>
            	An <see cref="T:XmlPrime.XQuery"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="query"/> or <paramref name="nameTable"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the query.</exception>
      <remarks>
        <para>The <paramref name="source"/> parameter is used as the base URI of the query if the query does
            		not include a <c>base-uri</c> declaration.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XQuery.Compile(System.String,XmlPrime.XQuerySettings)">
      <summary>
            	Compiles the specified XQuery program and returns an <see cref="T:XmlPrime.XQuery"/> object that represents the XQuery program.
            	The specified static context settings are used.
            </summary>
      <param name="query">An XQuery program.</param>
      <param name="settings">The initial static context settings.</param>
      <returns>
            	An <see cref="T:XmlPrime.XQuery"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="query"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the query.</exception>
    </member>
    <member name="M:XmlPrime.XQuery.Compile(System.Uri,System.String,XmlPrime.XQuerySettings)">
      <summary>
            	Compiles the specified XQuery program and returns an <see cref="T:XmlPrime.XQuery"/> object that represents the XQuery program.
            	The specified static context settings are used.
            </summary>
      <param name="source">The base URI of the query.</param>
      <param name="query">An XQuery expression.</param>
      <param name="settings">The initial static context settings.</param>
      <returns>
            	An <see cref="T:XmlPrime.XQuery"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">Thrown if 
            	<paramref name="query"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the query.</exception>
      <remarks>
        <para>If it is not <see langword="null"/>, the <paramref name="source"/> parameter is used as the base URI 
            		of the query if the query does not include a <c>base-uri</c> declaration.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XQuery.Compile(System.IO.Stream,XmlPrime.XQuerySettings)">
      <summary>
            	Loads and compiles the specified XQuery program and returns an <see cref="T:XmlPrime.XQuery"/> object that represents 
            	the XQuery program.  The specified static context settings are used.
            </summary>
      <param name="stream">The <see cref="T:System.IO.Stream"/> from which to read the XQuery program.</param>
      <param name="settings">The initial static context settings.</param>
      <returns>
            	An <see cref="T:XmlPrime.XQuery"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
            	Thrown if <paramref name="stream"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the query.</exception>
    </member>
    <member name="M:XmlPrime.XQuery.Compile(System.Uri,System.IO.Stream,XmlPrime.XQuerySettings)">
      <summary>
            	Loads and compiles the specified XQuery program and returns an <see cref="T:XmlPrime.XQuery"/> object that represents the XQuery program.
            	The specified static context settings are used.
            </summary>
      <param name="source">The base URI of the query.</param>
      <param name="stream">The <see cref="T:System.IO.Stream"/> from which to read the XQuery expression.</param>
      <param name="settings">The initial static context settings.</param>
      <returns>
            	An <see cref="T:XmlPrime.XQuery"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the query.</exception>
      <remarks>
        <para>If it is not <see langword="null"/>, the <paramref name="source"/> parameter is used as the base URI 
            		of the query if the query does not include a <c>base-uri</c> declaration.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XQuery.Compile(System.IO.FileStream,XmlPrime.XQuerySettings)">
      <summary>
            	Loads and compiles the specified XQuery program and returns an <see cref="T:XmlPrime.XQuery"/> object that represents the XQuery program.
            	The specified static context settings are used.
            </summary>
      <param name="stream">The stream from which to read the XQuery program.</param>
      <param name="settings">The initial static context settings.</param>
      <returns>
            	An <see cref="T:XmlPrime.XQuery"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">Thrown if 
            	<paramref name="stream"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the query.</exception>
      <remarks>
        <para>The <see cref="P:System.IO.FileStream.Name"/> property of <paramref name="stream"/> is 
            		used to compute the the base URI of the query if the query does not include a <c>base-uri</c> declaration.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XQuery.Compile(System.Xml.XPath.IXPathNavigable,XmlPrime.XQuerySettings)">
      <summary>
            	Compiles the XQuery program expressed using the XML Syntax for XQuery 1.0 (XQueryX)
            	and returns an <see cref="T:XmlPrime.XQuery"/> object that represents the XQuery program.
            	The specified static context settings are used.
            </summary>
      <param name="query">An XQuery program expressed using the XML Syntax for XQuery 1.0 (XQueryX).</param>
      <param name="settings">The initial static context settings.</param>
      <returns>
            	An <see cref="T:XmlPrime.XQuery"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="query"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the query.</exception>
      <seealso href="http://www.w3.org/TR/xqueryx/">XML Syntax for XQuery 1.0 (XQueryX)</seealso>
    </member>
    <member name="M:XmlPrime.XQuery.Compile(System.Xml.XmlReader,XmlPrime.XQuerySettings)">
      <summary>
            	Compiles the XQuery program expressed using the XML Syntax for XQuery 1.0 (XQueryX)
            	and returns an <see cref="T:XmlPrime.XQuery"/> object that represents the XQuery program.
            	The specified static context settings are used.
            </summary>
      <param name="reader">An <see cref="T:System.Xml.XmlReader"/> instance positioned just before the beginning of an XQuery program expressed using the XML Syntax for XQuery 1.0 (XQueryX).</param>
      <param name="settings">The initial static context settings.</param>
      <returns>
            	An <see cref="T:XmlPrime.XQuery"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the query.</exception>
      <seealso href="http://www.w3.org/TR/xqueryx/">XML Syntax for XQuery 1.0 (XQueryX)</seealso>
    </member>
    <member name="M:XmlPrime.XQuery.CompileExternalVariable(System.String,XmlPrime.XQuerySettings)">
      <summary>
            	Compiles the specified XQuery expression and returns an <see cref="T:XmlPrime.XQuery"/> instance that
            	represents the XQuery expression using the specified static context settings.
            </summary>
      <param name="query">An XQuery expression.</param>
      <param name="settings">The initial static context settings.</param>
      <returns>
            	An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the result of evaluating the expression in the specified
            	context, or <see langword="null"/> if an unrecoverable error was raised and handled by a subscriber to
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/>.
            </returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="query"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the query.</exception>
      <remarks>
        <para>The <see cref="M:XmlPrime.XQuery.CompileExternalVariable(System.String,XmlPrime.XQuerySettings)"/> method is used to compile a single XQuery expression,
            		which can then be used to set the value of an <c>external</c> declared variable in another query.
            		The <paramref name="query"/> parameter should match the <c>ExprSingle</c> production, which is the same
            		syntax as for a variable declaration in a query.
            	</para>
        <para>The <see cref="P:XmlPrime.StaticContextSettings.NameTable"/> property of the <paramref name="settings"/> 
            		parameter should refer to the same <see cref="T:System.Xml.XmlNameTable"/> as is used in the <see cref="T:XmlPrime.XQuery"/> for
            		which this expression is a parameter.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xquery/#prod-xquery-ExprSingle">[XQuery 1.0: An XML Query Language] A XQuery Grammar</seealso>
    </member>
    <member name="M:XmlPrime.XQuery.ToXQueryX(System.String,System.Xml.XmlWriter,XmlPrime.XQueryVersion,XmlPrime.BoundarySpace,XmlPrime.XmlVersion)">
      <summary>
            Writes the specified <paramref name="query"/> to the specified <see cref="T:System.Xml.XmlWriter"/>
            using the XML Syntax for XQuery 1.0 (XQueryX).
            </summary>
      <param name="query">The XQuery program to convert to XML syntax.</param>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which the XML syntax will be written.</param>
      <param name="xqueryVersion">The XQuery version.</param>
      <param name="boundarySpace">The default boundary space policy used in the conversion.</param>
      <param name="xmlVersion">The XML version used by XQuery.</param>
      <seealso href="http://www.w3.org/TR/xqueryx/">XML Syntax for XQuery 1.0 (XQueryX)</seealso>
      <exception cref="T:XmlPrime.XdmException">An error occurred parsing the query.</exception>
    </member>
    <member name="M:XmlPrime.XQuery.ToXQueryX(System.Uri,System.String,XmlPrime.XQueryVersion,XmlPrime.BoundarySpace,XmlPrime.XmlVersion)">
      <summary>
            Returns an <see cref="T:System.Xml.XPath.IXPathNavigable"/> over the specified XQuery converted to
            the XML Syntax for XQuery 1.0 (XQueryX).
            </summary>
      <param name="source">The base URI of the query.</param>
      <param name="query">The XQuery program to convert to XML syntax.</param>
      <param name="xqueryVersion">The XQuery version.</param>
      <param name="boundarySpace">The default boundary space policy used in the conversion.</param>
      <param name="xmlVersion">The XML version used by XQuery.</param>
      <returns>
            An <see cref="T:System.Xml.XPath.IXPathNavigable"/> over the specified XQuery.
            </returns>
      <seealso href="http://www.w3.org/TR/xqueryx/">XML Syntax for XQuery 1.0 (XQueryX)</seealso>
      <exception cref="T:XmlPrime.XdmException">An error occurred parsing the query.</exception>
    </member>
    <member name="M:XmlPrime.XQuery.ToXQueryX(System.Uri,System.String,System.Xml.XmlWriter,XmlPrime.XQueryVersion,XmlPrime.BoundarySpace,XmlPrime.XmlVersion)">
      <summary>
            Writes the specified <paramref name="query"/> to the specified <see cref="T:System.Xml.XmlWriter"/>
            using the XML Syntax for XQuery 1.0 (XQueryX).
            </summary>
      <param name="source">The base URI of the query.</param>
      <param name="query">The XQuery program to convert to XML syntax.</param>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which the XML syntax will be written.</param>
      <param name="xqueryVersion">The XQuery version.</param>
      <param name="boundarySpace">The default boundary space policy used in the conversion.</param>
      <param name="xmlVersion">The XML version used by XQuery.</param>
      <exception cref="T:XmlPrime.XdmException">An error occurred parsing the query.</exception>
      <seealso href="http://www.w3.org/TR/xqueryx/">XML Syntax for XQuery 1.0 (XQueryX)</seealso>
    </member>
    <member name="M:XmlPrime.XQuery.ToXQueryX(System.String,XmlPrime.XQueryVersion,XmlPrime.BoundarySpace,XmlPrime.XmlVersion)">
      <summary>
            Returns an <see cref="T:System.Xml.XPath.IXPathNavigable"/> over the specified XQuery converted to
            the XML Syntax for XQuery 1.0 (XQueryX).
            </summary>
      <param name="query">The XQuery program to convert to XML syntax.</param>
      <param name="xqueryVersion">The XQuery version.</param>
      <param name="boundarySpace">The default boundary space policy used in the conversion.</param>
      <param name="xmlVersion">The XML version used by XQuery.</param>
      <returns>
            An <see cref="T:System.Xml.XPath.IXPathNavigable"/> over the specified XQuery.
            </returns>
      <seealso href="http://www.w3.org/TR/xqueryx/">XML Syntax for XQuery 1.0 (XQueryX)</seealso>
      <exception cref="T:XmlPrime.XdmException">An error occurred parsing the query.</exception>
      <remarks/>
    </member>
    <member name="M:XmlPrime.XQuery.ToXQueryX(System.Xml.XmlNameTable,System.Uri,System.String,XmlPrime.XQueryVersion,XmlPrime.BoundarySpace,XmlPrime.XmlVersion)">
      <summary>
            Returns an <see cref="T:System.Xml.XPath.IXPathNavigable"/> over the specified XQuery converted to
            the XML Syntax for XQuery 1.0 (XQueryX).
            </summary>
      <param name="nameTable">The name table used for the converted document.</param>
      <param name="source">The base URI of the query.</param>
      <param name="query">The XQuery program to convert to XML syntax.</param>
      <param name="xqueryVersion">The XQuery version.</param>
      <param name="boundarySpace">The default boundary space policy used in the conversion.</param>
      <param name="xmlVersion">The XML version used by XQuery.</param>
      <returns>
            An <see cref="T:System.Xml.XPath.IXPathNavigable"/> over the specified XQuery.
            </returns>
      <seealso href="http://www.w3.org/TR/xqueryx/">XML Syntax for XQuery 1.0 (XQueryX)</seealso>
      <exception cref="T:XmlPrime.XdmException">An error occurred parsing the query.</exception>
    </member>
    <member name="M:XmlPrime.XQuery.ToString">
      <summary>
            	Returns a <see cref="T:System.String"/> representing the query execution plan.
            </summary>
      <returns>A <see cref="T:System.String"/> representing the query execution plan.</returns>
    </member>
    <member name="M:XmlPrime.XQuery.Evaluate(XmlPrime.DynamicContextSettings)">
      <overloads>
            	Returns an <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the result of evaluating the XQuery program.
            </overloads>
      <summary>
            	Returns an <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the result of evaluating the XQuery program.
            </summary>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <returns>
            	An <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the result of evaluating the XQuery program.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.XdmException">
            	An error occurred evaluating the query.
            </exception>
      <exception cref="T:System.InvalidOperationException">The query is an updating expression.</exception>
      <remarks>
        <para>
            The results of the query are only evaluated whilst they are enumerated.  Any errors encountered during
            evaluation may be thrown from the <see cref="M:System.Collections.IEnumerator.MoveNext"/> method and
            <see cref="P:System.Collections.Generic.IEnumerator`1.Current"/> property of the enumerator over the
            <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </para>
        <para>
            	The items in the returned <see cref="T:System.Collections.Generic.IEnumerable`1"/> will all be instances of
            <see cref="T:System.Xml.XPath.XPathNavigator"/> (if the expression returns a node), <see cref="T:XmlPrime.XPathAtomicValue"/> (if the expression returns an 
            atomic value) or <see cref="T:XmlPrime.XPathFunctionItem"/> (if the expression returns a function item).
            	</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XQuery.Evaluate(XmlPrime.DynamicContextSettings,XmlPrime.IResultDocumentHandler)">
      <summary>
            Returns an <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the result of evaluating the XQuery program.
            </summary>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocumentHandler">The result document handler.</param>
      <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the result of evaluating the XQuery program.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/> or <paramref name="resultDocumentHandler"/> are <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.XdmException">
            An error occurred evaluating the query.
            </exception>
      <remarks>
        <para>
            The results of the query are only evaluated whilst they are enumerated.  Any errors encountered during
            evaluation may be thrown from the <see cref="M:System.Collections.IEnumerator.MoveNext"/> method and
            <see cref="P:System.Collections.Generic.IEnumerator`1.Current"/> property of the enumerator over the
            <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </para>
        <para>
            	The items in the returned <see cref="T:System.Collections.Generic.IEnumerable`1"/> will all be instances of
            <see cref="T:System.Xml.XPath.XPathNavigator"/> (if the expression returns a node), <see cref="T:XmlPrime.XPathAtomicValue"/> (if the expression returns an 
            atomic value) or <see cref="T:XmlPrime.XPathFunctionItem"/> (if the expression returns a function item).
            	</para>
        <para>This method is suitable for both updating and non-updating queries.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XQuery.Evaluate(System.Xml.XPath.XPathItem)">
      <summary>
            	Returns an <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the result of evaluating the XQuery program.
            </summary>
      <param name="contextItem">The initial context item for the query.</param>
      <returns>
            	An <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the result of evaluating the XQuery program.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contextItem"/> is <see langword="null"/>.</exception>
      <exception cref="T:System.InvalidOperationException">The query is an updating expression.</exception>
      <exception cref="T:XmlPrime.XdmException">
            	An error occurred evaluating the query.
            </exception>
      <remarks>
        <para>
            The results of the query are only evaluated whilst they are enumerated.  Any errors encountered during
            evaluation may be thrown from the <see cref="M:System.Collections.IEnumerator.MoveNext"/> method and
            <see cref="P:System.Collections.Generic.IEnumerator`1.Current"/> property of the enumerator over the
            <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </para>
        <para>
            	The items in the returned <see cref="T:System.Collections.Generic.IEnumerable`1"/> will all be instances of
            <see cref="T:System.Xml.XPath.XPathNavigator"/> (if the expression returns a node), <see cref="T:XmlPrime.XPathAtomicValue"/> (if the expression returns an 
            atomic value) or <see cref="T:XmlPrime.XPathFunctionItem"/> (if the expression returns a function item).
            	</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XQuery.Evaluate(System.Xml.XPath.XPathItem,XmlPrime.IResultDocumentHandler)">
      <summary>
            Returns an <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the result of evaluating the XQuery program.
            </summary>
      <param name="contextItem">The initial context item for the query.</param>
      <param name="resultDocumentHandler">The result document handler.</param>
      <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the result of evaluating the XQuery program.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contextItem"/> or <paramref name="resultDocumentHandler"/> are <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.XdmException">
            An error occurred evaluating the query.
            </exception>
      <remarks>
        <para>
            The results of the query are only evaluated whilst they are enumerated.  Any errors encountered during
            evaluation may be thrown from the <see cref="M:System.Collections.IEnumerator.MoveNext"/> method and
            <see cref="P:System.Collections.Generic.IEnumerator`1.Current"/> property of the enumerator over the
            <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </para>
        <para>
            	The items in the returned <see cref="T:System.Collections.Generic.IEnumerable`1"/> will all be instances of
            <see cref="T:System.Xml.XPath.XPathNavigator"/> (if the expression returns a node), <see cref="T:XmlPrime.XPathAtomicValue"/> (if the expression returns an 
            atomic value) or <see cref="T:XmlPrime.XPathFunctionItem"/> (if the expression returns a function item).
            	</para>
        <para>This method is suitable for queries which use <c>fn:put</c>.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XQuery.Evaluate">
      <summary>
            	Returns an <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the result of evaluating the XQuery program.
            </summary>
      <returns>
            	An <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the result of evaluating the XQuery program.
            </returns>
      <exception cref="T:XmlPrime.XdmException">
            	An error occurred evaluating the query.
            </exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <remarks>
        <para>
            The results of the query are only evaluated whilst they are enumerated.  Any errors encountered during
            evaluation may be thrown from the <see cref="M:System.Collections.IEnumerator.MoveNext"/> method and
            <see cref="P:System.Collections.Generic.IEnumerator`1.Current"/> property of the enumerator over the
            <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </para>
        <para>
            	The items in the returned <see cref="T:System.Collections.Generic.IEnumerable`1"/> will all be instances of
            <see cref="T:System.Xml.XPath.XPathNavigator"/> (if the expression returns a node), <see cref="T:XmlPrime.XPathAtomicValue"/> (if the expression returns an 
            atomic value) or <see cref="T:XmlPrime.XPathFunctionItem"/> (if the expression returns a function item).
            	</para>
        <para>This method is not suitable for queries which use <c>fn:put</c>.  Call to <c>fn:put</c> will raise
            an exception.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XQuery.Evaluate(XmlPrime.IResultDocumentHandler)">
      <summary>
            Returns an <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the result of evaluating the XQuery program.
            </summary>
      <param name="resultDocumentHandler">The result document handler.</param>
      <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the result of evaluating the XQuery program.
            </returns>
      <exception cref="T:XmlPrime.XdmException">
            An error occurred evaluating the query.
            </exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <remarks>
        <para>
            The results of the query are only evaluated whilst they are enumerated.  Any errors encountered during
            evaluation may be thrown from the <see cref="M:System.Collections.IEnumerator.MoveNext"/> method and
            <see cref="P:System.Collections.Generic.IEnumerator`1.Current"/> property of the enumerator over the
            <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </para>
        <para>
            	The items in the returned <see cref="T:System.Collections.Generic.IEnumerable`1"/> will all be instances of
            <see cref="T:System.Xml.XPath.XPathNavigator"/> (if the expression returns a node), <see cref="T:XmlPrime.XPathAtomicValue"/> (if the expression returns an 
            atomic value) or <see cref="T:XmlPrime.XPathFunctionItem"/> (if the expression returns a function item).
            	</para>
        <para>This method is suitable for queries which use <c>fn:put</c>.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XQuery.EvaluateToItem(XmlPrime.DynamicContextSettings)">
      <overloads>
            	Returns an <see cref="T:System.Xml.XPath.XPathItem"/> representing the result of evaluating the XQuery program,
            	or <see langword="null"/> if the query returns the empty sequence.
            </overloads>
      <summary>
            	Returns an <see cref="T:System.Xml.XPath.XPathItem"/> representing the result of evaluating the XQuery program,
            	or <see langword="null"/> if the query returns the empty sequence.
            </summary>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <returns>
            	An <see cref="T:System.Xml.XPath.XPathItem"/>, or <see langword="null"/> if the query returns the empty sequence.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.XdmException">
            	An error occurred evaluating the query. 
            </exception>
      <exception cref="T:System.InvalidOperationException">
            	An error is raised if the expression returns more than one item, or if the query is an
                updating expression.
            </exception>
      <remarks>
        <para>The item returned will either be an instance of <see cref="T:System.Xml.XPath.XPathNavigator"/> (if the expression returns a node),
            <see cref="T:XmlPrime.XPathAtomicValue"/> (if the expression returns an atomic value) or <see cref="T:XmlPrime.XPathFunctionItem"/>
            (if the expression returns a function item).</para>
        <para>This method is not suitable for queries which use <c>fn:put</c>.  Call to <c>fn:put</c> will raise
            an exception.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XQuery.EvaluateToItem(XmlPrime.DynamicContextSettings,XmlPrime.IResultDocumentHandler)">
      <summary>
            Returns an <see cref="T:System.Xml.XPath.XPathItem"/> representing the result of evaluating the XQuery program,
            or <see langword="null"/> if the query returns the empty sequence.
            </summary>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocumentHandler">The result document handler.</param>
      <returns>
            An <see cref="T:System.Xml.XPath.XPathItem"/>, or <see langword="null"/> if the query returns the empty sequence.
            </returns>
      <overloads>
            Returns an <see cref="T:System.Xml.XPath.XPathItem"/> representing the result of evaluating the XQuery program,
            or <see langword="null"/> if the query returns the empty sequence.
            </overloads>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.XdmException">
            An error occurred evaluating the query.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            An error is raised if the expression returns more than one item.
            </exception>
      <remarks>
        <para>The item returned will either be an instance of <see cref="T:System.Xml.XPath.XPathNavigator"/> (if the expression returns a node),
            <see cref="T:XmlPrime.XPathAtomicValue"/> (if the expression returns an atomic value) or <see cref="T:XmlPrime.XPathFunctionItem"/>
            (if the expression returns a function item).</para>
        <para>This method is suitable for queries which use <c>fn:put</c>.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XQuery.EvaluateToItem(System.Xml.XPath.XPathItem)">
      <summary>
            	Returns an <see cref="T:System.Xml.XPath.XPathItem"/> representing the result of evaluating the XQuery program,
            	or <see langword="null"/> if the query returns the empty sequence.
            </summary>
      <param name="contextItem">The context item for the query.</param>
      <returns>
            	An <see cref="T:System.Xml.XPath.XPathItem"/>, or <see langword="null"/> if the query returns the empty sequence.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contextItem"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.XdmException">
            	An error occurred evaluating the query.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            	An error is raised if the expression returns more than one item, or if 
                the query is an updating expression.
            </exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <remarks>
        <para>The item returned will either be an instance of <see cref="T:System.Xml.XPath.XPathNavigator"/> (if the expression returns a node),
            <see cref="T:XmlPrime.XPathAtomicValue"/> (if the expression returns an atomic value) or <see cref="T:XmlPrime.XPathFunctionItem"/>
            (if the expression returns a function item).</para>
        <para>This method is not suitable for queries which use <c>fn:put</c>.  Call to <c>fn:put</c> will raise
            an exception.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XQuery.EvaluateToItem(System.Xml.XPath.XPathItem,XmlPrime.IResultDocumentHandler)">
      <summary>
            Returns an <see cref="T:System.Xml.XPath.XPathItem"/> representing the result of evaluating the XQuery program,
            or <see langword="null"/> if the query returns the empty sequence.
            </summary>
      <param name="contextItem">The context item for the query.</param>
      <param name="resultDocumentHandler">The result document handler.</param>
      <returns>
            An <see cref="T:System.Xml.XPath.XPathItem"/>, or <see langword="null"/> if the query returns the empty sequence.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contextItem"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.XdmException">
            An error occurred evaluating the query.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            An error is raised if the expression returns more than one item.
            </exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <remarks>
        <para>The item returned will either be an instance of <see cref="T:System.Xml.XPath.XPathNavigator"/> (if the expression returns a node),
            <see cref="T:XmlPrime.XPathAtomicValue"/> (if the expression returns an atomic value) or <see cref="T:XmlPrime.XPathFunctionItem"/>
            (if the expression returns a function item).</para>
        <para>This method is suitable for queries which use <c>fn:put</c>.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XQuery.EvaluateToItem">
      <summary>
            	Returns an <see cref="T:System.Xml.XPath.XPathItem"/> representing the result of evaluating the XQuery program,
            	or <see langword="null"/> if the query returns the empty sequence.
            </summary>
      <returns>
            	An <see cref="T:System.Xml.XPath.XPathItem"/>, or <see langword="null"/> if the query returns the empty sequence.
            </returns>
      <exception cref="T:XmlPrime.XdmException">
            	An error occurred evaluating the query. 
            </exception>
      <exception cref="T:System.InvalidOperationException">
            	An error is raised if the expression returns more than one item, or if the query
                the query is an updating expression.
            </exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <remarks>
        <para>The item returned will either be an instance of <see cref="T:System.Xml.XPath.XPathNavigator"/> (if the expression returns a node),
            <see cref="T:XmlPrime.XPathAtomicValue"/> (if the expression returns an atomic value) or <see cref="T:XmlPrime.XPathFunctionItem"/>
            (if the expression returns a function item).</para>
        <para>This method is not suitable for queries which use <c>fn:put</c>.  Call to <c>fn:put</c> will raise
            an exception.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XQuery.EvaluateToItem(XmlPrime.IResultDocumentHandler)">
      <summary>
            Returns an <see cref="T:System.Xml.XPath.XPathItem"/> representing the result of evaluating the XQuery program,
            or <see langword="null"/> if the query returns the empty sequence.
            </summary>
      <param name="resultDocumentHandler">The result document handler.</param>
      <returns>
            An <see cref="T:System.Xml.XPath.XPathItem"/>, or <see langword="null"/> if the query returns the empty sequence.
            </returns>
      <exception cref="T:XmlPrime.XdmException">
            An error occurred evaluating the query.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            An error is raised if the expression returns more than one item.
            </exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <remarks>
        <para>The item returned will either be an instance of <see cref="T:System.Xml.XPath.XPathNavigator"/> (if the expression returns a node),
            <see cref="T:XmlPrime.XPathAtomicValue"/> (if the expression returns an atomic value) or <see cref="T:XmlPrime.XPathFunctionItem"/>
            (if the expression returns a function item).</para>
        <para>This method is suitable for queries which use <c>fn:put</c>.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XQuery.EvaluateUpdate(XmlPrime.IResultDocumentHandler)">
      <overloads>
            Evaluates an updating XQuery (XQuery Update Facility) program.
            </overloads>
      <summary>
            Evaluates an updating XQuery program with the specified result document handler.
            </summary>
      <param name="resultDocumentHandler">The result document handler.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resultDocumentHandler"/> is <see langword="null"/></exception>
      <exception cref="T:System.InvalidOperationException">
            The query is not updating (<see cref="P:XmlPrime.XQuery.IsUpdate"/> is <see langword="false"/>).
            </exception>
      <exception cref="T:XmlPrime.XdmException">
            An error occurred evaluating the query.
            </exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <remarks>
        <para>This method is suitable for queries which use <c>fn:put</c>.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XQuery.EvaluateUpdate(System.Xml.XPath.XPathItem,XmlPrime.IResultDocumentHandler)">
      <overloads>
            Evaluates an updating XQuery (XQuery Update Facility) program.
            </overloads>
      <summary>
            Evaluates an updating XQuery program with the specified context item and result document handler.
            </summary>
      <param name="contextItem">The context item.</param>
      <param name="resultDocumentHandler">The result document handler.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contextItem"/> or <paramref name="resultDocumentHandler"/> are <see langword="null"/></exception>
      <exception cref="T:System.InvalidOperationException">
            The query is not updating (<see cref="P:XmlPrime.XQuery.IsUpdate"/> is <see langword="false"/>).
            </exception>
      <exception cref="T:XmlPrime.XdmException">
            An error occurred evaluating the query.
            </exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <remarks>
        <para>This method is suitable for queries which use <c>fn:put</c>.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.XQuery.EvaluateUpdate(XmlPrime.DynamicContextSettings,XmlPrime.IResultDocumentHandler)">
      <summary>
            Evaluates an updating XQuery (XQuery Update Facility) program.
            </summary>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocumentHandler">The result document handler.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/> or <paramref name="resultDocumentHandler"/> are <see langword="null"/>.</exception>
      <exception cref="T:System.InvalidOperationException">The query is not updating (<see cref="P:XmlPrime.XQuery.IsUpdate"/> is <see langword="false"/>.</exception>
      <exception cref="T:XmlPrime.XdmException">
            An error occurred evaluating the query.
            </exception>
      <remarks>This method is suitable for queries which use <c>fn:put</c>.</remarks>
    </member>
    <member name="M:XmlPrime.XQuery.Explain(System.Xml.XmlWriter)">
      <summary>
            	Writes the query execution plan to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="xmlWriter">The XML writer to which the query execution plan is to be written.</param>
    </member>
    <member name="M:XmlPrime.XQuery.Serialize(System.String)">
      <overloads>
            	Serializes the result of the query.
            </overloads>
      <summary>
            	Serializes the result of the query to the specified file.
            </summary>
      <param name="outputFileName">The name of the file to which the result of the query will be written.
            	The <paramref name="outputFileName"/> must be a file system path.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="outputFileName"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.InvalidOperationException">The query is an updating expression.</exception>
      <exception cref="T:XmlPrime.XdmException">
            	A dynamic error was encountered while evaluating the query.
            </exception>
    </member>
    <member name="M:XmlPrime.XQuery.Serialize(System.String,System.Xml.XPath.XPathItem)">
      <summary>
            	Serializes the result of the query to the specified file.
            </summary>
      <param name="outputFileName">The name of the file to which the result of the query will be written.
            	The <paramref name="outputFileName"/> must be a file system path.</param>
      <param name="contextItem">The context item for the query.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="outputFileName"/> or <paramref name="contextItem"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.InvalidOperationException">The query is an updating expression.</exception>
      <exception cref="T:XmlPrime.XdmException">
            	A dynamic error was encountered while evaluating the query.
            </exception>
    </member>
    <member name="M:XmlPrime.XQuery.Serialize(System.String,XmlPrime.DynamicContextSettings)">
      <summary>
            Serializes the result of the query to the specified file.
            </summary>
      <param name="outputFileName">The name of the file to which the result of the query will be written.</param>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="outputFileName"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.InvalidOperationException">The query is an updating expression.</exception>
      <exception cref="T:XmlPrime.XdmException">
            A dynamic error was encountered while evaluating the query.
            </exception>
    </member>
    <member name="M:XmlPrime.XQuery.Serialize(System.IO.Stream)">
      <summary>
            	Serializes the result of the query to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="stream">The <see cref="T:System.IO.Stream"/> to which the result of the query will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.InvalidOperationException">The query is an updating expression.</exception>
      <exception cref="T:XmlPrime.XdmException">
            	A dynamic error was encountered while evaluating the query.
            </exception>
    </member>
    <member name="M:XmlPrime.XQuery.Serialize(System.IO.Stream,System.Xml.XPath.XPathItem)">
      <summary>
            Serializes the result of the query to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="stream">The <see cref="T:System.IO.Stream"/> to which the result of the query will be written.</param>
      <param name="contextItem">The context item for the query.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream"/> or <paramref name="contextItem"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.InvalidOperationException">The query is an updating expression.</exception>
      <exception cref="T:XmlPrime.XdmException">
            A dynamic error was encountered while evaluating the query.
            </exception>
    </member>
    <member name="M:XmlPrime.XQuery.Serialize(System.IO.Stream,XmlPrime.DynamicContextSettings)">
      <summary>
            Serializes the result of the query to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="stream">The <see cref="T:System.IO.Stream"/> to which the result of the query will be written.</param>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.InvalidOperationException">The query is an updating expression.</exception>
      <exception cref="T:XmlPrime.XdmException">
            A dynamic error was encountered while evaluating the query.
            </exception>
    </member>
    <member name="M:XmlPrime.XQuery.Serialize(System.IO.TextWriter)">
      <summary>
            	Serializes the result of the query to the specified <see cref="T:System.IO.TextWriter"/>.
            </summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter"/> to which the result of the query will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.InvalidOperationException">The query is an updating expression.</exception>
      <exception cref="T:XmlPrime.XdmException">
            	A dynamic error was encountered while evaluating the query.
            </exception>
    </member>
    <member name="M:XmlPrime.XQuery.Serialize(System.IO.TextWriter,System.Xml.XPath.XPathItem)">
      <summary>
            Serializes the result of the query to the specified <see cref="T:System.IO.TextWriter"/>.
            </summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter"/> to which the result of the query will be written.</param>
      <param name="contextItem">The context item for the query.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer"/> or <paramref name="contextItem"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.InvalidOperationException">The query is an updating expression.</exception>
      <exception cref="T:XmlPrime.XdmException">
            A dynamic error was encountered while evaluating the query.
            </exception>
    </member>
    <member name="M:XmlPrime.XQuery.Serialize(System.IO.TextWriter,XmlPrime.DynamicContextSettings)">
      <summary>
            Serializes the result of the query to the specified <see cref="T:System.IO.TextWriter"/>.
            </summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter"/> to which the result of the query will be written.</param>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.InvalidOperationException">The query is an updating expression.</exception>
      <exception cref="T:XmlPrime.XdmException">
            A dynamic error was encountered while evaluating the query.
            </exception>
    </member>
    <member name="M:XmlPrime.XQuery.Serialize(System.Xml.XmlWriter)">
      <summary>
            	Serializes the result of the query to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which the result of the query will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.InvalidOperationException">The query is an updating expression.</exception>
      <exception cref="T:XmlPrime.XdmException">
            	A dynamic error was encountered while evaluating the query.
            </exception>
    </member>
    <member name="M:XmlPrime.XQuery.Serialize(System.Xml.XmlWriter,System.Xml.XPath.XPathItem)">
      <summary>
            	Serializes the result of the query to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which the result of the query will be written.</param>
      <param name="contextItem">The context item for the query.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer"/> or <paramref name="contextItem"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.InvalidOperationException">The query is an updating expression.</exception>
      <exception cref="T:XmlPrime.XdmException">
            	A dynamic error was encountered while evaluating the query.
            </exception>
    </member>
    <member name="M:XmlPrime.XQuery.Serialize(System.Xml.XmlWriter,XmlPrime.DynamicContextSettings)">
      <summary>
            Serializes the result of the query to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which the result of the query will be written.</param>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.InvalidOperationException">The query is an updating expression.</exception>
      <exception cref="T:XmlPrime.XdmException">
            A dynamic error was encountered while evaluating the query.
            </exception>
    </member>
    <member name="M:XmlPrime.XQuery.Serialize(XmlPrime.IResultDocumentHandler)">
      <summary>
            Serializes the result of the query using an object which implements the
            <see cref="T:XmlPrime.IResultDocumentHandler"/> interface.
            </summary>
      <param name="resultDocumentHandler">The result document handler.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resultDocumentHandler"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">
            A dynamic error was encountered while evaluating the query.
            </exception>
      <remarks>
            This method is suitable for both updating and non-updating queries.
            </remarks>
    </member>
    <member name="M:XmlPrime.XQuery.Serialize(XmlPrime.IResultDocumentHandler,System.Xml.XPath.XPathItem)">
      <summary>
            Serializes the result of the query using an object which implements the
            <see cref="T:XmlPrime.IResultDocumentHandler"/> interface.
            </summary>
      <param name="resultDocumentHandler">The result document handler.</param>
      <param name="contextItem">The context item for the query.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resultDocumentHandler"/> or <paramref name="contextItem"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">
            A dynamic error was encountered while evaluating the query.
            </exception>
      <remarks>
            This method is suitable for both updating and non-updating queries.
            </remarks>
    </member>
    <member name="M:XmlPrime.XQuery.Serialize(XmlPrime.IResultDocumentHandler,XmlPrime.DynamicContextSettings)">
      <summary>
            Serializes the result of the query using an object which implements the
            <see cref="T:XmlPrime.IResultDocumentHandler"/> interface.
            </summary>
      <param name="resultDocumentHandler">The result document handler.</param>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resultDocumentHandler"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">
            A dynamic error was encountered while evaluating the query.
            </exception>
      <remarks>
            This method is suitable for both updating and non-updating queries.
            </remarks>
    </member>
    <member name="P:XmlPrime.XQuery.IsUpdate">
      <summary>
            	Gets a value indicating whether this query is an update.
            </summary>
      <value>
        <see langword="true"/> if this instance is an update; otherwise, <see langword="false"/>.</value>
    </member>
    <member name="P:XmlPrime.XQuery.SerializationSettings">
      <summary>
            	Gets the settings requested for serialization.
            </summary>
      <value>The serialization settings.</value>
      <remarks>
            	These settings are the serialization settings as defined in the <see cref="T:XmlPrime.StaticContextSettings"/>,
            	augmented by any serialization option declarations in the query.
            </remarks>
    </member>
    <member name="P:XmlPrime.XQuery.StaticType">
      <summary>
            	Gets an <see cref="T:XmlPrime.XdmType"/> which represents the result type of the query as determined
            	by static type analysis.
            </summary>
      <value>An <see cref="T:XmlPrime.XdmType"/> which represents the result type of the query as determined by static type analysis.</value>
    </member>
    <member name="T:XmlPrime.LibrarySet">
      <summary>
            	A collection of modules to be made available to an XQuery program or XPath expression.
            </summary>
      <remarks>
            	The <see cref="P:XmlPrime.StaticContextSettings.Libraries"/> property exposes the libraries that are available to the
            	query or expression.
            </remarks>
    </member>
    <member name="M:XmlPrime.LibrarySet.#ctor">
      <overloads>Initializes a new instance of the <see cref="T:XmlPrime.LibrarySet"/> class.</overloads>
      <summary>
            	Initializes a new instance of the <see cref="T:XmlPrime.LibrarySet"/> class.
            </summary>
    </member>
    <member name="M:XmlPrime.LibrarySet.Add(XmlPrime.XQuerySettings,System.String,System.String[])">
      <summary>
            	Compiles the specified XQuery library module with the specified location hints and adds it to this <see cref="T:XmlPrime.LibrarySet"/>.
            	Default static context settings are used.
            </summary>
      <param name="settings">The initial static context settings.</param>
      <param name="targetNamespace">The target namespace.</param>
      <param name="locationHints">The location hints.</param>
      <returns/>
      <remarks>
            	Any errors or warnings encountered during compilation raise the
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method has no effect.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/>, <paramref name="targetNamespace"/> or <paramref name="locationHints"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the module.</exception>
    </member>
    <member name="M:XmlPrime.LibrarySet.Add(XmlPrime.XdmModule)">
      <summary>
            	Adds a module to the library collection.
            </summary>
      <param name="module">The module to add.</param>
      <returns>
        <see langword="true"/> if the module is added to the <see cref="T:XmlPrime.LibrarySet"/>; 
            	<see langword="false"/> if the module was already present.
            </returns>
      <remarks>
            	If this module imports any other libraries then these libraries are also added to the library set.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="module"/> is <see langword="null"/>.</exception>
      <exception cref="T:XmlPrime.XdmException">
            	An <c>XQST0034</c> error is raised if there is a function in <paramref name="module"/> with the same name and
            	arity as a function already imported in this <see cref="T:XmlPrime.LibrarySet"/>.
            </exception>
    </member>
    <member name="M:XmlPrime.LibrarySet.Clone">
      <summary>
            	Creates a new <see cref="T:XmlPrime.LibrarySet"/> that is a copy of the current library collection.
            </summary>
      <returns>
            	Creates a new <see cref="T:XmlPrime.LibrarySet"/> that is a copy of the current library collection.
            </returns>
    </member>
    <member name="M:XmlPrime.LibrarySet.Compile">
      <summary>
            Compiles all uncompiled libraries in the collection.
            </summary>
    </member>
    <member name="M:XmlPrime.LibrarySet.System#ICloneable#Clone">
      <summary>
            	Creates a new object that is a copy of the current instance.
            </summary>
      <returns>
            	A new object that is a copy of this instance.
            </returns>
    </member>
    <member name="T:XmlPrime.XQueryOptionalFeatures">
      <summary>
        <para>Specifies optional XQuery features which may be switched off.</para>
        <para>This enumeration has a <see cref="T:System.FlagsAttribute"/> attribute that allows a bitwise combination of its member
            values.</para>
      </summary>
      <remarks>
        <para>
            Use the <see cref="P:XmlPrime.XQuerySettings.EnabledFeatures"/> property to enable or disable optional XQuery features. 
            Disabling a  feature causes an error to be raised during compilation of a query if the feature is used in
            that query.</para>
        <para>Note that the Static Typing Feature may be enabled by setting the 
            <see cref="P:XmlPrime.XPathSettings.TypeCheckingMode"/> or <see cref="P:XmlPrime.XQuerySettings.TypeCheckingMode"/> properties to <see cref="F:XmlPrime.TypeCheckingMode.Static"/> or <see cref="F:XmlPrime.TypeCheckingMode.Pedantic"/>.
            </para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xquery/#id-conform-optional-features">[XQuery 1.0: An XML Query Language] 5.2 Optional Features</seealso>
    </member>
    <member name="F:XmlPrime.XQueryOptionalFeatures.None">
      <summary>
            Minimal conformance. No optional features are enabled.
            </summary>
    </member>
    <member name="F:XmlPrime.XQueryOptionalFeatures.TypedDataFeature">
      <summary>
            The Typed Data Feature permits a data model instance to contain
            element nodes types other than xs:untyped and attributes node types other than xs:untypedAtomic.
            </summary>
    </member>
    <member name="F:XmlPrime.XQueryOptionalFeatures.SchemaImportFeature">
      <summary>
            The Schema Import Feature permits the query Prolog to contain a schema import.
            </summary>
    </member>
    <member name="F:XmlPrime.XQueryOptionalFeatures.SchemaValidationFeature">
      <summary>
            The Schema Validation Feature permits a query to contain a validate expression.
            </summary>
    </member>
    <member name="F:XmlPrime.XQueryOptionalFeatures.SchemaAwareFeature">
      <summary>
            The Schema Aware Feature permits the query Prolog to contain a schema import, permits a query to contain a validate expression (see 3.18 Validate Expressions), and permits an XDM to contain types other than xs:untyped and xs:untypedAtomic.]
            </summary>
    </member>
    <member name="F:XmlPrime.XQueryOptionalFeatures.FullAxisFeature">
      <summary>
            The Full Axis Feature permits a query to contain the following axes which are designated as optional axes: ancestor, ancestor-or-self, following, following-sibling, preceding, and preceding-sibling.
            </summary>
    </member>
    <member name="F:XmlPrime.XQueryOptionalFeatures.ModuleFeature">
      <summary>
            The Module Feature allows a query Prolog to contain a module import and allows library modules to be created.
            </summary>
    </member>
    <member name="F:XmlPrime.XQueryOptionalFeatures.SerializationFeature">
      <summary>
            The Serialization Feature provides means for serializing the result of a query.
            </summary>
    </member>
    <member name="F:XmlPrime.XQueryOptionalFeatures.HigherOrderFunctionFeature">
      <summary>
            The Higher Order Function Feature allows an expression to evaluate to a function, and allows dynamic function calls.
            </summary>
    </member>
    <member name="F:XmlPrime.XQueryOptionalFeatures.XQuery10OptionalFeatures">
      <summary>
            All XQuery 1.0 optional features are enabled.
            </summary>
    </member>
    <member name="F:XmlPrime.XQueryOptionalFeatures.XQuery30OptionalFeatures">
      <summary>
            All XQuery 3,0 optional features are enabled.
            </summary>
    </member>
    <member name="F:XmlPrime.XQueryOptionalFeatures.UpdateFeature">
      <summary>
            The Update Feature permits a query to support the XQuery Update Facility.
            </summary>
    </member>
    <member name="F:XmlPrime.XQueryOptionalFeatures.LoadXQueryModuleFunction">
      <summary>
            Enables use of the XPath and XQuery Functions and Operators 3.1 <c>fn:load-xquery-module</c> function.
            </summary>
    </member>
    <member name="F:XmlPrime.XQueryOptionalFeatures.TransformFunction">
      <summary>
            Enables use of the XPath and XQuery Functions and Operators 3.1 <c>fn:transform</c> function.
            </summary>
    </member>
    <member name="F:XmlPrime.XQueryOptionalFeatures.XQuery31OptionalFeatures">
      <summary>
            All XQuery 3,1 optional features are enabled.
            </summary>
    </member>
    <member name="F:XmlPrime.XQueryOptionalFeatures.AllFeatures">
      <summary>
            All optional features are enabled.
            </summary>
    </member>
    <member name="T:XmlPrime.Xslt">
      <summary>
            	Transforms XML data using the XSLT language.
            </summary>
    </member>
    <member name="M:XmlPrime.Xslt.Compile(System.String,System.Xml.XmlNameTable)">
      <overloads>
            	Compiles the specified XSLT stylesheet and returns an <see cref="T:XmlPrime.Xslt"/> object that represents the transformation.
            </overloads>
      <summary>
            	Compiles the specified XSLT stylesheet and returns an <see cref="T:XmlPrime.Xslt"/> object that represents the transformation.
            	Default static context settings are used.
            </summary>
      <param name="stylesheetUri">The URI of the XSLT stylesheet.</param>
      <param name="nameTable">The name table for documents used with this transformation.</param>
      <returns>
            	An <see cref="T:XmlPrime.Xslt"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stylesheetUri"/> or <paramref name="nameTable"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="stylesheetUri"/> is not a valid URI.</exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the transformation.</exception>
    </member>
    <member name="M:XmlPrime.Xslt.Compile(System.Uri,System.Xml.XmlNameTable)">
      <summary>
            	Compiles the specified XSLT stylesheet and returns an <see cref="T:XmlPrime.Xslt"/> object that represents the transformation.
            	Default static context settings are used.
            </summary>
      <param name="stylesheetUri">The URI of the XSLT stylesheet.</param>
      <param name="nameTable">The name table for documents used with this transformation.</param>
      <returns>
            	An <see cref="T:XmlPrime.Xslt"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stylesheetUri"/> or <paramref name="nameTable"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the transformation.</exception>
    </member>
    <member name="M:XmlPrime.Xslt.Compile(System.String,XmlPrime.XsltSettings)">
      <summary>
            	Compiles the specified XSLT stylesheet and returns an <see cref="T:XmlPrime.Xslt"/> object that represents the transformation.
            	The specified static context settings are used.
            </summary>
      <param name="stylesheetUri">The URI of the XSLT stylesheet.</param>
      <param name="settings">The initial static context settings.</param>
      <returns>
            	An <see cref="T:XmlPrime.Xslt"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stylesheetUri"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the transformation.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="stylesheetUri"/> is not a valid URI.</exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
    </member>
    <member name="M:XmlPrime.Xslt.Compile(System.Uri,XmlPrime.XsltSettings)">
      <summary>
            	Compiles the specified XSLT stylesheet and returns an <see cref="T:XmlPrime.Xslt"/> object that represents the transformation.
            	The specified static context settings are used.
            </summary>
      <param name="stylesheetUri">The URI of the XSLT stylesheet.</param>
      <param name="settings">The initial static context settings.</param>
      <returns>
            	An <see cref="T:XmlPrime.Xslt"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stylesheetUri"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the transformation.</exception>
    </member>
    <member name="M:XmlPrime.Xslt.Compile(System.IO.Stream)">
      <summary>
            	Loads and compiles the specified XSLT stylesheet and returns an <see cref="T:XmlPrime.Xslt"/> object that represents 
            	the XSLT stylesheet.  Default static context settings are used.
            </summary>
      <param name="stylesheet">The <see cref="T:System.IO.Stream"/> from which to read the XSLT stylesheet.</param>
      <returns>
            	An <see cref="T:XmlPrime.Xslt"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
            	Thrown if <paramref name="stylesheet"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the transformation.</exception>
    </member>
    <member name="M:XmlPrime.Xslt.Compile(System.IO.Stream,XmlPrime.XsltSettings)">
      <summary>
            	Loads and compiles the specified XSLT stylesheet and returns an <see cref="T:XmlPrime.Xslt"/> object that represents 
            	the XSLT stylesheet.  The specified static context settings are used.
            </summary>
      <param name="stylesheet">The <see cref="T:System.IO.Stream"/> from which to read the XSLT program.</param>
      <param name="settings">The initial static context settings.</param>
      <returns>
            	An <see cref="T:XmlPrime.Xslt"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
            	Thrown if <paramref name="stylesheet"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the transformation.</exception>
    </member>
    <member name="M:XmlPrime.Xslt.Compile(System.IO.TextReader)">
      <summary>
            	Loads and compiles the specified XSLT stylesheet and returns an <see cref="T:XmlPrime.Xslt"/> object that represents 
            	the XSLT stylesheet.  Default static context settings are used.
            </summary>
      <param name="stylesheet">The <see cref="T:System.IO.TextReader"/> from which to read the XSLT stylesheet.</param>
      <returns>
            	An <see cref="T:XmlPrime.Xslt"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
            	Thrown if <paramref name="stylesheet"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the transformation.</exception>
    </member>
    <member name="M:XmlPrime.Xslt.Compile(System.IO.TextReader,XmlPrime.XsltSettings)">
      <summary>
            	Loads and compiles the specified XSLT stylesheet and returns an <see cref="T:XmlPrime.Xslt"/> object that represents 
            	the XSLT stylesheet.  The specified static context settings are used.
            </summary>
      <param name="stylesheet">The <see cref="T:System.IO.TextReader"/> from which to read the XSLT program.</param>
      <param name="settings">The initial static context settings.</param>
      <returns>
            	An <see cref="T:XmlPrime.Xslt"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
            	Thrown if <paramref name="stylesheet"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the transformation.</exception>
    </member>
    <member name="M:XmlPrime.Xslt.Compile(System.Xml.XmlReader)">
      <summary>
            	Loads and compiles the specified XSLT stylesheet and returns an <see cref="T:XmlPrime.Xslt"/> object that represents 
            	the XSLT stylesheet.  Default static context settings are used.
            </summary>
      <param name="stylesheet">The <see cref="T:System.Xml.XmlReader"/> from which to read the XSLT stylesheet.</param>
      <returns>
            	An <see cref="T:XmlPrime.Xslt"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
            	Thrown if <paramref name="stylesheet"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the transformation.</exception>
    </member>
    <member name="M:XmlPrime.Xslt.Compile(System.Xml.XmlReader,XmlPrime.XsltSettings)">
      <summary>
            	Loads and compiles the specified XSLT stylesheet and returns an <see cref="T:XmlPrime.Xslt"/> object that represents 
            	the XSLT stylesheet.  The specified static context settings are used.
            </summary>
      <param name="stylesheet">The <see cref="T:System.Xml.XmlReader"/> from which to read the XSLT program.</param>
      <param name="settings">The initial static context settings.</param>
      <returns>
            	An <see cref="T:XmlPrime.Xslt"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
            	Thrown if <paramref name="stylesheet"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stylesheet"/> uses a different <see cref="T:System.Xml.XmlNameTable"/> to that specified in <paramref name="settings"/>.
            </exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the transformation.</exception>
    </member>
    <member name="M:XmlPrime.Xslt.Compile(System.Xml.XPath.IXPathNavigable)">
      <summary>
            	Compiles the specified XSLT stylesheet and returns an <see cref="T:XmlPrime.Xslt"/> object that represents 
            	the XSLT stylesheet.  The specified static context settings are used.
            </summary>
      <param name="stylesheet">An XSLT stylesheet.</param>
      <returns>
            	An <see cref="T:XmlPrime.Xslt"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stylesheet"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the transformation.</exception>
    </member>
    <member name="M:XmlPrime.Xslt.Compile(System.Xml.XPath.IXPathNavigable,XmlPrime.XsltSettings)">
      <summary>
            	Compiles the specified XSLT stylesheet and returns an <see cref="T:XmlPrime.Xslt"/> object that represents 
            	the XSLT stylesheet.  The specified static context settings are used.
            </summary>
      <param name="stylesheet">An XSLT stylesheet.</param>
      <param name="settings">The initial static context settings.</param>
      <returns>
            	An <see cref="T:XmlPrime.Xslt"/> object, or <see langword="null"/> if an unrecoverable error was raised and handled
            	by a subscriber to <see cref="E:XmlPrime.StaticContextSettings.CompilationError"/></returns>
      <remarks>
            	Any errors or warnings encountered during compilation raise the 
            	<see cref="E:XmlPrime.StaticContextSettings.CompilationError"/> event.  If nothing subscribes to this event then an 
            	<see cref="T:XmlPrime.XdmException"/> is thrown if an unrecoverable error is encountered.  If this event is subscribed
            	to then the exception is not thrown, and this method returns <see langword="null"/> instead.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stylesheet"/> or <paramref name="settings"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stylesheet"/> uses a different <see cref="T:System.Xml.XmlNameTable"/> to that specified in <paramref name="settings"/>.
            </exception>
      <exception cref="T:XmlPrime.LicenceException">This version of XmlPrime has expired.</exception>
      <exception cref="T:XmlPrime.XdmException">An error occurred compiling the transformation.</exception>
    </member>
    <member name="M:XmlPrime.Xslt.ToString">
      <summary>
            	Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
      <returns>
            	A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.Xml.XPath.IXPathNavigable,System.IO.Stream)">
      <overloads>
            	Applies template rules.
            </overloads>
      <summary>
            	Applies default mode template rules to the specified context node and outputs the primary result document to a
            	<see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="contextNode">The initial context node for the stylesheet.</param>
      <param name="resultDocument">The <see cref="T:System.IO.Stream"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contextNode"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The initial mode is the default mode (<c>#default</c>).</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT) Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.Xml.XPath.IXPathNavigable,System.IO.TextWriter)">
      <summary>
            	Applies default mode template rules to the specified context node and outputs the primary result document to a
            	<see cref="T:System.IO.TextWriter"/>.
            </summary>
      <param name="contextNode">The initial context node for the stylesheet.</param>
      <param name="resultDocument">The <see cref="T:System.IO.TextWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contextNode"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The initial mode is the default mode (<c>#default</c>).</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT) Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)">
      <summary>
            	Applies default mode template rules to the specified context node and outputs the primary result document to an
            	<see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="contextNode">The initial context node for the stylesheet.</param>
      <param name="resultDocument">The <see cref="T:System.Xml.XmlWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contextNode"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The initial mode is the default mode (<c>#default</c>).</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT) Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.Xml.XPath.IXPathNavigable,XmlPrime.IResultDocumentHandler)">
      <summary>
            	Applies default mode template rules to the specified context node and outputs result documents using an
            	object implementing the <see cref="T:XmlPrime.IResultDocumentHandler"/> interface.
            </summary>
      <param name="contextNode">The initial context node for the stylesheet.</param>
      <param name="resultDocumentHandler">The result document handler.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contextNode"/> or <paramref name="resultDocumentHandler"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The initial mode is the default mode (<c>#default</c>).</para>
        <para>This method is suitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT) Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.Xml.XmlReader,System.IO.Stream)">
      <overloads>
            	Applies template rules.
            </overloads>
      <summary>
            	Applies default mode template rules to the specified input document and outputs the primary result document to a
            	<see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="input">The <see cref="T:System.Xml.XmlReader"/> containing the input document.</param>
      <param name="resultDocument">The <see cref="T:System.IO.Stream"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The initial mode is the default mode (<c>#default</c>).</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT) Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.Xml.XmlReader,System.IO.TextWriter)">
      <summary>
            	Applies default mode template rules to the specified input document and outputs the primary result document to a
            	<see cref="T:System.IO.TextWriter"/>.
            </summary>
      <param name="input">The <see cref="T:System.Xml.XmlReader"/> containing the input document.</param>
      <param name="resultDocument">The <see cref="T:System.IO.TextWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The initial mode is the default mode (<c>#default</c>).</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT) Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.Xml.XmlReader,System.Xml.XmlWriter)">
      <summary>
            	Applies default mode template rules to the specified input document and outputs the primary result document to an
            	<see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="input">The <see cref="T:System.Xml.XmlReader"/> containing the input document.</param>
      <param name="resultDocument">The <see cref="T:System.Xml.XmlWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The initial mode is the default mode (<c>#default</c>).</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT) Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.Xml.XmlReader,XmlPrime.IResultDocumentHandler)">
      <summary>
            	Applies default mode template rules to the specified input document and outputs all result documents using an
            	object implementing the <see cref="T:XmlPrime.IResultDocumentHandler"/> interface.
            </summary>
      <param name="input">The <see cref="T:System.Xml.XmlReader"/> containing the input document.</param>
      <param name="resultDocumentHandler">The result document handler.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input"/> or <paramref name="resultDocumentHandler"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The initial mode is the default mode (<c>#default</c>).</para>
        <para>This method is suitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT) Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(XmlPrime.DynamicContextSettings,System.IO.Stream)">
      <summary>
            	Applies default mode template rules using the specified initial dynamic context settings and outputs the primary
                result document to a <see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocument">The <see cref="T:System.IO.Stream"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The initial mode is the default mode (<c>#default</c>).</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT) Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(XmlPrime.DynamicContextSettings,System.IO.TextWriter)">
      <summary>
            	Applies default mode template rules using the specified initial dynamic context settings and outputs the primary result 
                document to a <see cref="T:System.IO.TextWriter"/>.
            </summary>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocument">The <see cref="T:System.IO.TextWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The initial mode is the default mode (<c>#default</c>).</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT) Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(XmlPrime.DynamicContextSettings,System.Xml.XmlWriter)">
      <summary>
            	Applies default mode template rules using the specified initial dynamic context settings and outputs the primary result 
                document to an <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocument">The <see cref="T:System.Xml.XmlWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The initial mode is the default mode (<c>#default</c>).</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT) Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(XmlPrime.DynamicContextSettings,XmlPrime.IResultDocumentHandler)">
      <summary>
            Applies default mode template rules using the specified initial dynamic context settings and outputs all result documents
            using an object implementing the <see cref="T:XmlPrime.IResultDocumentHandler"/> interface.
            </summary>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocumentHandler">The result document handler.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/>  or <paramref name="resultDocumentHandler"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The initial mode is the default mode (<c>#default</c>).</para>
        <para>This method is suitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT) Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.String,System.String,System.Xml.XPath.IXPathNavigable,System.IO.Stream)">
      <summary>
            	Applies template rules with the specified initial mode to the specified context node and outputs the primary result document
             to a <see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="initialModeLocalName">The local name of the initial mode.</param>
      <param name="initialModeNamespace">The namespace URI of the initial mode.</param>
      <param name="contextNode">The initial context node for the stylesheet.</param>
      <param name="resultDocument">The <see cref="T:System.IO.Stream"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialModeLocalName"/>, <paramref name="initialModeNamespace"/>, 
            	<paramref name="contextNode"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The default mode may be specified by passing <see cref="F:System.String.Empty"/> for 
            		<paramref name="initialModeLocalName"/> and <paramref name="initialModeNamespace"/>.</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT) 
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.String,System.String,System.Xml.XPath.IXPathNavigable,System.IO.TextWriter)">
      <summary>
            	Applies template rules with the specified initial mode to the specified context node and outputs the primary result document
             to a <see cref="T:System.IO.TextWriter"/>.
            </summary>
      <param name="initialModeLocalName">The local name of the initial mode.</param>
      <param name="initialModeNamespace">The namespace URI of the initial mode.</param>
      <param name="contextNode">The initial context node for the stylesheet.</param>
      <param name="resultDocument">The <see cref="T:System.IO.TextWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialModeLocalName"/>, <paramref name="initialModeNamespace"/>, 
            	<paramref name="contextNode"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The default mode may be specified by passing <see cref="F:System.String.Empty"/> for 
            		<paramref name="initialModeLocalName"/> and <paramref name="initialModeNamespace"/>.</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT) 
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.String,System.String,System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)">
      <summary>
            	Applies template rules with the specified initial mode to the specified context node and outputs the primary result document
             to an <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="initialModeLocalName">The local name of the initial mode.</param>
      <param name="initialModeNamespace">The namespace URI of the initial mode.</param>
      <param name="contextNode">The initial context node for the stylesheet.</param>
      <param name="resultDocument">The <see cref="T:System.Xml.XmlWriter"/> to which you want to output.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialModeLocalName"/>, <paramref name="initialModeNamespace"/>, 
            	<paramref name="contextNode"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The default mode may be specified by passing <see cref="F:System.String.Empty"/> for 
            		<paramref name="initialModeLocalName"/> and <paramref name="initialModeNamespace"/>.</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT) 
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.String,System.String,System.Xml.XPath.IXPathNavigable,XmlPrime.IResultDocumentHandler)">
      <summary>
            	Applies template rules with the specified initial mode to the specified context node and outputs all result documents using an
            	object implementing the <see cref="T:XmlPrime.IResultDocumentHandler"/> interface.
            </summary>
      <param name="initialModeLocalName">The local name of the initial mode.</param>
      <param name="initialModeNamespace">The namespace URI of the initial mode.</param>
      <param name="contextNode">The initial context node for the stylesheet.</param>
      <param name="resultDocumentHandler">The result document handler.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialModeLocalName"/>, <paramref name="initialModeNamespace"/>, 
            	<paramref name="contextNode"/> or <paramref name="resultDocumentHandler"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The default mode may be specified by passing <see cref="F:System.String.Empty"/> for 
            		<paramref name="initialModeLocalName"/> and <paramref name="initialModeNamespace"/>.</para>
        <para>This method is suitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT) 
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.String,System.String,XmlPrime.DynamicContextSettings,System.IO.Stream)">
      <summary>
            	Applies template rules with the specified initial mode using the specified initial dynamic context settings and outputs
             the primary result document  to a <see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="initialModeLocalName">The local name of the initial mode.</param>
      <param name="initialModeNamespace">The namespace URI of the initial mode.</param>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocument">The <see cref="T:System.IO.Stream"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialModeLocalName"/>, <paramref name="initialModeNamespace"/>, 
            	<paramref name="settings"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The default mode may be specified by passing <see cref="F:System.String.Empty"/> for 
            		<paramref name="initialModeLocalName"/> and <paramref name="initialModeNamespace"/>.</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT) 
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.String,System.String,XmlPrime.DynamicContextSettings,System.IO.TextWriter)">
      <summary>
            Applies template rules with the specified initial mode using the specified initial dynamic context settings and outputs
            the primary result document to a <see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="initialModeLocalName">The local name of the initial mode.</param>
      <param name="initialModeNamespace">The namespace URI of the initial mode.</param>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocument">The <see cref="T:System.IO.TextWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialModeLocalName"/>, <paramref name="initialModeNamespace"/>,
            <paramref name="settings"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The default mode may be specified by passing <see cref="F:System.String.Empty"/> for
            <paramref name="initialModeLocalName"/> and <paramref name="initialModeNamespace"/>.</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.String,System.String,XmlPrime.DynamicContextSettings,System.Xml.XmlWriter)">
      <summary>
            Applies template rules with the specified initial mode using the specified initial dynamic context settings
            and outputs the primary result document to an <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="initialModeLocalName">The local name of the initial mode.</param>
      <param name="initialModeNamespace">The namespace URI of the initial mode.</param>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocument">The <see cref="T:System.Xml.XmlWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialModeLocalName"/>, <paramref name="initialModeNamespace"/>,
            <paramref name="settings"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The default mode may be specified by passing <see cref="F:System.String.Empty"/> for
            <paramref name="initialModeLocalName"/> and <paramref name="initialModeNamespace"/>.</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.String,System.String,XmlPrime.DynamicContextSettings,XmlPrime.IResultDocumentHandler)">
      <summary>
            Applies template rules with the specified initial mode using the specified initial dynamic context settings and outputs
            all result documents using an object implementing the <see cref="T:XmlPrime.IResultDocumentHandler"/> interface.
            </summary>
      <param name="initialModeLocalName">The local name of the initial mode.</param>
      <param name="initialModeNamespace">The namespace URI of the initial mode.</param>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocumentHandler">The result document handler.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialModeLocalName"/>, <paramref name="initialModeNamespace"/>,
            <paramref name="settings"/> or <paramref name="resultDocumentHandler"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The default mode may be specified by passing <see cref="F:System.String.Empty"/> for
            <paramref name="initialModeLocalName"/> and <paramref name="initialModeNamespace"/>.</para>
        <para>This method is suitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.Xml.XmlQualifiedName,System.Xml.XmlReader,System.IO.Stream)">
      <summary>
            Applies template rules with the specified initial mode to the specified input document and outputs the primary result
            document to a <see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="initialMode">The initial mode.</param>
      <param name="input">The <see cref="T:System.Xml.XmlReader"/> containing the input document.</param>
      <param name="resultDocument">The <see cref="T:System.IO.Stream"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialMode"/>, <paramref name="input"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The default mode may be specified by passing <see cref="F:System.Xml.XmlQualifiedName.Empty"/> for
            		<paramref name="initialMode"/>.</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.Xml.XmlQualifiedName,System.Xml.XmlReader,System.IO.TextWriter)">
      <summary>
            Applies template rules with the specified initial mode to the specified input document and outputs the primary result 
            document to a <see cref="T:System.IO.TextWriter"/>.
            </summary>
      <param name="initialMode">The initial mode.</param>
      <param name="input">The <see cref="T:System.Xml.XmlReader"/> containing the input document.</param>
      <param name="resultDocument">The <see cref="T:System.IO.TextWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialMode"/>, <paramref name="input"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The default mode may be specified by passing <see cref="F:System.Xml.XmlQualifiedName.Empty"/> for
            		<paramref name="initialMode"/>.</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.Xml.XmlQualifiedName,System.Xml.XmlReader,System.Xml.XmlWriter)">
      <summary>
            Applies template rules with the specified initial mode to the specified input document and outputs the  primary result 
            document to an <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="initialMode">The initial mode.</param>
      <param name="input">The <see cref="T:System.Xml.XmlReader"/> containing the input document.</param>
      <param name="resultDocument">The <see cref="T:System.Xml.XmlWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialMode"/>, <paramref name="input"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The default mode may be specified by passing <see cref="F:System.Xml.XmlQualifiedName.Empty"/> for
            		<paramref name="initialMode"/>.</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.Xml.XmlQualifiedName,System.Xml.XmlReader,XmlPrime.IResultDocumentHandler)">
      <summary>
            Applies template rules with the specified initial mode to the specified input document and outputs the all result documents
            using an object implementing the <see cref="T:XmlPrime.IResultDocumentHandler"/> interface.
            </summary>
      <param name="initialMode">The initial mode.</param>
      <param name="input">The <see cref="T:System.Xml.XmlReader"/> containing the input document.</param>
      <param name="resultDocumentHandler">The result document handler.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialMode"/>, <paramref name="input"/> or <paramref name="resultDocumentHandler"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The default mode may be specified by passing <see cref="F:System.Xml.XmlQualifiedName.Empty"/> for
            		<paramref name="initialMode"/>.</para>
        <para>This method is suitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.Xml.XmlQualifiedName,System.Xml.XPath.IXPathNavigable,System.IO.Stream)">
      <summary>
            Applies template rules with the specified initial mode to the specified context node and outputs the primary result document 
            to a <see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="initialMode">The initial mode.</param>
      <param name="contextNode">The initial context node for the stylesheet.</param>
      <param name="resultDocument">The <see cref="T:System.IO.Stream"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialMode"/>, <paramref name="contextNode"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The default mode may be specified by passing <see cref="F:System.Xml.XmlQualifiedName.Empty"/> for
            		<paramref name="initialMode"/>.</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.Xml.XmlQualifiedName,System.Xml.XPath.IXPathNavigable,System.IO.TextWriter)">
      <summary>
            Applies template rules with the specified initial mode to the specified context node and outputs the primary result document 
            to a <see cref="T:System.IO.TextWriter"/>.
            </summary>
      <param name="initialMode">The initial mode.</param>
      <param name="contextNode">The initial context node for the stylesheet.</param>
      <param name="resultDocument">The <see cref="T:System.IO.TextWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialMode"/>, <paramref name="contextNode"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The default mode may be specified by passing <see cref="F:System.Xml.XmlQualifiedName.Empty"/> for
            		<paramref name="initialMode"/>.</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.Xml.XmlQualifiedName,System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)">
      <summary>
            Applies template rules with the specified initial mode to the specified context node and outputs the  primary result 
            document to an <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="initialMode">The initial mode.</param>
      <param name="contextNode">The initial context node for the stylesheet.</param>
      <param name="resultDocument">The <see cref="T:System.Xml.XmlWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialMode"/>, <paramref name="contextNode"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The default mode may be specified by passing <see cref="F:System.Xml.XmlQualifiedName.Empty"/> for
            		<paramref name="initialMode"/>.</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.Xml.XmlQualifiedName,System.Xml.XPath.IXPathNavigable,XmlPrime.IResultDocumentHandler)">
      <summary>
            Applies template rules with the specified initial mode to the specified context node and outputs all result documents using an
            object implementing the <see cref="T:XmlPrime.IResultDocumentHandler"/> interface.
            </summary>
      <param name="initialMode">The initial mode.</param>
      <param name="contextNode">The initial context node for the stylesheet.</param>
      <param name="resultDocumentHandler">The result document handler.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialMode"/>, <paramref name="contextNode"/> or <paramref name="resultDocumentHandler"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The default mode may be specified by passing <see cref="F:System.Xml.XmlQualifiedName.Empty"/> for
            		<paramref name="initialMode"/>.</para>
        <para>This method is suitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.Xml.XmlQualifiedName,XmlPrime.DynamicContextSettings,System.IO.Stream)">
      <summary>
            Applies template rules with the specified initial mode using the specific dynamic context settings.
            and outputs the  primary result document to a <see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="initialMode">The initial mode.</param>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocument">The <see cref="T:System.IO.Stream"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialMode"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The default mode may be specified by passing <see cref="F:System.Xml.XmlQualifiedName.Empty"/> for
            <paramref name="initialMode"/>.</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.Xml.XmlQualifiedName,XmlPrime.DynamicContextSettings,System.IO.TextWriter)">
      <summary>
            Applies template rules with the specified initial mode using the specific dynamic context settings
            and outputs the  primary result document to a <see cref="T:System.IO.TextWriter"/>.
            </summary>
      <param name="initialMode">The initial mode.</param>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocument">The <see cref="T:System.IO.TextWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialMode"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The default mode may be specified by passing <see cref="F:System.Xml.XmlQualifiedName.Empty"/> for
            <paramref name="initialMode"/>.</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.Xml.XmlQualifiedName,XmlPrime.DynamicContextSettings,System.Xml.XmlWriter)">
      <summary>
            Applies template rules with the specified initial mode using the specific dynamic context settings
            and outputs the  primary result document to a <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="initialMode">The initial mode.</param>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocument">The <see cref="T:System.Xml.XmlWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialMode"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The default mode may be specified by passing <see cref="F:System.Xml.XmlQualifiedName.Empty"/> for
            <paramref name="initialMode"/>.</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.ApplyTemplates(System.Xml.XmlQualifiedName,XmlPrime.DynamicContextSettings,XmlPrime.IResultDocumentHandler)">
      <summary>
            Applies template rules with the specified initial mode using the specific dynamic context settings and outputs
            all result documents using an object implementing the <see cref="T:XmlPrime.IResultDocumentHandler"/> interface.
            </summary>
      <param name="initialMode">The initial mode.</param>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocumentHandler">The result document handler.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialMode"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>The default mode may be specified by passing <see cref="F:System.Xml.XmlQualifiedName.Empty"/> for
            <paramref name="initialMode"/>.</para>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallInitialTemplate(System.Xml.XPath.IXPathNavigable,System.IO.Stream)">
      <overloads>
            	Calls the the named template <c>xsl:initial-template</c>.
            </overloads>
      <summary>
            	Calls the template named <c>xsl:initial-template</c> with the specified initial context node and outputs the primary result document to a
            	<see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="contextNode">The initial context node for the stylesheet.</param>
      <param name="resultDocument">The <see cref="T:System.IO.Stream"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
            	This method is unsuitable for use with multiple result documents.
            </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallInitialTemplate(System.Xml.XPath.IXPathNavigable,System.IO.TextWriter)">
      <summary>
            	Calls the template named <c>xsl:initial-template</c> with the specified initial context node and outputs the primary result document to a
            	<see cref="T:System.IO.TextWriter"/>.
            </summary>
      <param name="contextNode">The initial context node for the stylesheet.</param>
      <param name="resultDocument">The <see cref="T:System.IO.TextWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
            	This method is unsuitable for use with multiple result documents.
            </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallInitialTemplate(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)">
      <summary>
            	Calls the template named <c>xsl:initial-template</c>e with the specified initial context node and outputs the primary result document to an
            	<see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="contextNode">The initial context node for the stylesheet.</param>
      <param name="resultDocument">The <see cref="T:System.Xml.XmlWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
            	This method is unsuitable for use with multiple result documents.
            </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallInitialTemplate(XmlPrime.DynamicContextSettings,System.IO.Stream)">
      <summary>
            Calls the template named <c>xsl:initial-template</c> using the specified dynamic context settings and outputs the primary result document to a
            <see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocument">The <see cref="T:System.IO.Stream"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallInitialTemplate(XmlPrime.DynamicContextSettings,System.IO.TextWriter)">
      <summary>
            Calls the template named <c>xsl:initial-template</c> using the specified dynamic context settings and outputs the primary result document to a
            <see cref="T:System.IO.TextWriter"/>.
            </summary>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocument">The <see cref="T:System.IO.TextWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/> or <paramref name="resultDocument"/>  is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
            This method is unsuitable for use with multiple result documents.
            </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallInitialTemplate(XmlPrime.DynamicContextSettings,System.Xml.XmlWriter)">
      <summary>
            Calls the template named <c>xsl:initial-template</c> using the specified dynamic context settings and outputs the primary result document to an
            <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocument">The <see cref="T:System.Xml.XmlWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/> or <paramref name="resultDocument"/>  is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallInitialTemplate(XmlPrime.DynamicContextSettings,XmlPrime.IResultDocumentHandler)">
      <summary>
            Calls the template named <c>xsl:initial-template</c> using the specified dynamic context settings and outputs all result documents using an
            object implementing the <see cref="T:XmlPrime.IResultDocumentHandler"/> interface.
            </summary>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocumentHandler">The result document handler.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings"/> or <paramref name="resultDocumentHandler"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>This method is suitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallInitialTemplate(System.Xml.XmlReader,System.IO.Stream)">
      <summary>
            	Calls the template named <c>xsl:initial-template</c> with the specified initial context node and writes the primary result document to a
            	<see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="input">The <see cref="T:System.Xml.XmlReader"/> containing the input document.</param>
      <param name="resultDocument">The <see cref="T:System.IO.Stream"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
            	This method is unsuitable for use with multiple result documents.
            </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallInitialTemplate(System.Xml.XmlReader,System.IO.TextWriter)">
      <summary>
            	Calls the template named <c>xsl:initial-template</c> with the specified initial context node and outputs the primary result document to a
            	<see cref="T:System.IO.TextWriter"/>.
            </summary>
      <param name="input">The <see cref="T:System.Xml.XmlReader"/> containing the input document.</param>
      <param name="resultDocument">The <see cref="T:System.IO.TextWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
            	This method is unsuitable for use with multiple result documents.
            </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallInitialTemplate(System.Xml.XmlReader,System.Xml.XmlWriter)">
      <summary>
            	Calls the template named <c>xsl:initial-template</c> with the specified initial context node and outputs the result to an
            	<see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="input">The <see cref="T:System.Xml.XmlReader"/> containing the input document.</param>
      <param name="resultDocument">The <see cref="T:System.Xml.XmlWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
            	This method is unsuitable for use with multiple result documents.
            </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallInitialTemplate(System.Xml.XmlReader,XmlPrime.IResultDocumentHandler)">
      <summary>
            	Calls the template named <c>xsl:initial-template</c> with the specified initial context node and outputs all result documents
            	using object implementing the <see cref="T:XmlPrime.IResultDocumentHandler"/> interface.
            </summary>
      <param name="input">The <see cref="T:System.Xml.XmlReader"/> containing the input document.</param>
      <param name="resultDocumentHandler">The result document handler.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input"/> or <paramref name="resultDocumentHandler"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
      <remarks>
        <para>This method is suitable for use with multiple result documents.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.Xslt.CallTemplate(System.String,System.String,System.Xml.XPath.IXPathNavigable,System.IO.Stream)">
      <overloads>
            	Calls the specified named template.
            </overloads>
      <summary>
            	Calls the specified named template with the specified initial context node and outputs the primary result document to a
            	<see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="initialTemplateLocalName">The local name of the initial template.</param>
      <param name="initialTemplateNamespace">The namespace URI of the initial template.</param>
      <param name="contextNode">The initial context node for the stylesheet.</param>
      <param name="resultDocument">The <see cref="T:System.IO.Stream"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialTemplateLocalName"/>, <paramref name="initialTemplateNamespace"/>,
            	paramref name = "resultDocument" /&gt; is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
            	This method is unsuitable for use with multiple result documents.
            </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallTemplate(System.String,System.String,System.Xml.XPath.IXPathNavigable,System.IO.TextWriter)">
      <summary>
            	Calls the specified named template with the specified initial context node and outputs the primary result document to a
            	<see cref="T:System.IO.TextWriter"/>.
            </summary>
      <param name="initialTemplateLocalName">The local name of the initial template.</param>
      <param name="initialTemplateNamespace">The namespace URI of the initial template.</param>
      <param name="contextNode">The initial context node for the stylesheet.</param>
      <param name="resultDocument">The <see cref="T:System.IO.TextWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialTemplateLocalName"/>, <paramref name="initialTemplateNamespace"/> or
            	<paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
            	This method is unsuitable for use with multiple result documents.
            </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallTemplate(System.String,System.String,System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)">
      <summary>
            	Calls the specified named template with the specified initial context node and outputs the primary result document to an
            	<see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="initialTemplateLocalName">The local name of the initial template.</param>
      <param name="initialTemplateNamespace">The namespace URI of the initial template.</param>
      <param name="contextNode">The initial context node for the stylesheet.</param>
      <param name="resultDocument">The <see cref="T:System.Xml.XmlWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialTemplateLocalName"/>, <paramref name="initialTemplateNamespace"/> or
            	<paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
            	This method is unsuitable for use with multiple result documents.
            </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallTemplate(System.String,System.String,System.Xml.XPath.IXPathNavigable,XmlPrime.IResultDocumentHandler)">
      <summary>
            	Calls the specified named template and outputs all result documents
             using an object implementing the <see cref="T:XmlPrime.IResultDocumentHandler"/> interface.
            </summary>
      <param name="initialTemplateLocalName">The local name of the initial template.</param>
      <param name="initialTemplateNamespace">The namespace URI of the initial template.</param>
      <param name="contextNode">The initial context node for the stylesheet.</param>
      <param name="resultDocumentHandler">The result document handler.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialTemplateLocalName"/>, <paramref name="initialTemplateNamespace"/> or
            	<paramref name="resultDocumentHandler"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
      <remarks>
        <para>This method is suitable for use with multiple result documents.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.Xslt.CallTemplate(System.String,System.String,XmlPrime.DynamicContextSettings,System.IO.Stream)">
      <summary>
            Calls the specified named template using the specified dynamic context settings and outputs the primary result document to a
            <see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="initialTemplateLocalName">The local name of the initial template.</param>
      <param name="initialTemplateNamespace">The namespace URI of the initial template.</param>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocument">The <see cref="T:System.IO.Stream"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialTemplateLocalName"/>, <paramref name="initialTemplateNamespace"/> or
            <paramref name="settings"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallTemplate(System.String,System.String,XmlPrime.DynamicContextSettings,System.IO.TextWriter)">
      <summary>
            Calls the specified named template using the specified dynamic context settings and outputs the primary result document to a
            <see cref="T:System.IO.TextWriter"/>.
            </summary>
      <param name="initialTemplateLocalName">The local name of the initial template.</param>
      <param name="initialTemplateNamespace">The namespace URI of the initial template.</param>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocument">The <see cref="T:System.IO.TextWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialTemplateLocalName"/>, <paramref name="initialTemplateNamespace"/> or
            <paramref name="settings"/> or <paramref name="resultDocument"/>  is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
            This method is unsuitable for use with multiple result documents.
            </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallTemplate(System.String,System.String,XmlPrime.DynamicContextSettings,System.Xml.XmlWriter)">
      <summary>
            Calls the specified named template using the specified dynamic context settings and outputs the primary result document to an
            <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="initialTemplateLocalName">The local name of the initial template.</param>
      <param name="initialTemplateNamespace">The namespace URI of the initial template.</param>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocument">The <see cref="T:System.Xml.XmlWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialTemplateLocalName"/>, <paramref name="initialTemplateNamespace"/> or
            <paramref name="settings"/> or <paramref name="resultDocument"/>  is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallTemplate(System.String,System.String,XmlPrime.DynamicContextSettings,XmlPrime.IResultDocumentHandler)">
      <summary>
            Calls the specified named template using the specified dynamic context settings and outputs all result documents using an
            object implementing the <see cref="T:XmlPrime.IResultDocumentHandler"/> interface.
            </summary>
      <param name="initialTemplateLocalName">The local name of the initial template.</param>
      <param name="initialTemplateNamespace">The namespace URI of the initial template.</param>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocumentHandler">The result document handler.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialTemplateLocalName"/>, <paramref name="initialTemplateNamespace"/> or
            <paramref name="settings"/> or <paramref name="resultDocumentHandler"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>This method is suitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallTemplate(System.String,System.String,System.Xml.XmlReader,System.IO.Stream)">
      <summary>
            	Calls the specified named template with the specified initial context node and writes the primary result document to a
            	<see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="initialTemplateLocalName">The local name of the initial template.</param>
      <param name="initialTemplateNamespace">The namespace URI of the initial template.</param>
      <param name="input">The <see cref="T:System.Xml.XmlReader"/> containing the input document.</param>
      <param name="resultDocument">The <see cref="T:System.IO.Stream"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialTemplateLocalName"/>, <paramref name="initialTemplateNamespace"/>,
            	<paramref name="input"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
            	This method is unsuitable for use with multiple result documents.
            </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallTemplate(System.String,System.String,System.Xml.XmlReader,System.IO.TextWriter)">
      <summary>
            	Calls the specified named template with the specified initial context node and outputs the primary result document to a
            	<see cref="T:System.IO.TextWriter"/>.
            </summary>
      <param name="initialTemplateLocalName">The local name of the initial template.</param>
      <param name="initialTemplateNamespace">The namespace URI of the initial template.</param>
      <param name="input">The <see cref="T:System.Xml.XmlReader"/> containing the input document.</param>
      <param name="resultDocument">The <see cref="T:System.IO.TextWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialTemplateLocalName"/>, <paramref name="initialTemplateNamespace"/>,
            	<paramref name="input"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
            	This method is unsuitable for use with multiple result documents.
            </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallTemplate(System.String,System.String,System.Xml.XmlReader,System.Xml.XmlWriter)">
      <summary>
            	Calls the specified named template with the specified initial context node and outputs the result to an
            	<see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="initialTemplateLocalName">The local name of the initial template.</param>
      <param name="initialTemplateNamespace">The namespace URI of the initial template.</param>
      <param name="input">The <see cref="T:System.Xml.XmlReader"/> containing the input document.</param>
      <param name="resultDocument">The <see cref="T:System.Xml.XmlWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialTemplateLocalName"/>, <paramref name="initialTemplateNamespace"/>,
            	<paramref name="input"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
            	This method is unsuitable for use with multiple result documents.
            </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallTemplate(System.String,System.String,System.Xml.XmlReader,XmlPrime.IResultDocumentHandler)">
      <summary>
            	Calls the specified named template with the specified initial context node and outputs all result documents
            	using object implementing the <see cref="T:XmlPrime.IResultDocumentHandler"/> interface.
            </summary>
      <param name="initialTemplateLocalName">The local name of the initial template.</param>
      <param name="initialTemplateNamespace">The namespace URI of the initial template.</param>
      <param name="input">The <see cref="T:System.Xml.XmlReader"/> containing the input document.</param>
      <param name="resultDocumentHandler">The result document handler.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialTemplateLocalName"/>, <paramref name="initialTemplateNamespace"/>,
            	<paramref name="input"/> or <paramref name="resultDocumentHandler"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
      <remarks>
        <para>This method is suitable for use with multiple result documents.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.Xslt.CallTemplate(System.Xml.XmlQualifiedName,System.Xml.XPath.IXPathNavigable,System.IO.Stream)">
      <summary>
            	Calls the specified named template using the specified initial context node and outputs the primary result document to a
            	<see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="initialTemplateName">The name of the initial template.</param>
      <param name="contextNode">The initial context node for the stylesheet.</param>
      <param name="resultDocument">The <see cref="T:System.IO.Stream"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialTemplateName"/>,
            	<paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
            	This method is unsuitable for use with multiple result documents.
            </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallTemplate(System.Xml.XmlQualifiedName,System.Xml.XPath.IXPathNavigable,System.IO.TextWriter)">
      <summary>
            	Calls the specified named template using the specified initial context node and outputs the primary result document to a
            	<see cref="T:System.IO.TextWriter"/>.
            </summary>
      <param name="initialTemplateName">The name of the initial template.</param>
      <param name="contextNode">The initial context node for the stylesheet.</param>
      <param name="resultDocument">The <see cref="T:System.IO.TextWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialTemplateName"/>,
            	<paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
            	This method is unsuitable for use with multiple result documents.
            </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallTemplate(System.Xml.XmlQualifiedName,System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)">
      <summary>
            	Calls the specified named template using the specified initial context node and outputs the primary result document to an
            	<see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="initialTemplateName">The name of the initial template.</param>
      <param name="contextNode">The initial context node for the stylesheet.</param>
      <param name="resultDocument">The <see cref="T:System.Xml.XmlWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialTemplateName"/>,
            	<paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
            	This method is unsuitable for use with multiple result documents.
            </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallTemplate(System.Xml.XmlQualifiedName,System.Xml.XPath.IXPathNavigable,XmlPrime.IResultDocumentHandler)">
      <summary>
            	Calls the specified named template using the specified initial context node and outputs the results using an
            	object implementing the <see cref="T:XmlPrime.IResultDocumentHandler"/> interface.
            </summary>
      <param name="initialTemplateName">The name of the initial template.</param>
      <param name="contextNode">The initial context node for the stylesheet.</param>
      <param name="resultDocumentHandler">The result document handler.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialTemplateName"/>,
            	<paramref name="resultDocumentHandler"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            	Version 2.0]</seealso>
      <remarks>
        <para>This method is suitable for use with multiple result documents.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.Xslt.CallTemplate(System.Xml.XmlQualifiedName,System.Xml.XmlReader,System.IO.Stream)">
      <summary>
            Calls the specified named template using the specified input document and outputs the primary result document to a
            <see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="initialTemplateName">The name of the initial template.</param>
      <param name="input">The <see cref="T:System.Xml.XmlReader"/> containing the input document.</param>
      <param name="resultDocument">The <see cref="T:System.IO.Stream"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialTemplateName"/>,
            <paramref name="input"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
            This method is unsuitable for use with multiple result documents.
            </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallTemplate(System.Xml.XmlQualifiedName,System.Xml.XmlReader,System.IO.TextWriter)">
      <summary>
            Calls the specified named template using the specified input document and outputs the primary result document to a
            <see cref="T:System.IO.TextWriter"/>.
            </summary>
      <param name="initialTemplateName">The name of the initial template.</param>
      <param name="input">The <see cref="T:System.Xml.XmlReader"/> containing the input document.</param>
      <param name="resultDocument">The <see cref="T:System.IO.TextWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialTemplateName"/>,
            <paramref name="input"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
            This method is unsuitable for use with multiple result documents.
            </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallTemplate(System.Xml.XmlQualifiedName,System.Xml.XmlReader,System.Xml.XmlWriter)">
      <summary>
            Calls the specified named template using the specified input document and outputs the primary result document to an
            <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="initialTemplateName">The name of the initial template.</param>
      <param name="input">The initial context node for the stylesheet.</param>
      <param name="resultDocument">The <see cref="T:System.Xml.XmlWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialTemplateName"/>,
            <paramref name="input"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
            This method is unsuitable for use with multiple result documents.
            </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallTemplate(System.Xml.XmlQualifiedName,System.Xml.XmlReader,XmlPrime.IResultDocumentHandler)">
      <summary>
            Calls the specified named template using the specified input document and outputs result documents using an
            object implementing the <see cref="T:XmlPrime.IResultDocumentHandler"/> interface.
            </summary>
      <param name="initialTemplateName">The name of the initial template.</param>
      <param name="input">The <see cref="T:System.Xml.XmlReader"/> containing the input document.</param>
      <param name="resultDocumentHandler">The result document handler.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialTemplateName"/>,
            <paramref name="input"/> or <paramref name="resultDocumentHandler"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>This method is suitable for use with multiple result documents.</remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallTemplate(System.Xml.XmlQualifiedName,XmlPrime.DynamicContextSettings,System.IO.Stream)">
      <summary>
            Calls the specified named template using the specified dynamic context settings and outputs the primary result document to a
            <see cref="T:System.IO.Stream"/>.
            </summary>
      <param name="initialTemplateName">The name of the initial template.</param>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocument">The <see cref="T:System.IO.Stream"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialTemplateName"/>,
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            Version 2.0]</seealso>
      <remarks>
            This method is unsuitable for use with multiple result documents.
            </remarks>
    </member>
    <member name="M:XmlPrime.Xslt.CallTemplate(System.Xml.XmlQualifiedName,XmlPrime.DynamicContextSettings,System.IO.TextWriter)">
      <summary>
            Calls the specified named template using the specified dynamic context settings and outputs the primary result document to a
            <see cref="T:System.IO.TextWriter"/>.
            </summary>
      <param name="initialTemplateName">The name of the initial template.</param>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocument">The <see cref="T:System.IO.TextWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialTemplateName"/>,
            <paramref name="settings"/>  or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.CallTemplate(System.Xml.XmlQualifiedName,XmlPrime.DynamicContextSettings,System.Xml.XmlWriter)">
      <summary>
            Calls the specified named template using the specified dynamic context settings and outputs the primary result document to an
            <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="initialTemplateName">The name of the initial template.</param>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocument">The <see cref="T:System.Xml.XmlWriter"/> to which the primary result document will be written.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialTemplateName"/>,
            <paramref name="settings"/> or <paramref name="resultDocument"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            Version 2.0]</seealso>
      <remarks>
        <para>This method is unsuitable for use with multiple result documents.</para>
      </remarks>
    </member>
    <member name="M:XmlPrime.Xslt.CallTemplate(System.Xml.XmlQualifiedName,XmlPrime.DynamicContextSettings,XmlPrime.IResultDocumentHandler)">
      <summary>
            Calls the specified named template using the specified dynamic context settings and outputs all result documents using an
            object implementing the <see cref="T:XmlPrime.IResultDocumentHandler"/> interface.
            </summary>
      <param name="initialTemplateName">The name of the initial template.</param>
      <param name="settings">The settings of the dynamic evaluation context.</param>
      <param name="resultDocumentHandler">The result document handler.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="initialTemplateName"/>,
            <paramref name="settings"/> or <paramref name="resultDocumentHandler"/> is <see langword="null"/>.
            </exception>
      <exception cref="T:XmlPrime.XdmException">Raised if a non-recoverable error is encountered.</exception>
      <remarks>
        <para>This method is suitable for use with multiple result documents.</para>
      </remarks>
      <seealso href="http://www.w3.org/TR/xslt20/#initiating">2.3 Initiating a Transformation [XSL Transformations (XSLT)
            Version 2.0]</seealso>
    </member>
    <member name="M:XmlPrime.Xslt.Explain(System.Xml.XmlWriter)">
      <summary>
            	Writes the transformation execution plan to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
      <param name="xmlWriter">The XML writer to which the transformation execution plan is to be written.</param>
    </member>
    <member name="P:XmlPrime.Xslt.InputSettings">
      <summary>
            	Gets the input settings.
            </summary>
      <value>The input settings.</value>
    </member>
    <member name="P:XmlPrime.Xslt.SerializationSettings">
      <summary>
            	Gets the settings requested for serialization.
            </summary>
      <value>The serialization settings.</value>
      <remarks>
            	These settings are the serialization settings as defined in the <see cref="T:XmlPrime.StaticContextSettings"/>,
            	augmented by any default output definitions in the stylesheet.
            </remarks>
    </member>
  </members>
</doc>